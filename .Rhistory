dat <- data2@data
setwd("S:/PhD/Fourth chapter/Data")
write.csv(dat, "random_used_points.csv")
write.csv(dat, "random_used_points.csv")
rm(list = ls())
library(raster)
library(rgdal)
library(rgeos)
# 1. ---- Load layers ----
# Human
camin <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/clip_camin_4326.tif")
carret <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/clip_asp_4326.tif")
nuc <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/clip_nuc_4326.tif")
stack_human <- stack(camin, carret, nuc)
# Terrain
slope <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/clip_slope_4326.tif")
# Usos
cereal_17 <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/usos/cereal_17.tif")
cereal_18 <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/usos/cereal_18.tif")
barbecho_17 <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/usos/barbecho_17.tif")
barbecho_18 <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/usos/barbecho_18.tif")
herb_secano_17 <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/usos/herb_secano_17.tif")
herb_secano_18 <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/usos/herb_secano_18.tif")
herb_regadio_17 <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/usos/herb_regadio_17.tif")
herb_regadio_18 <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/usos/herb_regadio_18.tif")
frut_regadio_17 <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/usos/frut_regadio_17.tif")
frut_regadio_18 <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/usos/frut_regadio_18.tif")
olivo_17 <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/usos/olivo_17.tif")
olivo_18 <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/usos/olivo_18.tif")
almendro_17 <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/usos/almendro_17.tif")
almendro_18 <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/usos/almendro_18.tif")
pastos <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/usos/pastos.tif")
forestal <- raster("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326/clips/usos/forestal.tif")
stack_usos <- stack(cereal_17, cereal_18, barbecho_17, barbecho_18, herb_secano_17, herb_secano_18,
herb_regadio_17, herb_regadio_18, frut_regadio_17, frut_regadio_18, olivo_17, olivo_18,
almendro_17, almendro_18)
stack_pastos <- stack(pastos, forestal)
setwd("S:/PhD/Fourth chapter/Data")
d <- read.csv("random_used_points.csv", header = TRUE)
# Add year to extract the variables of each year
d$Year <- NA
d$Year[which(d$Logger_ID %in% c("CIP03", "CIP04"))] <- 2017
d$Year[which(d$Logger_ID %in% c("PIC02", "PIC15", "PIC17"))] <- 2018
coord <- d[ ,c("x","y")] # Coordinates used and random
cells <- cellFromXY(stack_human, coord) # 1. Tells the number of the cells where the coord. fall
cov_human <- stack_human[cells]           # 2. Returns the value of those cells in the stack
cells <- cellFromXY(slope, coord)
cov_slope <- slope[cells]
cells <- cellFromXY(stack_usos, coord)
cov_usos <- stack_usos[cells]
cov_usos <- as.data.frame(cov_usos)
cells <- cellFromXY(stack_pastos, coord)
cov_pastos <- stack_pastos[cells]
df <- data.frame(d, cov_human, cov_slope, cov_usos, cov_pastos) # Join
# Arrange the column of usos (accordying to the year of the individual)
df$cereal <- NA
df$barbecho <- NA
df$herb_secano <- NA
df$herb_regadio <- NA
df$frut_regadio <- NA
df$olivo <- NA
df$almendro <- NA
for(i in 1:nrow(df)){
df$cereal[i] <- ifelse(df$Year[i] == 2017,  df$cereal_17[i], df$cereal_18[i])
df$barbecho[i] <- ifelse(df$Year[i] == 2017,  df$barbecho_17[i], df$barbecho_18[i])
df$herb_secano[i] <- ifelse(df$Year[i] == 2017,  df$herb_secano_17[i], df$herb_secano_18[i])
df$herb_regadio[i] <- ifelse(df$Year[i] == 2017,  df$herb_regadio_17[i], df$herb_regadio_18[i])
df$frut_regadio[i] <- ifelse(df$Year[i] == 2017,  df$frut_regadio_17[i], df$frut_regadio_18[i])
df$olivo[i] <- ifelse(df$Year[i] == 2017,  df$olivo_17[i], df$olivo_18[i])
df$almendro[i] <- ifelse(df$Year[i] == 2017,  df$almendro_17[i], df$almendro_18[i])
}
# Select columns
colnames(df)
df <- df[ ,which(colnames(df) %in% c("Logger_ID", "y", "x", "ID_p", "used", "Year",
"clip_camin_4326", "clip_asp_4326", "clip_nuc_4326", "cov_slope",
"pastos", "forestal", "cereal", "barbecho", "herb_secano", "herb_regadio", "frut_regadio", "olivo", "almendro"))]
# Check the ones that fall outside
study_area <- readOGR("S:/PhD/Fourth chapter/GIS/Capas_variables/EPSG_4326", "studyarea_pteroclids_EPSG_4326")
mcp_99 <- readOGR("S:/PhD/Fourth chapter/GPS CataluÃ±a", "mcp99")
coordinates(df) <- df[ ,c("x", "y")]
proj4string(df) <- proj4string(study_area) # As SpatialPointsDataFrame
plot(study_area)
plot(mcp_99, add = TRUE)
points(df)
writeOGR(df, 'S:/PhD/Fourth chapter/GIS', "cov", driver="ESRI Shapefile")
setwd("S:/PhD/Fourth chapter/Data")
write.csv (df, "covariates.csv")
writeOGR(df, 'S:/PhD/Fourth chapter/GIS', "cov", driver="ESRI Shapefile")
setwd("S:/PhD/Fourth chapter/Data")
write.csv (df, "covariates.csv")
writeOGR(df, 'S:/PhD/Fourth chapter/GIS', "covariates_gps", driver="ESRI Shapefile")
# Select columns
colnames(df)
df <- data.frame(d, cov_human, cov_slope, cov_usos, cov_pastos) # Join coordinates with extracted values
# Arrange the column of usos (accordying to the year of the individual)
df$cereal <- NA
df$barbecho <- NA
df$herb_secano <- NA
df$herb_regadio <- NA
df$frut_regadio <- NA
df$olivo <- NA
df$almendro <- NA
for(i in 1:nrow(df)){
df$cereal[i] <- ifelse(df$Year[i] == 2017,  df$cereal_17[i], df$cereal_18[i])
df$barbecho[i] <- ifelse(df$Year[i] == 2017,  df$barbecho_17[i], df$barbecho_18[i])
df$herb_secano[i] <- ifelse(df$Year[i] == 2017,  df$herb_secano_17[i], df$herb_secano_18[i])
df$herb_regadio[i] <- ifelse(df$Year[i] == 2017,  df$herb_regadio_17[i], df$herb_regadio_18[i])
df$frut_regadio[i] <- ifelse(df$Year[i] == 2017,  df$frut_regadio_17[i], df$frut_regadio_18[i])
df$olivo[i] <- ifelse(df$Year[i] == 2017,  df$olivo_17[i], df$olivo_18[i])
df$almendro[i] <- ifelse(df$Year[i] == 2017,  df$almendro_17[i], df$almendro_18[i])
}
# Select columns
colnames(df)
df <- df[ ,which(colnames(df) %in% c("Logger_ID", "y", "x", "ID_p", "used", "Year",
"clip_camin_4326", "clip_asp_4326", "clip_nuc_4326", "cov_slope",
"pastos", "forestal", "cereal", "barbecho", "herb_secano", "herb_regadio", "frut_regadio", "olivo", "almendro"))]
# Select columns
colnames(df)
colnames(df)[7]<- "dist_caminos"
colnames(df)[8]<- "dist_carreteras"
colnames(df)[9]<- "dist_nucleosurb"
colnames(df)[10]<- "pendiente"
setwd("S:/PhD/Fourth chapter/Data")
write.csv (df, "covariates.csv")
coordinates(df) <- df[ ,c("x", "y")]
proj4string(df) <- proj4string(study_area) # As SpatialPointsDataFrame
writeOGR(df, 'S:/PhD/Fourth chapter/GIS', "covariates_gps", driver="ESRI Shapefile")
setwd("S:/PhD/Fourth chapter/Data")
rm(list = ls())
setwd("S:/PhD/Fourth chapter/Data")
data <- read.csv ("covariates.csv", header = TRUE)
View(data)
# Check correlation
cor(data[ ,c(8:20)])
# Check correlation
correlation <- cor(data[ ,c(8:20)])
View(correlation)
# Check correlation
is.na(data)
# Check correlation
which(is.na(data))
# Check correlation
data[which(is.na(data)), ]
data <- data[-which(is.na(data)), ]
correlation <- cor(data[ ,c(8:20)])
correlation
hist(data$dist_caminos)
hist(data$dist_carreteras)
which(is.na(data))
data <- data[-which(is.na(data)), ]
correlation <- cor(data[ ,c(8:20)])
which(is.na(data))
setwd("S:/PhD/Fourth chapter/Data")
data <- read.csv ("covariates.csv", header = TRUE)
data <- data[-which(is.na(data)), ]
data <- data[complete.cases(data), ]
correlation <- cor(data[ ,c(8:20)])
correlation
which(correlation > 0.4)
which(correlation > 0.4 & correlation < 1)
which(correlation > 0.5 & correlation < 1)
correlation[which(correlation > 0.5 & correlation < 1), ]
correlation[which(correlation > 0.5 & correlation < 1)]
correlation <- as.data.frame(cor(data[ ,c(8:20)]))
correlation[which(correlation > 0.5 & correlation < 1), ]
correlation[which(correlation > 0.5 & correlation < 1)]
hist(data$dist_carreteras)
correlation[which(correlation > 0.5 & correlation < 1)]
correlation[which(correlation > 0.5 & correlation < 1), ]
correlation <- cor(data[ ,c(8:20)])
correlation[which(correlation > 0.5 & correlation < 1), ]
correlation[which(correlation > 0.5 & correlation < 1)]
install.packages("MuMIn")
library(lme4)
library(MuMIn)
#             Pastos - Cereal
names(data)
# Period 1
unique(data$ID_p)
# Period 1
ID_p <- unique(data$ID_p)
grep("p1", ID_p)
ID_p[grep("p1", ID_p)]
data_p1 <- data[which(data$ID_p %in% ID_p[grep("p1", ID_p)]), ]
data_p2 <- data[which(data$ID_p %in% ID_p[grep("p2", ID_p)]), ]
data_p3 <- data[which(data$ID_p %in% ID_p[grep("p3", ID_p)]), ]
p2 <- glmer(used ~ dist_caminos + dist_carreteras + pendiente +
forestal + cereal + barbecho + herb_secano + herb_regadio +
frut_regadio + olivo + almendro + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
summary(p2)
p2 <- glmer(used ~ dist_caminos + dist_carreteras + pendiente +
cereal + barbecho + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_1<- glmer(used ~ dist_caminos + dist_carreteras + pendiente +
cereal + barbecho + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
summary(p2)
summary(p2_1)
p2_1<- glmer(used ~ dist_caminos + dist_carreteras + pendiente +
cereal + barbecho + herb_secano + herb_regadio + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_1<- glmer(used ~ dist_caminos + dist_carreteras + pendiente +
cereal + barbecho + herb_secano + frut_regadio + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_1<- glmer(used ~ dist_caminos + dist_carreteras + pendiente +
cereal + barbecho + frut_regadio + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_1<- glmer(used ~ dist_caminos + dist_carreteras + pendiente +
cereal + barbecho + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_2<- glmer(used ~ dist_caminos + dist_carreteras + pendiente +
cereal + barbecho + herb_regadio + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
View(data)
data <- data[ , -c(10, 12)]
data_sc <- scale(data, center = TRUE, scale = TRUE)
data_sc <- scale(data[ ,c(8:18)], center = TRUE, scale = TRUE)
setwd("S:/PhD/Fourth chapter/Data")
data <- read.csv ("covariates.csv", header = TRUE)
# Check correlation
data <- data[complete.cases(data), ] # I don't know but I delete because I don't have time
correlation <- cor(data[ ,c(8:20)])
correlation[which(correlation > 0.5 & correlation < 1)] # Correlated: Dist carreteras - Dist nucleos urbanos (0.6)
#             Pastos - Cereal
names(data) # Quitar: Dist nucleos urbanos y pastos
data <- data[ , -c(10, 12)]
data_sc <- scale(data[ ,c(8:18)], center = TRUE, scale = TRUE)
View(data_sc)
data_var <- data[ ,c(1:7)]
dat <- cbind(data_var, data_sc)
View(dat)
rm(list = ls())
library(lme4)
library(MuMIn)
# Run GLMM
setwd("S:/PhD/Fourth chapter/Data")
data <- read.csv ("covariates.csv", header = TRUE)
# Check correlation
data <- data[complete.cases(data), ] # I don't know but I delete because I don't have time
correlation <- cor(data[ ,c(8:20)])
correlation[which(correlation > 0.5 & correlation < 1)] # Correlated: Dist carreteras - Dist nucleos urbanos (0.6)
#             Pastos - Cereal
names(data) # Quitar: Dist nucleos urbanos y pastos
data <- data[ , -c(10, 12)]
data[ ,c(8:18)] <- scale(data[ ,c(8:18)], center = TRUE, scale = TRUE)
p2 <- glmer(used ~ dist_caminos + dist_carreteras + pendiente +      # Full model: It doesn't converge
forestal + cereal + barbecho + herb_secano + herb_regadio +
frut_regadio + olivo + almendro + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
ID_p <- unique(data$ID_p)
ID_p[grep("p1", ID_p)]
data_p1 <- data[which(data$ID_p %in% ID_p[grep("p1", ID_p)]), ]
data_p2 <- data[which(data$ID_p %in% ID_p[grep("p2", ID_p)]), ]
data_p3 <- data[which(data$ID_p %in% ID_p[grep("p3", ID_p)]), ]
# Period 2
p2 <- glmer(used ~ dist_caminos + dist_carreteras + pendiente +      # Full model: It doesn't converge
forestal + cereal + barbecho + herb_secano + herb_regadio +
frut_regadio + olivo + almendro + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_2<- glmer(used ~ dist_caminos + dist_carreteras + pendiente +
cereal + barbecho + herb_regadio + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_3<- glmer(used ~ dist_caminos + dist_carreteras + pendiente +
cereal + barbecho + herb_regadio +
frut_regadio + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_4<- glmer(used ~ dist_caminos + dist_carreteras + pendiente +  # Converges
cereal + barbecho + herb_regadio + frut_regadio +
+ olivo + almendro +
(1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_4<- glmer(used ~ dist_caminos + dist_carreteras + pendiente +  # Converges
cereal + barbecho + herb_regadio + frut_regadio +
+ olivo +
(1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_4<- glmer(used ~ dist_caminos + dist_carreteras + pendiente +  # Converges
cereal + barbecho + herb_regadio + frut_regadio +
olivo + almendro +
(1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_4<- glmer(used ~ dist_caminos + dist_carreteras + pendiente +  # Converges
cereal + barbecho + herb_regadio + frut_regadio +
olivo +
(1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_5 <- glmer(used ~ dist_caminos + dist_carreteras + pendiente +  # Converges
cereal + barbecho + herb_regadio + frut_regadio +
olivo + herb_secano +
(1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_5 <- glmer(used ~ dist_caminos + dist_carreteras + pendiente +
forestal +
cereal + barbecho + herb_secano + herb_regadio +
frut_regadio + olivo + #almendro +
(1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_1 <- glmer(used ~ dist_caminos + dist_carreteras + pendiente +  # Without forestal and almendro converges
# forestal +
cereal + barbecho + herb_secano + herb_regadio +
frut_regadio + olivo + #almendro +
(1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
summary(p2_1)
m_al <- dredge(p2_1, beta = "none", evaluate = TRUE )
options(na.action=na.fail)
m_al <- dredge(p2_1, beta = "none", evaluate = TRUE )
load("al_dred_p2.RData")
a <- get.models(m_al,subset = delta < 2)
save(a,file = "topmodels_p2.RData")
avg_al <- model.avg(a)
save(avg_al,file = "avg_p2.RData")
View(m_al)
a
View(m_al)
avg_al
avg_al <- model.avg(a)
View(m_al)
# TOMORROW: JUNTAR OLIVOS Y ALMENDROS
summary(p2_1)
rm(list = ls())
library(lme4)
library(MuMIn)
# Run GLMM
setwd("S:/PhD/Fourth chapter/Data")
data <- read.csv ("covariates.csv", header = TRUE)
# Check correlation
data <- data[complete.cases(data), ] # I don't know but I delete because I don't have time
correlation <- cor(data[ ,c(8:21)])
correlation[which(correlation > 0.5 & correlation < 1)] # Correlated: Dist carreteras - Dist nucleos urbanos (0.6)
#             Frut secano - Olivo y almendro
names(data) # Quitar: Dist nucleos urbanos, olivo y almendro
data <- data[ , -c(10, 19, 20)]
data[ ,c(8:18)] <- scale(data[ ,c(8:18)], center = TRUE, scale = TRUE)
# ---- Separate by periods ----
ID_p <- unique(data$ID_p)
ID_p[grep("p1", ID_p)]
data_p1 <- data[which(data$ID_p %in% ID_p[grep("p1", ID_p)]), ]
data_p2 <- data[which(data$ID_p %in% ID_p[grep("p2", ID_p)]), ]
data_p3 <- data[which(data$ID_p %in% ID_p[grep("p3", ID_p)]), ]
p2_3 <- glmer(used ~ dist_caminos + dist_carreteras + pendiente +      # Without forestal, frut regadio and herb_secano: It CONVERGES
pastos +
#forestal +
cereal + barbecho +
#herb_secano +
herb_regadio +
#frut_regadio +
frut_secano + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
options(na.action = na.fail)
models_p2 <- dredge(p2_3, beta = "none", evaluate = TRUE )
setwd("S:/PhD/Fourth chapter/Data/Results")
save(models_p2, file = "dredge_p2.RData")
load("dredge_p2.RData")
topmodels_p2 <- get.models(models_p2,subset = delta < 2)
avg_p2 <- model.avg(topmodels_p2)
topmodels_p3
topmodels_p2
View(topmodels_p2)
View(models_p2)
avg_p2
gps <- readOGR("S:/PhD/Fourth chapter/GPS CataluÃ±a/Ganga/17-18_rep/periods_no_flying", "gps")
rm(list=ls())
library(adehabitatHR)
library(sp)
library(rgdal)
# ---- 1.  Create MCP per individual (remove field of periods for now) ----
gps <- readOGR("S:/PhD/Fourth chapter/GPS CataluÃ±a/Ganga/17-18_rep/periods_no_flying", "gps")
rm(list = ls())
library(lme4)
library(MuMIn)
# Run GLMM
setwd("S:/PhD/Fourth chapter/Data")
data <- read.csv ("covariates.csv", header = TRUE)
# Check correlation
data <- data[complete.cases(data), ] # I don't know but I delete because I don't have time
correlation <- cor(data[ ,c(8:21)])
correlation[which(correlation > 0.5 & correlation < 1)] # Correlated: Dist carreteras - Dist nucleos urbanos (0.6)
#             Frut secano - Olivo y almendro
names(data) # Quitar: Dist nucleos urbanos, olivo y almendro
data_unscaled <- data[ , -c(10, 19, 20)]
data[ ,c(8:18)] <- scale(data[ ,c(8:18)], center = TRUE, scale = TRUE)
#### Separate by periods ####
ID_p <- unique(data$ID_p)
ID_p[grep("p1", ID_p)]
data_p1 <- data[which(data$ID_p %in% ID_p[grep("p1", ID_p)]), ]
data_p2 <- data[which(data$ID_p %in% ID_p[grep("p2", ID_p)]), ]
data_p3 <- data[which(data$ID_p %in% ID_p[grep("p3", ID_p)]), ]
load("dredge_p1.RData")
setwd("S:/PhD/Fourth chapter/Data/Results")
load("dredge_p1.RData")
topmodels_p1 <- get.models(models_p1,subset = delta < 2)
View(topmodels_p1)
View(models_p1)
selec <- model.sel(models_p1)
View(selec)
newdata <- as.data.frame(lapply(lapply(data_p3[, -c(1:7,13)], mean), rep, 25))
newdata
data_p3
newdata <- as.data.frame(lapply(lapply(data_p3[, -c(1:7,13, 14)], mean), rep, 25))
newdata
newdata <- as.data.frame(lapply(lapply(data_p1[, -c(1:7,13, 14)], mean), rep, 25))
newdata$cereal_new <- seq(min(data_p1$cereal), max(data_p1$cereal), length.out = 25)
avg_p1 <- model.avg(topmodels_p1)
pred <- predict(avg_p1, newdata = newdata, type = "response", se.fit = TRUE )
avg_p1
newdata <- as.data.frame(lapply(lapply(data_p1[, -c(1:7,13, 14)], mean), rep, 25))
newdata$cereal <- seq(min(data_p1$cereal), max(data_p1$cereal), length.out = 25)
pred <- predict(avg_p1, newdata = newdata, type = "response", se.fit = TRUE )
pred
lcl <- pred$fit - 1.96*pred$se.fit
lch <- pred$fit + 1.96*pred$se.fit
plot(pred$fit ~ newdata$cereal_new ,main = "p1")
segments(x0=c(1:6),
x1=c(1:6),
y0=lcl,
y1=lch)
plot(pred$fit ~ newdata$cereal ,main = "p1")
segments(x0=c(1:6),
x1=c(1:6),
y0=lcl,
y1=lch)
newdata$cereal
avg_p1
lines(x0=c(1:6),
x1=c(1:6),
y0=lcl,
y1=lch)
lcl
?lines
plot(pred$fit ~ newdata$cereal ,main = "p1")
lines(lcl, lch)
fit
pred$fit
lch
plot(pred$fit ~ newdata$cereal, ylim = c(-0.5, 0.5) main = "p1")
plot(pred$fit ~ newdata$cereal, ylim = c(-0.5, 0.5), main = "p1")
lines(lcl, lch)
points(lcl, type = "l")
points(lcl, type = "l")
points(lch, type = "l")
newx <- seq(min(newdata$cereal),max(newdata$cereal),by = 0.05)
lines(newx, lcl)
newx <- seq(min(newdata$cereal),max(newdata$cereal), length.out = 25)
lines(newx, lcl)
plot(pred$fit ~ newdata$cereal, ylim = c(-1, 1), main = "p1")
plot(pred$fit ~ newdata$cereal, ylim = c(-1, 1), main = "p1", type = "l")
newx <- seq(min(newdata$cereal),max(newdata$cereal), length.out = 25)
lines(newx, lcl)
lines(newx, lcl, col = red)
lines(newx, lcl, col = "red")
lines(newx, lch, col = "red")
polygon( x = c(newdata$cereal, rev(newdata$cereal)),
y = c(lcl, rev(lch)),
col = adjustcolor(c("grey"),alpha.f = 0.6),
border = NA)
plot(pred$fit ~ newdata$cereal, ylim = c(-1, 1), main = "p1", type = "l")
polygon( x = c(newdata$cereal, rev(newdata$cereal)),
y = c(lcl, rev(lch)),
col = adjustcolor(c("grey"),alpha.f = 0.6),
border = NA)
newx <- seq(min(newdata$cereal),max(newdata$cereal), length.out = 25)
lines(newx, lcl, col = "red")
lines(newx, lch, col = "red")
load("dredge_p2.RData")
newdata <- as.data.frame(lapply(lapply(data_p2[, -c(1:7,13, 14)], mean), rep, 25))
newdata <- as.data.frame(lapply(lapply(data_p2[, -c(1:7,13, 14)], mean), rep, 25))
newdata$cereal <- seq(min(data_p2$cereal), max(data_p2$cereal), length.out = 25)
pred <- predict(avg_p2, newdata = newdata, type = "response", se.fit = TRUE )
load("dredge_p2.RData")
topmodels_p2 <- get.models(models_p2,subset = delta < 2)
avg_p2 <- model.avg(topmodels_p2)
newdata <- as.data.frame(lapply(lapply(data_p2[, -c(1:7,13, 14)], mean), rep, 25))
newdata$cereal <- seq(min(data_p2$cereal), max(data_p2$cereal), length.out = 25)
pred <- predict(avg_p2, newdata = newdata, type = "response", se.fit = TRUE )
View(topmodels_p2)
View(models_p2)
p2_3 <- glmer(used ~ dist_caminos + dist_carreteras + pendiente +      # Without forestal, frut regadio and herb_secano: It CONVERGES
pastos +
#forestal +
cereal + barbecho +
#herb_secano +
herb_regadio +
#frut_regadio +
frut_secano + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
pred <- predict(p2_3, newdata = newdata, type = "response", se.fit = TRUE )
newdata <- as.data.frame(lapply(lapply(data_p2[, -c(1:7,13, 14)], mean), rep, 25))
newdata$cereal <- seq(min(data_p2$cereal), max(data_p2$cereal), length.out = 25)
pred2 <- predict(p2_3, newdata = newdata, type = "response", se.fit = TRUE )
