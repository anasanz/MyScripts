#geom_point() +
#geom_line() +
geom_smooth(data = data_p3, aes(x = pastos, y = used),
method = "glm", method.args = list(family = "binomial")) + # Aqui la linea es la del glm sobre la respuesta (y)
#facet_wrap(~Sector) +
labs(x = " Pastos ", y = "Prob. selection") +
ylim(0,1) +
#xlim(0,10) +
theme(
#panel.background = element_blank(),
#axis.line = element_line(linetype = 1 ),
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)))
# 5. Cereal
p3_cereal <- ggplot(data_p3, aes(x = cereal, y = pred$fit)) +
#geom_point() +
#geom_line() +
geom_smooth(data = data_p3, aes(x = cereal, y = used),
method = "glm", method.args = list(family = "binomial")) + # Aqui la linea es la del glm sobre la respuesta (y)
#facet_wrap(~Sector) +
labs(x = " Cereal ", y = "Prob. selection") +
ylim(0,1) +
#xlim(0,10) +
theme(
#panel.background = element_blank(),
#axis.line = element_line(linetype = 1 ),
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)))
# 6. Barbecho
p3_barbecho <- ggplot(data_p3, aes(x = barbecho, y = pred$fit)) +
#geom_point() +
#geom_line() +
geom_smooth(data = data_p3, aes(x = barbecho, y = used),
method = "glm", method.args = list(family = "binomial")) + # Aqui la linea es la del glm sobre la respuesta (y)
#facet_wrap(~Sector) +
labs(x = " Barbecho ", y = "Prob. selection") +
ylim(0,1) +
#xlim(0,10) +
theme(
#panel.background = element_blank(),
#axis.line = element_line(linetype = 1 ),
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)))
p3_distasp
p3_pend
p3_past
p3_cereal
summary(p3)
p3_cereal
p2_cereal
p1_cereal
p3_barbecho
> install.packages("moveVis")
install.packages("moveVis")
install.packages("move")
install.packages("Rtools")
library(moveVis)
library(move)
library(ggplot2)
library(dplyr)
library(readr)
setwd("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/Data")
rm(list = ls())
setwd("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/Data")
data <- read.csv ("random_used_points.csv", header = TRUE)
View(data)
gps <- readOGR("S:/PhD/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "gps")
gps <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "gps")
gps@data
cip03_p1 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "cip03_p1")
cip03_p2 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "cip03_p2")
cip03_p3 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "cip03_p3")
cip04_p1 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "cip04_p1")
cip04_p2 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "cip04_p2")
cip04_p3 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "cip04_p3")
pic02_p2 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "pic02_p2")
pic02_p3 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "pic02_p3")
pic15_p2 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "pic15_p2")
pic15_p3 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "pic15_p3")
pic17_p2 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "pic17_p2")
pic17_p3 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "pic17_p3")
proj4string(pic17_p3)
cip03_p1$ID_p <- "cip03_p1"
cip03_p2$ID_p <- "cip03_p2"
cip03_p3$ID_p <- "cip03_p3"
cip04_p1$ID_p <- "cip04_p1"
cip04_p2$ID_p <- "cip04_p2"
cip04_p3$ID_p <- "cip04_p3"
pic02_p2$ID_p <- "pic02_p2"
pic02_p3$ID_p <- "pic02_p3"
pic15_p2$ID_p <- "pic15_p2"
pic15_p3$ID_p <- "pic15_p3"
pic17_p2$ID_p <- "pic17_p2"
pic17_p3$ID_p <- "pic17_p3"
colnames(cip03_p1@data)
cip03_p1@data <- cip03_p1@data[ ,which(colnames(cip03_p1@data) %in% c("Logger_ID", "ID_p", "Year", "Month", "Day", "Hour", "Second", "Latitude", "Longitude"))]
cip03_p1@data
colnames(pic02_p2@data)
cip03_p1 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "cip03_p1")
cip03_p2 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "cip03_p2")
cip03_p3 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "cip03_p3")
cip04_p1 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "cip04_p1")
cip04_p2 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "cip04_p2")
cip04_p3 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "cip04_p3")
pic02_p2 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "pic02_p2")
pic02_p3 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "pic02_p3")
pic15_p2 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "pic15_p2")
pic15_p3 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "pic15_p3")
pic17_p2 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "pic17_p2")
pic17_p3 <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "pic17_p3")
proj4string(pic17_p3)
# Create column to identify each period
cip03_p1$ID_p <- "cip03_p1"
cip03_p2$ID_p <- "cip03_p2"
cip03_p3$ID_p <- "cip03_p3"
cip04_p1$ID_p <- "cip04_p1"
cip04_p2$ID_p <- "cip04_p2"
cip04_p3$ID_p <- "cip04_p3"
pic02_p2$ID_p <- "pic02_p2"
pic02_p3$ID_p <- "pic02_p3"
pic15_p2$ID_p <- "pic15_p2"
pic15_p3$ID_p <- "pic15_p3"
pic17_p2$ID_p <- "pic17_p2"
pic17_p3$ID_p <- "pic17_p3"
# Select same columns
cip03_p1@data <- cip03_p1@data[ ,which(colnames(cip03_p1@data) %in% c("Logger_ID", "ID_p", "Year", "Month", "Day", "Hour", "Minute", "Second", "Latitude", "Longitude"))]
cip03_p2@data <- cip03_p2@data[ ,which(colnames(cip03_p2@data) %in% c("Logger_ID", "ID_p", "Year", "Month", "Day", "Hour", "Minute", "Second", "Latitude", "Longitude"))]
cip03_p3@data <- cip03_p3@data[ ,which(colnames(cip03_p3@data) %in% c("Logger_ID", "ID_p", "Year", "Month", "Day", "Hour", "Minute", "Second", "Latitude", "Longitude"))]
cip04_p1@data <- cip04_p1@data[ ,which(colnames(cip04_p1@data) %in% c("Logger_ID", "ID_p", "Year", "Month", "Day", "Hour", "Minute", "Second", "Latitude", "Longitude"))]
cip04_p2@data <- cip04_p2@data[ ,which(colnames(cip04_p2@data) %in% c("Logger_ID", "ID_p", "Year", "Month", "Day", "Hour", "Minute", "Second", "Latitude", "Longitude"))]
cip04_p3@data <- cip04_p3@data[ ,which(colnames(cip04_p3@data) %in% c("Logger_ID", "ID_p", "Year", "Month", "Day", "Hour", "Minute", "Second", "Latitude", "Longitude"))]
pic02_p2@data <- pic02_p2@data[ ,which(colnames(pic02_p2@data) %in% c("Logger_ID", "ID_p", "Year", "Month", "Day", "Hour", "Minute", "Second", "Latitude", "Longitude"))]
pic02_p3@data <- pic02_p3@data[ ,which(colnames(pic02_p3@data) %in% c("Logger_ID", "ID_p", "Year", "Month", "Day", "Hour", "Minute", "Second", "Latitude", "Longitude"))]
pic15_p2@data <- pic15_p2@data[ ,which(colnames(pic15_p2@data) %in% c("Logger_ID", "ID_p", "Year", "Month", "Day", "Hour", "Minute", "Second", "Latitude", "Longitude"))]
pic15_p3@data <- pic15_p3@data[ ,which(colnames(pic15_p3@data) %in% c("Logger_ID", "ID_p", "Year", "Month", "Day", "Hour", "Minute", "Second", "Latitude", "Longitude"))]
pic17_p2@data <- pic17_p2@data[ ,which(colnames(pic17_p2@data) %in% c("Logger_ID", "ID_p", "Year", "Month", "Day", "Hour", "Minute", "Second", "Latitude", "Longitude"))]
pic17_p3@data <- pic17_p3@data[ ,which(colnames(pic17_p3@data) %in% c("Logger_ID", "ID_p", "Year", "Month", "Day", "Hour", "Minute", "Second", "Latitude", "Longitude"))]
gps <- rbind(cip03_p1, cip03_p2, cip03_p3, cip04_p1, cip04_p2, cip04_p3,
pic02_p2, pic02_p3, pic15_p2, pic15_p3, pic17_p2, pic17_p3)
writeOGR(gps, 'C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying', "gps_datetime", driver="ESRI Shapefile")
gps <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "gps_datetime")
gps@data
gps@data$date <- as.Date(with(gps, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
gps@data$date <- as.Date(with(gps@data, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
gps@data
gps@data$datetime <- with(gps@data, as.POSIXct(paste(Year, Month, Day, Hour, Minute), format="%Y-%m-%d %H:%M"))
gps@data
class(gps@data$date)
gps@data$datetime <- with(gps@data, as.POSIXlt(paste(Year, Month, Day, Hour, Minute), format="%Y-%m-%d %H:%M"))
gps@data
gps@data$time <- paste(gps@data$Hour,":",gps@data$Minute,sep="")
gps@data$time
gps@data$datetime <- with(gps@data, as.POSIXlt(paste(date, time), format="%Y-%m-%d %H:%M"))
gps@data
gps@data$datetime
gps@data$datetime <- with(gps@data, as.POSIXlt(paste(date, time), format="%Y-%m-%d %H:%M", tz="UTC"))
gps@data$datetime
gps@data
time_stack <- as.POSIXlt(paste(gps@data$date, gps@data$time), format="%Y-%m-%d %H:%M", tz="UTC")
gps <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "gps_datetime")
gps@data$date <- as.Date(with(gps@data, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
gps@data$time <- paste(gps@data$Hour,":",gps@data$Minute,sep="")
time_stack <- as.POSIXlt(paste(gps@data$date, gps@data$time), format="%Y-%m-%d %H:%M", tz="UTC")
gps <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "gps_datetime")
gps@data$date <- as.Date(with(gps@data, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
gps@data$time <- paste(gps@data$Hour,":",gps@data$Minute,sep="")
gps@data$datetime <- with(gps@data, as.POSIXlt(paste(date, time), format="%Y-%m-%d %H:%M", tz="UTC"))
gps <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "gps_datetime")
gps@data$date <- as.Date(with(gps@data, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
gps@data$time <- paste(gps@data$Hour,":",gps@data$Minute,sep="")
#gps@data$datetime <- with(gps@data, as.POSIXlt(paste(date, time), format="%Y-%m-%d %H:%M", tz="UTC"))
time_stack <- as.POSIXlt(paste(gps@data$date, gps@data$time), format="%Y-%m-%d %H:%M", tz="UTC")
# Join datetime to data frame
TD_move <- cbind(gps, time_stack)
proj4string(gps)
TD_move
gps@data
td_move <- df2move(TD_move, "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
"Longitude", "Latitude",
time="time_stack", track_id = "Logger_ID")
gps <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "gps_datetime")
gps@data$date <- as.Date(with(gps@data, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
gps@data$time <- paste(gps@data$Hour,":",gps@data$Minute,sep="")
gps_data <- gps@data
time_stack <- as.POSIXlt(paste(gps@data$date, gps@data$time), format="%Y-%m-%d %H:%M", tz="UTC")
proj4string(gps)
# Join datetime to data frame
TD_move <- cbind(gps_data, time_stack)
TD_move
td_move <- df2move(TD_move, "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
"Longitude", "Latitude",
time="time_stack", track_id = "Logger_ID")
td_move
class(gps@data$date)
# Join datetime to data frame
PTER_move <- cbind(gps_data, time_stack)
pter_move <- df2move(TD_move, "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
"Longitude", "Latitude",
time="time_stack", track_id = "Logger_ID")
unique(timestamps(pter_move))
timeLag(pter_move, unit = "days")
timestamps(pter_move)
?timeLag()
??timeLag
timeLag(pter_move, unit = "days")
TD_move <-
read_delim("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/Congreso SEO/Plots/TD_move_SP_UK_FR_DE.csv",";", escape_double = FALSE,
col_types = cols(Date = col_date(format = "%d/%m/%Y"), Time = col_time(format = "%H:%M:%S")),
trim_ws = TRUE)
View(TD_move)
View(TD_move)
time_stack <- as.POSIXct(paste(TD_move$Date, TD_move$Time), format =
"%Y-%m-%d %H:%M:%S",tz="UTC")
#Afegeixo aquest objecte al data frame
TD_move <- cbind(TD_move, time_stack)
#Converteixo dataframe a move object http://movevis.org/reference/df2move.html
td_cat_move<-df2move(TD_move, "+proj=longlat +ellps=WGS84 +datum=WGS84
+no_defs", "Longitude", "Latitude", time="time_stack", track_id =
+"ID")
#Converteixo dataframe a move object http://movevis.org/reference/df2move.html
td_cat_move<-df2move(TD_move, "+proj=longlat +ellps=WGS84 +datum=WGS84
+no_defs", "Longitude", "Latitude", time="time_stack", track_id = "ID")
#©això son descriptius de les dades
unique(timestamps(td_cat_move))
timeLag(td_cat_move, unit = "days")
pter_move
library(moveVis)
library(move)
data("move_data")
rm(list = ls())
data("move_data")
View(move_data)
# the tracks in move_data have irregular timestamps and sampling rates.
# print unique timestamps and timeLag
unique(timestamps(move_data))
unique(unlist(timeLag(move_data, units = "secs")))
# resolution of 1 hour (3600 seconds) at digit 0 (:00 seconds) per timestamp:
m <- align_move(move_data, res = 3600, digit = 0, unit = "secs")
unique(unlist(timeLag(m, units = "secs")))
# resolution of 1 hour (3600 seconds) at digit 0 (:00 seconds) per timestamp:
m <- align_move(move_data, res = 3600, digit = 0, unit = "secs")
m
unique(unlist(timeLag(m, units = "secs")))
# resolution of 1 hour (15 seconds) at digit 0 (:00 seconds) per timestamp:
m <- align_move(move_data, res = 15, digit = 0, unit = "secs")
m
unique(unlist(timeLag(m, units = "secs")))
# resolution of 1 hour:
m <- align_move(move_data, res = 60, unit = "mins")
unique(unlist(timeLag(m, units = "secs")))
timeLag(td_cat_move, unit = "days")
TD_move <-
read_delim("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/Congreso SEO/Plots/TD_move_SP_UK_FR_DE.csv",";", escape_double = FALSE,
col_types = cols(Date = col_date(format = "%d/%m/%Y"), Time = col_time(format = "%H:%M:%S")),
trim_ws = TRUE)
View(TD_move)
#Converteixo data i hora a un Objecte de classe POSIXct
time_stack <- as.POSIXct(paste(TD_move$Date, TD_move$Time), format =
"%Y-%m-%d %H:%M:%S",tz="UTC")
#Afegeixo aquest objecte al data frame
TD_move <- cbind(TD_move, time_stack)
#Converteixo dataframe a move object http://movevis.org/reference/df2move.html
td_cat_move<-df2move(TD_move, "+proj=longlat +ellps=WGS84 +datum=WGS84
+no_defs", "Longitude", "Latitude", time="time_stack", track_id = "ID")
#©això son descriptius de les dades
unique(timestamps(td_cat_move))
timeLag(td_cat_move, unit = "days")
gps <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "gps_datetime")
gps@data$date <- as.Date(with(gps@data, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
gps@data$time <- paste(gps@data$Hour,":",gps@data$Minute,sep="")
gps_data <- gps@data
#gps@data$datetime <- with(gps@data, as.POSIXlt(paste(date, time), format="%Y-%m-%d %H:%M", tz="UTC"))
time_stack <- as.POSIXlt(paste(gps@data$date, gps@data$time), format="%Y-%m-%d %H:%M", tz="UTC")
proj4string(gps)
# Join datetime to data frame
PTER_move <- cbind(gps_data, time_stack)
# Convert to move object
pter_move <- df2move(TD_move, "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
"Longitude", "Latitude",
time="time_stack", track_id = "Logger_ID")
unique(timestamps(pter_move))
timeLag(pter_move, unit = "days")
pter_move <- df2move(PTER_move, "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
"Longitude", "Latitude",
time="time_stack", track_id = "Logger_ID")
unique(timestamps(pter_move))
timeLag(pter_move, unit = "days")
timeLag(pter_move, unit = "secs")
timeLag(pter_move, unit = "hours")
# use align_move to correct move_data to a uniform time scale and lag using interpolation.
# resolution of 4 minutes (240 seconds) at digit 0 (:00 seconds) per timestamp:
m <- align_move(move_data, res = 240, digit = 0, unit = "secs")
unique(unlist(timeLag(m, units = "secs")))
# resolution of 1 hour (3600 seconds) at digit 0 (:00 seconds) per timestamp:
m <- align_move(move_data, res = 3600, digit = 0, unit = "secs")
unique(unlist(timeLag(m, units = "secs")))
# Align
pter_move_aligned <- align_move(pter_move, res = 3600, digit = 0, unit = "secs")
# Align
pter_move_aligned <- align_move(pter_move, res = 3600, digit = 0, unit = "secs")
unique(unlist(timeLag(pter_move_aligned, units = "secs")))
# Create frames
#frames_spatial creates a list of ggplot2 maps displaying movement. Each object represents a single frame.
#Each frame can be viewed or modified individually. The returned list of frames can be animated using animate_frames.
frames <- frames_spatial(pter_move_aligned, map_service = "osm", map_type = "topographic",
alpha = 0.5,  trace_show = TRUE)
get_maptypes()
pter_move <- df2move(PTER_move, "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
"Longitude", "Latitude",
time="time_stack", track_id = "Logger_ID")
pter_move
pter_move@trackId
pter_move_cip03 <- pter_move[pter_move@trackId == "CIP03"]
unique(timestamps(pter_move_cip03))
timeLag(pter_move_cip03, unit = "days")
timeLag(pter_move_cip03, unit = "hours") # This means that is basically hourly positions?
# Align
pter_move_cip03_aligned <- align_move(pter_move_cip03, res = 3600, digit = 0, unit = "secs") # Adjust to hourly positions?
unique(unlist(timeLag(pter_move_aligned, units = "secs")))
# Create frames
#frames_spatial creates a list of ggplot2 maps displaying movement. Each object represents a single frame.
#Each frame can be viewed or modified individually. The returned list of frames can be animated using animate_frames.
frames <- frames_spatial(pter_move_cip03_aligned, map_service = "mapbox", map_type = "satellite",
alpha = 0.5,  trace_show = TRUE)
get_maptypes()
# Create frames
#frames_spatial creates a list of ggplot2 maps displaying movement. Each object represents a single frame.
#Each frame can be viewed or modified individually. The returned list of frames can be animated using animate_frames.
frames <- frames_spatial(pter_move_cip03_aligned, map_service = "osm", map_type = "topographic",
alpha = 0.5,  trace_show = TRUE)
# Align
pter_move_cip03_aligned <- align_move(pter_move_cip03, res = 6, digit = 0, unit = "hours") # Adjust to hourly positions?
unique(unlist(timeLag(pter_move_aligned, units = "secs")))
# Create frames
#frames_spatial creates a list of ggplot2 maps displaying movement. Each object represents a single frame.
#Each frame can be viewed or modified individually. The returned list of frames can be animated using animate_frames.
frames <- frames_spatial(pter_move_cip03_aligned, map_service = "osm", map_type = "topographic",
alpha = 0.5,  trace_show = TRUE)
View(gps_data)
# Align
pter_move_cip03_aligned <- align_move(pter_move_cip03, res = 12, digit = 0, unit = "hours") # Adjust to hourly positions?
unique(unlist(timeLag(pter_move_aligned, units = "secs")))
# Create frames
#frames_spatial creates a list of ggplot2 maps displaying movement. Each object represents a single frame.
#Each frame can be viewed or modified individually. The returned list of frames can be animated using animate_frames.
frames <- frames_spatial(pter_move_cip03_aligned, map_service = "osm", map_type = "topographic",
alpha = 0.5,  trace_show = TRUE)
rm(list = ls())
gps <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "gps_datetime")
gps@data$date <- as.Date(with(gps@data, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
gps@data$time <- paste(gps@data$Hour,":",gps@data$Minute,sep="")
gps_data <- gps@data
#gps@data$datetime <- with(gps@data, as.POSIXlt(paste(date, time), format="%Y-%m-%d %H:%M", tz="UTC"))
time_stack <- as.POSIXlt(paste(gps@data$date, gps@data$time), format="%Y-%m-%d %H:%M", tz="UTC")
View(gps_data)
rm(list = ls())
PTEALC <-
read_delim("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/Congreso SEO/Plots/Gangues_2019.csv",
";", escape_double = FALSE, col_types = cols(Date = col_date(format = "%d/%m/%Y"), Time = col_time(format = "%H:%M")),trim_ws = TRUE)
View(PTEALC)
PTEALC <- subset(PTEALC, ID != 'GUE04')
PTEALC <- subset(PTEALC, ID = 'GUE04')
PTEALC <- subset(PTEALC, ID != 'GUE04')
PTEALC <- subset(PTEALC, ID = 'GUE04')
PTEALC <-
read_delim("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/Congreso SEO/Plots/Gangues_2019.csv",
";", escape_double = FALSE, col_types = cols(Date = col_date(format = "%d/%m/%Y"), Time = col_time(format = "%H:%M")),trim_ws = TRUE)
PTEALC <- subset(PTEALC, ID = 'GUE04')
PTEALC <- subset(PTEALC, ID != 'GUE04')
PTEALC <-
read_delim("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/Congreso SEO/Plots/Gangues_2019.csv",
";", escape_double = FALSE, col_types = cols(Date = col_date(format = "%d/%m/%Y"), Time = col_time(format = "%H:%M")),trim_ws = TRUE)
PTEALC <- subset(PTEALC, ID = 'GUE04')
time_stack <- as.POSIXct(paste(PTEALC$Date, PTEALC$Time), format = "%Y-%m-%d %H:%M:%S",tz="UTC")
#Afegeixo aquest objecte al data frame
PTEALC <- cbind(PTEALC, time_stack)
PTEALC_move<-df2move(PTEALC, "+proj=longlat +ellps=WGS84 +datum=WGS84
+no_defs", "Longitude", "Latitude", time="time_stack", track_id = "ID")
PTEALC_move<-df2move(PTEALC, "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs", "Longitude", "Latitude", time="time_stack", track_id = "ID")
PTEALC
PTEALC <- subset(PTEALC, ID != 'GUE04')
time_stack <- as.POSIXct(paste(PTEALC$Date, PTEALC$Time), format = "%Y-%m-%d %H:%M:%S",tz="UTC")
#Afegeixo aquest objecte al data frame
PTEALC <- cbind(PTEALC, time_stack)
PTEALC_move<-df2move(PTEALC, "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs", "Longitude", "Latitude", time="time_stack", track_id = "ID")
#©això son descriptius de les dades
unique(timestamps(PTEALC_move))
timeLag(PTEALC_move, unit = "hours")
PTEALC_move <- align_move(PTEALC_move, res = 1, digit = 0, unit = "hours")
frames <- frames_spatial(PTEALC_move, path_colours = c("red", "green",
"blue", "yellow", "pink"),
map_service = "osm", map_type = "watercolor",
alpha = 0.5)
frames.a <- add_timestamps(frames, PTEALC_move, type = "text")
length(frames.a) # number of frames
frames.a[[2000]] # display one of the frames
animate_frames(frames.a, out_file =
"C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/Congreso SEO/Plots/PTEALC_2019_v2.mp4")
unique(PTEALC$ID)
PTEALC <-
read_delim("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/Congreso SEO/Plots/Gangues_2019.csv",
";", escape_double = FALSE, col_types = cols(Date = col_date(format = "%d/%m/%Y"), Time = col_time(format = "%H:%M")),trim_ws = TRUE)
unique(PTEALC$ID)
PTEALC <- subset(PTEALC, ID != 'GUE04')
unique(PTEALC$ID)
PTEALC <- subset(PTEALC, ID = 'GUE04')
PTEALC <-
read_delim("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/Congreso SEO/Plots/Gangues_2019.csv",
";", escape_double = FALSE, col_types = cols(Date = col_date(format = "%d/%m/%Y"), Time = col_time(format = "%H:%M")),trim_ws = TRUE)
PTEALC <- subset(PTEALC, ID = 'GUE04')
unique(PTEALC$ID)
PTEALC <- subset(PTEALC, ID != 'GUE04')
PTEALC <-
read_delim("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/Congreso SEO/Plots/Gangues_2019.csv",
";", escape_double = FALSE, col_types = cols(Date = col_date(format = "%d/%m/%Y"), Time = col_time(format = "%H:%M")),trim_ws = TRUE)
PTEALC <- subset(PTEALC, ID != 'GUE04')
#PTEALC <- subset(PTEALC, ID = 'GUE04')
unique(PTEALC$ID)
time_stack <- as.POSIXct(paste(PTEALC$Date, PTEALC$Time), format = "%Y-%m-%d %H:%M:%S",tz="UTC")
View(PTEALC)
gps <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "gps_datetime")
gps@data$date <- as.Date(with(gps@data, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
gps@data$time <- paste(gps@data$Hour,":",gps@data$Minute,":",gps@data$Minute, sep="")
gps@data$time
gps <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "gps_datetime")
gps@data$date <- as.Date(with(gps@data, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
gps@data$time <- paste(gps@data$Hour,":",gps@data$Minute,":",gps@data$Second, sep="")
gps_data <- gps@data
View(gps_data)
View(PTEALC)
PTEALC <-
read_delim("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/Congreso SEO/Plots/Gangues_2019.csv",
";", escape_double = FALSE, col_types = cols(Date = col_date(format = "%d/%m/%Y"), Time = col_time(format = "%H:%M")),trim_ws = TRUE)
View(PTEALC)
PTEALC <- subset(PTEALC, ID != 'GUE04')
#PTEALC <- subset(PTEALC, ID = 'GUE04')
unique(PTEALC$ID)
#Converteixo data i hora a un Objecte de classe POSIXct
time_stack <- as.POSIXct(paste(PTEALC$Date, PTEALC$Time), format = "%Y-%m-%d %H:%M:%S",tz="UTC")
#Afegeixo aquest objecte al data frame
PTEALC <- cbind(PTEALC, time_stack)
rm(list = ls())
gps <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "gps_datetime")
gps@data$date <- as.Date(with(gps@data, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
gps@data$time <- paste(gps@data$Hour,":",gps@data$Minute,":",gps@data$Second, sep="")
gps_data <- gps@data
#gps@data$datetime <- with(gps@data, as.POSIXlt(paste(date, time), format="%Y-%m-%d %H:%M", tz="UTC"))
time_stack <- as.POSIXlt(paste(gps_data$date, gps_data$time), format="%Y-%m-%d %H:%M:%S", tz="UTC")
View(gps_data)
gps_data <- gps_data[ ,c(1,8,9)]
# Join datetime to data frame
PTER_move <- cbind(gps_data, time_stack)
pter_move <- df2move(PTER_move, "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
"Longitude", "Latitude",
time="time_stack", track_id = "Logger_ID")
unique(timestamps(pter_move))
timeLag(pter_move, unit = "days")
timeLag(pter_move, unit = "hours") # This means that is basically hourly positions?
# Align
pter_move_aligned <- align_move(pter_move, res = 1, digit = 0, unit = "hours") # Adjust to hourly positions?
unique(unlist(timeLag(pter_move_aligned, units = "hours")))
# Create frames
#frames_spatial creates a list of ggplot2 maps displaying movement. Each object represents a single frame.
#Each frame can be viewed or modified individually. The returned list of frames can be animated using animate_frames.
frames <- frames_spatial(pter_move_aligned, map_service = "mapbox", map_type = "satellite",
alpha = 0.5,  trace_show = TRUE)
# Create frames
#frames_spatial creates a list of ggplot2 maps displaying movement. Each object represents a single frame.
#Each frame can be viewed or modified individually. The returned list of frames can be animated using animate_frames.
frames <- frames_spatial(pter_move_aligned, map_service = "osm", map_type = "topographic",
alpha = 0.5,  trace_show = TRUE)
pter_move_aligned <- align_move(pter_move, res = 6, digit = 0, unit = "hours") # Adjust to hourly positions
unique(unlist(timeLag(pter_move_aligned, units = "hours")))
# Create frames
#frames_spatial creates a list of ggplot2 maps displaying movement. Each object represents a single frame.
#Each frame can be viewed or modified individually. The returned list of frames can be animated using animate_frames.
frames <- frames_spatial(pter_move_aligned, map_service = "osm", map_type = "topographic",
alpha = 0.5,  trace_show = TRUE)
View(pter_move_aligned)
View(gps_data)
gps <- readOGR("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "gps_datetime")
gps@data$date <- as.Date(with(gps@data, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
gps@data
View(PTER_move)
rm(list = ls())
PTEALC <-
read_delim("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/Congreso SEO/Plots/Gangues_2019.csv",
";", escape_double = FALSE, col_types = cols(Date = col_date(format = "%d/%m/%Y"), Time = col_time(format = "%H:%M")),trim_ws = TRUE)
View(PTEALC)
#PTEALC <- subset(PTEALC, ID = 'GUE04')
unique(PTEALC$ID)
class(PTEALC)
class(PTEALC$Date)
class(PTEALC$Time)
time_stack <- as.POSIXct(paste(PTEALC$Date, PTEALC$Time), format = "%Y-%m-%d %H:%M:%S",tz="UTC")
time_stack
#Afegeixo aquest objecte al data frame
PTEALC <- cbind(PTEALC, time_stack)
PTEALC_move<-df2move(PTEALC, "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs", "Longitude", "Latitude", time="time_stack", track_id = "ID")
PTEALC_move <- align_move(PTEALC_move, res = 1, digit = 0, unit = "hours")
PTEALC <- subset(PTEALC, ID != 'GUE04')
#PTEALC <- subset(PTEALC, ID = 'GUE04')
unique(PTEALC$ID)
time_stack <- as.POSIXct(paste(PTEALC$Date, PTEALC$Time), format = "%Y-%m-%d %H:%M:%S",tz="UTC")
#Afegeixo aquest objecte al data frame
PTEALC <- cbind(PTEALC, time_stack)
PTEALC_move<-df2move(PTEALC, "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs", "Longitude", "Latitude", time="time_stack", track_id = "ID")
PTEALC_move<-df2move(PTEALC, "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs", "Longitude", "Latitude", time="time_stack", track_id = "ID")
#©això son descriptius de les dades
unique(timestamps(PTEALC_move))
timeLag(PTEALC_move, unit = "hours")
PTEALC_move <- align_move(PTEALC_move, res = 1, digit = 0, unit = "hours")
