gps <- merge(cip03_p1, cip03_p2, cip03_p3, cip04_p1, cip04_p2, cip04_p3,
pic02_p2, pic02_p3, pic15_p2, pic15_p3, pic17_p2, pic17_p3)
df <- gps@data
View(df)
gps <- rbind(cip03_p1, cip03_p2, cip03_p3, cip04_p1, cip04_p2, cip04_p3,
pic02_p2, pic02_p3, pic15_p2, pic15_p3, pic17_p2, pic17_p3)
names(cip03_p1)
cip03_p1@data <- cip03_p1@data[ ,which(colnames(cip03_p1@data) %in% c("Logger_ID", "ID_p", "Latitude", "Longitude"))]
names(cip03_p1)
cip03_p2@data <- cip03_p2@data[ ,which(colnames(cip03_p2@data) %in% c("Logger_ID", "ID_p", "Latitude", "Longitude"))]
cip03_p3@data <- cip03_p3@data[ ,which(colnames(cip03_p3@data) %in% c("Logger_ID", "ID_p", "Latitude", "Longitude"))]
cip03_p1@data <- cip03_p1@data[ ,which(colnames(cip03_p1@data) %in% c("Logger_ID", "ID_p", "Latitude", "Longitude"))]
cip03_p2@data <- cip03_p2@data[ ,which(colnames(cip03_p2@data) %in% c("Logger_ID", "ID_p", "Latitude", "Longitude"))]
cip03_p3@data <- cip03_p3@data[ ,which(colnames(cip03_p3@data) %in% c("Logger_ID", "ID_p", "Latitude", "Longitude"))]
cip04_p1@data <- cip04_p1@data[ ,which(colnames(cip04_p1@data) %in% c("Logger_ID", "ID_p", "Latitude", "Longitude"))]
cip04_p2@data <- cip04_p2@data[ ,which(colnames(cip04_p2@data) %in% c("Logger_ID", "ID_p", "Latitude", "Longitude"))]
cip04_p3@data <- cip04_p3@data[ ,which(colnames(cip04_p3@data) %in% c("Logger_ID", "ID_p", "Latitude", "Longitude"))]
pic02_p2@data <- pic02_p2@data[ ,which(colnames(pic02_p2@data) %in% c("Logger_ID", "ID_p", "Latitude", "Longitude"))]
pic02_p3@data <- pic02_p3@data[ ,which(colnames(pic02_p3@data) %in% c("Logger_ID", "ID_p", "Latitude", "Longitude"))]
pic15_p2@data <- pic15_p2@data[ ,which(colnames(pic15_p2@data) %in% c("Logger_ID", "ID_p", "Latitude", "Longitude"))]
pic15_p3@data <- pic15_p3@data[ ,which(colnames(pic15_p3@data) %in% c("Logger_ID", "ID_p", "Latitude", "Longitude"))]
pic17_p2@data <- pic17_p2@data[ ,which(colnames(pic17_p2@data) %in% c("Logger_ID", "ID_p", "Latitude", "Longitude"))]
pic17_p3@data <- pic17_p3@data[ ,which(colnames(pic17_p3@data) %in% c("Logger_ID", "ID_p", "Latitude", "Longitude"))]
gps <- rbind(cip03_p1, cip03_p2, cip03_p3, cip04_p1, cip04_p2, cip04_p3,
pic02_p2, pic02_p3, pic15_p2, pic15_p3, pic17_p2, pic17_p3)
gps@•data
gps@data
df <- gps@data
View(df)
writeOGR(gps, 'S:/PhD/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying', "gps", driver="ESRI Shapefile")
rm(list=ls())
library(adehabitatHR)
library(sp)
library(rgdal)
gps <- readOGR("S:/PhD/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "gps")
# Create MCP per individual (remove field of periods for now)
c <- gps@data[ ,-c(4)]
coordinates(c) <- cbind(c$Longitude,c$Latitude)
proj4string(c)
pic17_p3 <- readOGR("S:/PhD/Fourth chapter/GPS Cataluña/Ganga/17-18_rep/periods_no_flying", "pic17_p3")
proj4string(pic17_p3)
proj4string(c) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0" # As SpatialPointsDataFrame
c[,1]
c <- c@data
coordinates(c) <- cbind(c$Longitude,c$Latitude)
proj4string(c) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0" # As SpatialPointsDataFrame
mcp_100 <- mcp(c[,1], percent = 100) # Create MCP for each territory
plot(mcp_100,col = mcp_100$id)
plot(mcp_100[1, ])
mcp_100
mcp_95 <- mcp(c[,1], percent = 95) # Create MCP for each territory
plot(mcp_95,col = mcp_95$id)
mcp_90 <- mcp(c[,1], percent = 90) # Create MCP for each territory
plot(mcp_90,col = mcp_90$id)
writeOGR(mcp_100, 'S:/PhD/Fourth chapter/GPS Cataluña', "mcp100", driver="ESRI Shapefile")
writeOGR(mcp_95, 'S:/PhD/Fourth chapter/GPS Cataluña', "mcp95", driver="ESRI Shapefile")
writeOGR(mcp_90, 'S:/PhD/Fourth chapter/GPS Cataluña', "mcp90", driver="ESRI Shapefile")
mcp_97 <- mcp(c[,1], percent = 97) # Create MCP for each territory
plot(mcp_97,col = mcp_97$id)
writeOGR(mcp_97, 'S:/PhD/Fourth chapter/GPS Cataluña', "mcp97", driver="ESRI Shapefile")
writeOGR(mcp_97, 'S:/PhD/Fourth chapter/GPS Cataluña', "mcp97", driver="ESRI Shapefile")
mcp_99 <- mcp(c[,1], percent = 99) # Create MCP for each territory
plot(mcp_99,col = mcp_99$id)
dun17 <- readOGR("S:/PhD/Fourth chapter/GIS/SIGPAC_DUN", "Cultius_DUN2017_4326")
#### Load clips DUN ####
dun17 <- readOGR("S:/PhD/Fourth chapter/GIS/SIGPAC_DUN", "clip_dun17_4326")
clip_dun17_mcp <- crop(dun17, extent(mcp_99), snap="out")
unique(clip_dun17_mcp$Cultiu)
head(clip_dun17_mcp)
writeOGR(mcp_99, 'S:/PhD/Fourth chapter/GPS Cataluña', "mcp99", driver="ESRI Shapefile")
rm(list = ls())
#### Load clips DUN ####
dun17 <- readOGR("S:/PhD/Fourth chapter/GIS/SIGPAC_DUN", "clip_dun17_4326")
dun18 <- readOGR("S:/PhD/Fourth chapter/GIS/SIGPAC_DUN", "clip_dun18_4326")
# Crop with different MCP to see uses
mcp99 <- readOGR("S:/PhD/Fourth chapter/GPS Cataluña", "mcp99")
dun17_mcp <- crop(dun17, extent(mcp_99), snap="out")
# Crop with different MCP to see uses
mcp99 <- readOGR("S:/PhD/Fourth chapter/GPS Cataluña", "mcp99")
dun17_mcp <- crop(dun17, extent(mcp99), snap="out")
unique(clip_dun17_mcp$Cultiu)
unique(dun17_mcp$Cultiu)
unique(dun17_mcp$Seca_Regad)
df <- dun17_mcp@data
View(df)
dun17_mcp$uso <- NA
which(dun17_mcp$Cultiu == "ORDI" & dun17_mcp$Seca_Regad == "S")
dun17_mcp[which(dun17_mcp$Cultiu == "ORDI" & dun17_mcp$Seca_Regad == "S"), ]
dun17_mcp$uso[which(dun17_mcp$Cultiu == "ORDI" & dun17_mcp$Seca_Regad == "S")] <- "CEREAL"
dun17_mcp[which(dun17_mcp$Cultiu == "ORDI" & dun17_mcp$Seca_Regad == "R"), ]
unique(dun17_mcp$Cultiu)
dun17_mcp[which(dun17_mcp$Cultiu == "AMETLLERS" & dun17_mcp$Seca_Regad == "R"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "AMETLLERS" & dun17_mcp$Seca_Regad == "S"), ]
dun17_mcp$uso[which(dun17_mcp$Cultiu == "AMETLLERS" & dun17_mcp$Seca_Regad == "S")] <-
dun17_mcp[which(dun17_mcp$Cultiu == "GUARET NO SIE/ SUP. LLIURE SE*" & dun17_mcp$Seca_Regad == "R"), ]
dun17_mcp$uso[which(dun17_mcp$Cultiu == "AMETLLERS" & dun17_mcp$Seca_Regad == "S")] <-
dun17_mcp[which(dun17_mcp$Cultiu == "GUARET NO SIE/ SUP. LLIURE SE*" & dun17_mcp$Seca_Regad == "S"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "AMETLLERS" & dun17_mcp$Seca_Regad == "S"), ]
dun17_mcp$uso[which(dun17_mcp$Cultiu == "AMETLLERS" & dun17_mcp$Seca_Regad == "S")] <-
dun17_mcp[which(dun17_mcp$Cultiu == "GUARET NO SIE/ SUP. LLIURE SE*" & dun17_mcp$Seca_Regad == "S"), ]
dun17_mcp$uso[which(dun17_mcp$Cultiu == "AMETLLERS" & dun17_mcp$Seca_Regad == "S")] <-
dun17_mcp[which(dun17_mcp$Cultiu == "GUARET NO SIE/ SUP. LLIURE SE*"), ]
dun17_mcp$uso[which(dun17_mcp$Cultiu == "AMETLLERS" & dun17_mcp$Seca_Regad == "S")] <-
dun17_mcp[which(dun17_mcp$Cultiu == "GUARET NO SIE/ SUP. LLIURE SE*"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "GUARET NO SIE/ SUP. LLIURE SE*"), ]
unique(dun17_mcp$Cultiu)
dun17_mcp$uso[which(dun17_mcp$Cultiu == "AMETLLERS" & dun17_mcp$Seca_Regad == "S")] <-
dun17_mcp[which(dun17_mcp$Cultiu == "OLIVERES" & dun17_mcp$Seca_Regad == "S"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "OLIVERES" & dun17_mcp$Seca_Regad == "S"), ]
dun17_mcp$uso[which(dun17_mcp$Cultiu == "AMETLLERS" & dun17_mcp$Seca_Regad == "S")] <-
dun17_mcp[which(dun17_mcp$Cultiu == "OLIVERES" & dun17_mcp$Seca_Regad == "R"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "OLIVERES" & dun17_mcp$Seca_Regad == "R"), ]
unique(dun17_mcp$Cultiu)
dun17_mcp[which(dun17_mcp$Cultiu == "NECTARINS" & dun17_mcp$Seca_Regad == "S"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "BLAT TOU" & dun17_mcp$Seca_Regad == "S"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "BLAT TOU" & dun17_mcp$Seca_Regad == "R"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "CIVADA" & dun17_mcp$Seca_Regad == "R"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "TRITICALE" & dun17_mcp$Seca_Regad == "R"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "BLAT TOU" & dun17_mcp$Seca_Regad == "R"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "CIVADA" & dun17_mcp$Seca_Regad == "R"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "TRITICALE" & dun17_mcp$Seca_Regad == "R"), ]
unique(dun17_mcp$Cultiu)
dun17_mcp[which(dun17_mcp$Cultiu == "PESOLS" & dun17_mcp$Seca_Regad == "S"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "PESOLS" & dun17_mcp$Seca_Regad == "R"), ]
which(dun17_mcp$Cultiu == "BLAT DUR" & dun17_mcp$Seca_Regad == "S")
dun17_mcp[which(dun17_mcp$Cultiu == "BLAT DUR" & dun17_mcp$Seca_Regad == "S"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "BLAT DUR" & dun17_mcp$Seca_Regad == "R"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "BLAT DUR" & dun17_mcp$Seca_Regad == "S"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "BLAT DE MORO" & dun17_mcp$Seca_Regad == "S"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "ALFALS" & dun17_mcp$Seca_Regad == "R"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "ALFALS" & dun17_mcp$Seca_Regad == "S"), ]
dun17_mcp$uso[which(dun17_mcp$Cultiu == "NOGUERES")] <- "FRUTALES DE REGADIO"
dun17_mcp[which(dun17_mcp$Cultiu == "NOGUERES")] <- "FRUTALES DE REGADIO"
dun17_mcp[which(dun17_mcp$Cultiu == "NOGUERES"), ]
dun17_mcp$uso[which(dun17_mcp$Cultiu == "NOGUERES")]
dun17_mcp$uso[which(dun17_mcp$Cultiu == "PRUNERES")] <- "FRUTALES DE REGADIO"
dun17_mcp[which(dun17_mcp$Cultiu == "PRUNERES"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "VINYES"), ]
dun18 <- readOGR("S:/PhD/Fourth chapter/GIS/SIGPAC_DUN", "clip_dun18_4326")
dun18_mcp <- crop(dun18, extent(mcp99), snap="out")
unique(dun18_mcp$Cultiu)
# Sigpac and DUN variables
rm(list = ls())
library(raster)
library(rgdal)
library(rgeos)
#### DUN ####
#### Load clips DUN ####
dun17 <- readOGR("S:/PhD/Fourth chapter/GIS/SIGPAC_DUN", "clip_dun17_4326")
dun18 <- readOGR("S:/PhD/Fourth chapter/GIS/SIGPAC_DUN", "clip_dun18_4326")
# Crop with different MCP to see uses
mcp99 <- readOGR("S:/PhD/Fourth chapter/GPS Cataluña", "mcp99")
# 2017
dun17_mcp <- crop(dun17, extent(mcp99), snap="out")
df <- dun17_mcp@data
unique(dun17_mcp$Cultiu)
dun17_mcp$uso <- NA
dun17_mcp$uso[which(dun17_mcp$Cultiu == "ORDI" & dun17_mcp$Seca_Regad == "S")] <- "CEREAL"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "ORDI" & dun17_mcp$Seca_Regad == "R")] <- "HERBACEOS DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "GUARET NO SIE/ SUP. LLIURE SE*")] <- "BARBECHO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "GUARET SIE/ SUP. LLIURE SEMBRA")] <- "BARBECHO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "OLIVERES" & dun17_mcp$Seca_Regad == "R")] <- "FRUTALES DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "OLIVERES" & dun17_mcp$Seca_Regad == "S")] <- "OLIVO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "AMETLLERS" & dun17_mcp$Seca_Regad == "R")] <- "FRUTALES DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "AMETLLERS" & dun17_mcp$Seca_Regad == "S")] <- "ALMENDRO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "NECTARINS")] <- "FRUTALES DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "CAQUI")] <- "FRUTALES DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "BLAT TOU" & dun17_mcp$Seca_Regad == "S")] <- "CEREAL"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "BLAT TOU" & dun17_mcp$Seca_Regad == "R")] <- "HERBACEOS DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "CIVADA" & dun17_mcp$Seca_Regad == "S")] <- "CEREAL"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "CIVADA" & dun17_mcp$Seca_Regad == "R")] <- "HERBACEOS DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "TRITICALE" & dun17_mcp$Seca_Regad == "S")] <- "CEREAL"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "PESOLS" & dun17_mcp$Seca_Regad == "S")] <- "OTROS HERBACEOS DE SECANO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "PESOLS" & dun17_mcp$Seca_Regad == "R")] <- "HERBACEOS DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "FRUITERS VARIS")] <- "FRUTALES DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "PERERES/POMERES")] <- "FRUTALES DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "PRESSEGUERS/NECTARINS")] <- "FRUTALES DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "BLAT DUR" & dun17_mcp$Seca_Regad == "R")] <- "HERBACEOS DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "BLAT DE MORO")] <- "HERBACEOS DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "GIRA-SOL")] <- "HERBACEOS DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "VECES")] <- "HERBACEOS DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "ALFALS")] <- "HERBACEOS DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "FESTUCA")] <- "HERBACEOS DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "RAY-GRASS")] <- "HERBACEOS DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "PRESSEGUERS")] <- "FRUTALES DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "ALBERCOQUERS")] <- "FRUTALES DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "PERERES")] <- "FRUTALES DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "POMERES")] <- "FRUTALES DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "CIRERERS")] <- "FRUTALES DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "PRUNERES")] <- "FRUTALES DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "NOGUERES")] <- "FRUTALES DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "VIVER ARBRE I ARBUST")] <- "FRUTALES DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "HORTA")] <- "HERBACEOS DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "MAGRANER")] <- "FRUTALES DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "SORGO")] <- "HERBACEOS DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "COLZA" & dun17_mcp$Seca_Regad == "S")] <- "OTROS HERBACEOS DE SECANO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "COLZA" & dun17_mcp$Seca_Regad == "R")] <- "HERBACEOS DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "NAP I COL XINESA" & dun17_mcp$Seca_Regad == "R")] <- "HERBACEOS DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "FIGUERA")] <- "FRUTALES DE REGADIO"
dun17_mcp$uso[which(dun17_mcp$Cultiu == "KIWI")] <- "FRUTALES DE REGADIO"
dun17_mcp$uso
unique(dun17_mcp$uso)
dun17_mcp[which(is.na(dun17_mcp$uso)), ]
writeOGR(dun17_mcp, 'S:/PhD/Fourth chapter/GIS/SIGPAC_DUN', "clip_dun17_usos_4326", driver="ESRI Shapefile")
dun18_mcp <- crop(dun18, extent(mcp99), snap="out")
df <- dun18_mcp@data
unique(dun18_mcp$Cultiu)
dun18_mcp$uso <- NA
dun18_mcp[which(dun18_mcp$Cultiu == "TRITICALE" & dun18_mcp$Seca_Regad == "S"), ]
dun18_mcp[which(dun18_mcp$Cultiu == "TRITICALE" & dun18_mcp$Seca_Regad == "R"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "TRITICALE" & dun17_mcp$Seca_Regad == "R"), ]
dun17_mcp[which(dun17_mcp$Cultiu == "OLIVERES" & dun17_mcp$Seca_Regad == "R"), ]
dun18_mcp[which(dun18_mcp$Cultiu == "VEÃƒâ€¡A I CIVADA NO SIE" & dun18_mcp$Seca_Regad == "R"), ]
dun18_mcp[which(dun18_mcp$Cultiu == "VEÃƒâ€¡A I CIVADA NO SIE" & dun18_mcp$Seca_Regad == "S"), ]
unique(dun17_mcp$uso)
dun17_mcp[which(is.na(dun17_mcp$uso)), ] # Only safra and vinyes (very few, so dont assign to category)
dun18_mcp[which(is.na(dun18_mcp$uso)), ] # Only safra and vinyes (very few, so dont assign to category)
dun18_mcp <- crop(dun18, extent(mcp99), snap="out")
df <- dun18_mcp@data
unique(dun18_mcp$Cultiu)
dun18_mcp$uso <- NA
dun18_mcp$uso[which(dun18_mcp$Cultiu == "TRITICALE" & dun18_mcp$Seca_Regad == "S")] <- "CEREAL"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "TRITICALE" & dun18_mcp$Seca_Regad == "R")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "GUARET NO SIE/ SUP. LLIURE SE*")] <- "BARBECHO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "GUARET SIE/ SUP. LLIURE SEMBRA")] <- "BARBECHO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "NECTARINS")] <- "FRUTALES DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "OLIVERES" & dun18_mcp$Seca_Regad == "R")] <- "FRUTALES DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "OLIVERES" & dun18_mcp$Seca_Regad == "S")] <- "OLIVO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "ORDI" & dun18_mcp$Seca_Regad == "S")] <- "CEREAL"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "ORDI" & dun18_mcp$Seca_Regad == "R")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "VEÃƒâ€¡A I CIVADA NO SIE" & dun18_mcp$Seca_Regad == "S")] <- "OTROS HERBACEOS DE SECANO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "VEÃƒâ€¡A I CIVADA NO SIE" & dun18_mcp$Seca_Regad == "R")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "AMETLLERS" & dun18_mcp$Seca_Regad == "R")] <- "FRUTALES DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "AMETLLERS" & dun18_mcp$Seca_Regad == "S")] <- "ALMENDRO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "BLAT TOU" & dun18_mcp$Seca_Regad == "S")] <- "CEREAL"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "BLAT TOU" & dun18_mcp$Seca_Regad == "R")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "PÃƒË†SOLS NO SIE" & dun18_mcp$Seca_Regad == "S")] <- "OTROS HERBACEOS DE SECANO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "PÃƒË†SOLS NO SIE" & dun18_mcp$Seca_Regad == "R")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "PERERES")] <- "FRUTALES DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "ALFALS SIE")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "ALFALS NO SIE")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "GIRA-SOL")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "BLAT DE MORO")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "POMERES")] <- "FRUTALES DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "CIVADA" & dun18_mcp$Seca_Regad == "S")] <- "CEREAL"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "CIVADA" & dun18_mcp$Seca_Regad == "R")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "GARLANDA NO SIE")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "PERERES/POMERES")] <- "FRUTALES DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "PRESSEGUERS/NECTARINS")] <- "FRUTALES DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "FRUITERS VARIS")] <- "FRUTALES DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "VEÃƒâ€¡A I CIVADA SIE" & dun18_mcp$Seca_Regad == "S")] <- "OTROS HERBACEOS DE SECANO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "VEÃƒâ€¡A I CIVADA SIE" & dun18_mcp$Seca_Regad == "R")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "FESTUCA")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "PÃƒË†SOLS SIE" & dun18_mcp$Seca_Regad == "S")] <- "OTROS HERBACEOS DE SECANO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "PÃƒË†SOLS SIE" & dun18_mcp$Seca_Regad == "R")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "VECES SIE")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "VECES NO SIE")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "PRESSEGUERS")] <- "FRUTALES DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "COLZA" & dun18_mcp$Seca_Regad == "S")] <- "OTROS HERBACEOS DE SECANO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "COLZA" & dun18_mcp$Seca_Regad == "R")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "ALBERCOQUERS")] <- "FRUTALES DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "RAY-GRASS")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "PRUNERES")] <- "FRUTALES DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "VIVER ARBRE I ARBUST")] <- "FRUTALES DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "HORTA")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "MAGRANER")] <- "FRUTALES DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "NOGUERES")] <- "FRUTALES DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "NAP I COL XINESA" & dun18_mcp$Seca_Regad == "R")] <- "HERBACEOS DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "CIRERERS")] <- "FRUTALES DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "FIGUERA")] <- "FRUTALES DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "KIWI")] <- "FRUTALES DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "CAQUI")] <- "FRUTALES DE REGADIO"
dun18_mcp$uso[which(dun18_mcp$Cultiu == "SORGO")] <- "HERBACEOS DE REGADIO"
unique(dun17_mcp$uso)
dun18_mcp[which(is.na(dun18_mcp$uso)), ]
unique(dun18_mcp$uso)
writeOGR(dun18_mcp, 'S:/PhD/Fourth chapter/GIS/SIGPAC_DUN', "clip_dun18_usos_4326", driver="ESRI Shapefile")
sigpac <- readOGR("S:/PhD/Fourth chapter/GIS/SIGPAC_DUN", "clip_sigpac_selec_4326")
sigpac_mcp <- crop(sigpac, extent(mcp99), snap="out")
head(sigpac_mcp)
sigpac_mcp$pastos <- NA
sigpac_mcp$pastos[which(sigpac_mcp$us == "PR" | sigpac_mcp$us == "PS" | sigpac_mcp$us == "PA")] <- "HERBACEOS DE REGADIO"
sigpac <- readOGR("S:/PhD/Fourth chapter/GIS/SIGPAC_DUN", "clip_sigpac_EPSG_4326")
sigpac_mcp <- crop(sigpac, extent(mcp99), snap="out")
sigpac_mcp$pastos <- NA
sigpac_mcp$pastos[which(sigpac_mcp$us == "PR" | sigpac_mcp$us == "PS" | sigpac_mcp$us == "PA")] <- "PASTIZAL/PASTO ARBOLADO/ARBUSTIVO"
sigpac_mcp$pastos[which(sigpac_mcp$us == "FO")] <- "FORESTAL"
sigpac_mcp$pastos[which(sigpac_mcp$us == "PR" | sigpac_mcp$us == "PS" | sigpac_mcp$us == "PA")] <- "PASTOS"
sigpac_mcp[which(sigpac_mcp$pastos == "PASTOS"), ]
sigpac_mcp$pastos[which(sigpac_mcp$us == "FO")] <- "FORESTAL"
writeOGR(sigpac_mcp, 'S:/PhD/Fourth chapter/GIS/SIGPAC_DUN', "clip_sigpac_usos_4326", driver="ESRI Shapefile")
setwd("S:/PhD/Second chapter/Data")
d <- read.csv("DataDS_ready_ALL.csv")
colnames(d)[which(colnames(d) == "Count")] <- "Cluster"
View(d)
s_good <- c("ALRUF","BUOED","CACAR","COOEN","COPAL","GACRI","GATHE","MEAPI","MECAL","PAMAJ","SESER","STSSP","SYCAN","SYMEL","TERAX","UPEPO",
"MICAL","HIRUS","PADOM","PIPIC","PAMON", "COMON")
d <- d[which(d$Species %in% s_good), ]
setwd("S:/PhD/Second chapter/Data")
leg <- read.csv("leg_species.csv", sep = ";")
View(leg)
d$species <- NA
library(dplyr)
leg <- leg[ ,-c(2)]
colnames(leg)[2] <- "species"
colnames(d)[8] <- "codiEspecie"
d <- left_join(d, leg, by = codiEspecie)
d <- left_join(d, leg, by = "codiEspecie")
names(d)
d <- d[ ,which(colnames(d) %in% c("Year", "Banda", "Cluster", "Observer", "Temp", "transectID", "distbegin", "distend",
"species.y"))]
names(d)
d <- d[ , c(6,1,9,2,3,4,5)]
d$transectID <- as.numeric(transectID)
d$transectID <- as.numeric(d$transectID)
d$Observer <- as.numeric(d$Observer)
names(d)
colnames(d)[3] <- "Species"
colnames(d)[7] <- "Temperature"
unique(d$Temperature)
library(dplyr)
setwd("S:/PhD/Second chapter/Data")
d <- read.csv("DataDS_ready_ALL.csv")
colnames(d)[which(colnames(d) == "Count")] <- "Cluster"
s_good <- c("ALRUF","BUOED","CACAR","COOEN","COPAL","GACRI","GATHE","MEAPI","MECAL","PAMAJ","SESER","STSSP","SYCAN","SYMEL","TERAX","UPEPO",
"MICAL","HIRUS","PADOM","PIPIC","PAMON", "COMON")
for (xxx in 1:length(s_good)){
# To take into account transects with abundance 0
# 1. Select all transects IDs from all species observations
# 2. Join the observations of MECAL (for example) with all transects so that they remain with NA if the
# species was there but it wasnt sampled
d_tr <- d[ ,which(colnames(d) %in% c("Species",  "T_Y", "Observer", "Temp"))]
d_tr_all <- data.frame(T_Y = unique(d_tr$T_Y), id = NA)
d_tr$Observer <- as.character(d_tr$Observer)
d_tr_all_obs <- left_join(d_tr_all, d_tr)
d_tr_all_obs <- d_tr_all_obs[ ,c(1,4,5)]
d_tr_all_obs <- d_tr_all_obs[which(!duplicated(d_tr_all_obs)), ] # Table with all sampled fields, which observer sampled it and wind and temperature
sp <- d[which(d$Species == s_good[xxx]), which(colnames(d) %in% c("Year", "Banda", "transectID", "T_Y", "Species", "Observer", "Cluster", "Temp"))] # Select species spAL and all years
sp <- arrange(sp, Year, transectID) #Ordered
sp_detec_transectID <- unique(sp$transectID)
sp$Observer <- as.character(sp$Observer)
absent <- anti_join(d_tr_all,sp) # Transects with 0 abundance, add to sp.
colnames(absent)[2] <- "Banda" # Format it to add the rows to sp
absent$T_Y <- as.character(absent$T_Y)
absent$Species <- s_good[xxx]
absent$Cluster <- NA
absent <- left_join(absent, d_tr_all_obs)
for (i in 1:nrow(absent)){ # Format to join absent - detections
cent <- substr(absent$T_Y[i], 10,10) # To include SI102 (cents)
cent <- as.numeric(cent)
if(is.na(cent)){
absent$Year[i] <- substr(absent$T_Y[i], 6,9)
absent$transectID[i] <- substr(absent$T_Y[i], 1,4)
} else { absent$Year[i] <- substr(absent$T_Y[i], 7,10)
absent$transectID[i] <- substr(absent$T_Y[i], 1,5)}
}
absent$count <- 0
sp$count <- 1
all_sp <- rbind(sp,absent) # Include transects with abundance 0
all_sp <- arrange(all_sp, Year, transectID) # Ordered
absent$count <- 0
}
# DATA READY FOR SUBMISSION
library(dplyr)
setwd("S:/PhD/Second chapter/Data")
d <- read.csv("DataDS_ready_ALL.csv")
colnames(d)[which(colnames(d) == "Count")] <- "Cluster"
s_good <- c("ALRUF","BUOED","CACAR","COOEN","COPAL","GACRI","GATHE","MEAPI","MECAL","PAMAJ","SESER","STSSP","SYCAN","SYMEL","TERAX","UPEPO",
"MICAL","HIRUS","PADOM","PIPIC","PAMON", "COMON")
for (xxx in 1:length(s_good)){
# To take into account transects with abundance 0
# 1. Select all transects IDs from all species observations
# 2. Join the observations of MECAL (for example) with all transects so that they remain with NA if the
# species was there but it wasnt sampled
d_tr <- d[ ,which(colnames(d) %in% c("Species",  "T_Y", "Observer", "Temp"))]
d_tr_all <- data.frame(T_Y = unique(d_tr$T_Y), id = NA)
d_tr$Observer <- as.character(d_tr$Observer)
d_tr_all_obs <- left_join(d_tr_all, d_tr)
d_tr_all_obs <- d_tr_all_obs[ ,c(1,4,5)]
d_tr_all_obs <- d_tr_all_obs[which(!duplicated(d_tr_all_obs)), ] # Table with all sampled fields, which observer sampled it and wind and temperature
sp <- d[which(d$Species == s_good[xxx]), which(colnames(d) %in% c("Year", "Banda", "transectID", "T_Y", "Species", "Observer", "Cluster", "Temp"))] # Select species spAL and all years
sp <- arrange(sp, Year, transectID) #Ordered
sp_detec_transectID <- unique(sp$transectID)
sp$Observer <- as.character(sp$Observer)
absent <- anti_join(d_tr_all,sp) # Transects with 0 abundance, add to sp.
colnames(absent)[2] <- "Banda" # Format it to add the rows to sp
absent$T_Y <- as.character(absent$T_Y)
absent$Species <- s_good[xxx]
absent$Cluster <- NA
absent <- left_join(absent, d_tr_all_obs)
for (i in 1:nrow(absent)){ # Format to join absent - detections
cent <- substr(absent$T_Y[i], 10,10) # To include SI102 (cents)
cent <- as.numeric(cent)
if(is.na(cent)){
absent$Year[i] <- substr(absent$T_Y[i], 6,9)
absent$transectID[i] <- substr(absent$T_Y[i], 1,4)
} else { absent$Year[i] <- substr(absent$T_Y[i], 7,10)
absent$transectID[i] <- substr(absent$T_Y[i], 1,5)}
}
absent$count <- 0
sp$count <- 1
all_sp <- rbind(sp,absent) # Include transects with abundance 0
all_sp <- arrange(all_sp, Year, transectID) # Ordered
absent$count <- 0
###################################################################
##                       HDS ANALYSIS                           ###
###################################################################
# ---- Information: bins, years, sites ----
strip.width <- 200
dist.breaks <- c(0,25,50,100,200)
int.w <- diff(dist.breaks) # width of distance categories (v)
midpt <- diff(dist.breaks)/2+dist.breaks[-5]
nG <- length(dist.breaks)-1
yrs <- c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018) # I HAVE TO CONVERT THIS FROM 0-7 (but nyrs is still 8!)
nyrs <- length(yrs)
# ---- Distance observations ----
# Format
all.sites <- unique(all_sp$transectID)
all.sites <- sort(all.sites,descreasing = TRUE)
max.sites <- length(all.sites)
m <- matrix(NA, nrow = length(all.sites), ncol = nyrs)
rownames(m) <- all.sites
colnames(m) <- yrs
# Add counts > 0
count <- aggregate(Species ~ Year + transectID, FUN = length, data = sp)
for (i in 1:nrow(count)){
m[which(rownames(m) %in% count$transectID[i]), which(colnames(m) %in% count$Year[i])] <- count$Species[i]
}
# Add absences (0)
for (i in 1:nrow(absent)){
m[which(rownames(m) %in% absent$transectID[i]), which(colnames(m) %in% absent$Year[i])] <- absent$count[i]
}
# Only to check: Count of individuals per year
count.year <- colSums(m,na.rm = TRUE)
# Count of individuals per year corrected by cluster size
average_clus <- mean(sp$Cluster) # TO INCLUDE IN THE MODEL
count.year_clus <- count.year*average_clus
# Year
yrs2 <- c(0, 1, 2, 3, 4, 5, 6, 7, 8) # To make it as a continuous variable, otherwise it doesnt work
year <- matrix(NA,nrow = max.sites, ncol = nyrs)
colnames(year) <- yrs
for (i in 1:nyrs){
year[ ,which(colnames(year) %in% yrs[i])] <- rep(yrs2[i], max.sites)
}
# Observer
# Format
obs <- matrix(NA, nrow = max.sites, ncol = nyrs)
rownames(obs) <- all.sites
colnames(obs) <- yrs
# Add observers for fields with counts > 0
for (i in 1:nrow(sp)){
obs[which(rownames(obs) %in% sp$transectID[i]), which(colnames(obs) %in% sp$Year[i])] <- sp$Observer[i]
}
# Add observers for fields with absences (0)
for (i in 1:nrow(absent)){
obs[which(rownames(obs) %in% absent$transectID[i]), which(colnames(obs) %in% absent$Year[i])] <- absent$Observer[i]
}
unique(obs)
# Temperature
# Format
temp <- matrix(NA, nrow = max.sites, ncol = nyrs)
rownames(temp) <- all.sites
colnames(temp) <- yrs
# Add temper for fields with counts > 0
for (i in 1:nrow(sp)){
temp[which(rownames(temp) %in% sp$transectID[i]), which(colnames(temp) %in% sp$Year[i])] <- sp$Temp[i]
}
# Add temper for fields with absences (0)
for (i in 1:nrow(absent)){
temp[which(rownames(temp) %in% absent$transectID[i]), which(colnames(temp) %in% absent$Year[i])] <- absent$Temp[i]
}
}
temp
# DATA READY FOR SUBMISSION
library(dplyr)
setwd("S:/PhD/Second chapter/Data")
d <- read.csv("DataDS_ready_ALL.csv")
colnames(d)[which(colnames(d) == "Count")] <- "Cluster"
s_good <- c("ALRUF","BUOED","CACAR","COOEN","COPAL","GACRI","GATHE","MEAPI","MECAL","PAMAJ","SESER","STSSP","SYCAN","SYMEL","TERAX","UPEPO",
"MICAL","HIRUS","PADOM","PIPIC","PAMON", "COMON")
d <- d[which(d$Species %in% s_good), ]
setwd("S:/PhD/Second chapter/Data")
leg <- read.csv("leg_species.csv", sep = ";")
leg <- leg[ ,-c(2)]
colnames(leg)[2] <- "species"
d$species <- NA
colnames(d)[8] <- "codiEspecie"
d <- left_join(d, leg, by = "codiEspecie")
d <- d[ ,which(colnames(d) %in% c("Year", "Banda", "Cluster", "Observer", "Temp", "transectID", "distbegin", "distend",
"species.y"))]
d <- d[ , c(6,1,9,2,3,4,5)]
d$transectID <- as.numeric(d$transectID)
d$Observer <- as.numeric(d$Observer)
colnames(d)[3] <- "Species"
colnames(d)[7] <- "Temperature"
unique(d$Temperature)
names(d)
d
unique(d$Temperature)
which(d$Temperature == 2)
d[which(d$Temperature == 2), ]
d$Temperature[which(d$Temperature == 2), ] <- 12
d$Temperature[which(d$Temperature == 2)] <- 12
unique(d$Temperature)
d$Temperature[which(d$Temperature == 3)]
d$Temperature[which(d$Temperature == 4)]
d$Temperature[which(d$Temperature == 2)] <- 12
d$Temperature[which(d$Temperature == 3)] <- 13
d$Temperature[which(d$Temperature == 4)]<- 14
setwd("S:/PhD/Second chapter/Data")
setwd("S:/PhD/Second chapter/Docs/SUBMISSION 1/Submit/Biodiversity and Conservation")
write.csv(d, "data_detectability_manuscript.csv")
