ggplot(newdata_bar, aes(x = newdata_bar$barbecho_sc, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(method = "glm",
method.args = list(family = "binomial")) + # Aqui la linea es la del glm sobre los valores predichos (no el modelo original)
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection") +
ylim(0,1)
ggplot(newdata_bar, aes(x = newdata_bar$barbecho_sc, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(data = data_p1, aes(x = barbecho_sc, y = used),
method = "glm", method.args = list(family = "binomial"))  + # Aqui la linea es la del glm sobre la respuesta (y)
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection") +
ylim(0,1)
ggplot(newdata_bar, aes(x = newdata_bar$barbecho_sc, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(data = data_p1, aes(x = barbecho, y = used),
method = "glm", method.args = list(family = "binomial"))  + # Aqui la linea es la del glm sobre la respuesta (y)
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection") +
ylim(0,1)
ggplot(newdata_bar, aes(x = newdata_bar$barbecho_sc, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(data = data_p1, aes(x = barbecho, y = used),
method = "glm", method.args = list(family = "binomial"))  + # Aqui la linea es la del glm sobre la respuesta (y)
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection") +
ylim(0,1)
ggplot(newdata_bar, aes(x = newdata_bar$barbecho_sc, y = pred$fit)) +
geom_point() +
ggplot(newdata_bar, aes(x = newdata_bar$barbecho_sc, y = pred$fit)) +
geom_point()
ggplot(newdata_bar, aes(x = newdata_bar$barbecho_sc, y = pred$fit)) +
geom_point()
geom_smooth(method = "glm",
method.args = list(family = "binomial"))
+
geom_smooth(method = "glm",
method.args = list(family = "binomial"))
geom_smooth(method = "glm",
method.args = list(family = "binomial"))
ggplot(newdata_bar, aes(x = newdata_bar$barbecho_sc, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"))
pred <- predict(p1_3_1, type = "response", se.fit = TRUE )
ggplot(data_p1, aes(x = barbecho, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(method = "glm",
method.args = list(family = "binomial")) +
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection")
ggplot(data_p1, aes(x = barbecho, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(data = data_p1, aes(x = barbecho, y = used),
method = "glm", method.args = list(family = "binomial"))
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection")
ggplot(data_p1, aes(x = barbecho, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(data = data_p1, aes(x = barbecho, y = used),
method = "glm", method.args = list(family = "binomial"))
ggplot(data_p1, aes(x = barbecho, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(method = "glm",
method.args = list(family = "binomial")) +
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection")
ggplot(data_p1, aes(x = barbecho, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(data = data_p1, aes(x = barbecho, y = used),
method = "glm", method.args = list(family = "binomial"))
ggplot(data_p1, aes(x = barbecho, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(data = data_p1, aes(x = barbecho, y = used),
method = "glm", method.args = list(family = "binomial")) +
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection")
ggplot(data_p1, aes(x = barbecho, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(method = "glm",
method.args = list(family = "binomial")) +
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection")
ggplot(data_p1, aes(x = barbecho, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(data = data_p1, aes(x = barbecho, y = used),
method = "glm", method.args = list(family = "binomial")) +
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection")
ggplot(data_p1, aes(x = barbecho, y = pred$fit)) +
#geom_point() +
#geom_line() +
geom_smooth(data = data_p1, aes(x = barbecho, y = used),
method = "glm", method.args = list(family = "binomial")) + # Aqui la linea es la del glm sobre la respuesta (y)
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection")
newdata_bar <- as.data.frame(lapply(lapply(data_p1[, -c(1:7,12,14,15,17,19:29)], mean), rep, 100))
newdata_bar$barbecho <- seq(min(data_p1$barbecho), max(data_p1$barbecho), length.out = 100)
newdata_bar <- newdata_bar[ ,c(1:5,8,6:7)]
colnames(newdata_bar) <- paste(colnames(newdata_bar), "_sc", sep = "")
# Predict response (probability of selection)
pred <- predict(p1_3_1, newdata = newdata_bar, type = "response", se.fit = TRUE )
ggplot(newdata_bar, aes(x = newdata_bar$barbecho_sc, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(method = "glm",
method.args = list(family = "binomial")) + # Aqui la linea es la del glm sobre los valores predichos (no el modelo original)
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection") +
ylim(0,1)
ggplot(newdata_bar, aes(x = newdata_bar$barbecho_sc, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(data = data_p1, aes(x = barbecho, y = used),
method = "glm", method.args = list(family = "binomial"))  + # Aqui la linea es la del glm sobre la respuesta (y)
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection") +
ylim(0,1)
pred <- predict(p1_3_1, type = "response", se.fit = TRUE )
ggplot(data_p1, aes(x = barbecho, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(method = "glm",
method.args = list(family = "binomial")) + # Aqui la linea es la del glm sobre los valores predichos (no el modelo original)
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection")
ggplot(data_p1, aes(x = barbecho, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(data = data_p1, aes(x = barbecho, y = used),
method = "glm", method.args = list(family = "binomial")) + # Aqui la linea es la del glm sobre la respuesta (y)
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection")
pred <- predict(p1_3_1, type = "response", se.fit = TRUE )
ggplot(data_p1, aes(x = cereal, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(data = data_p1, aes(x = cereal, y = used),
method = "glm", method.args = list(family = "binomial")) + # Aqui la linea es la del glm sobre la respuesta (y)
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection")
ID_p <- unique(data$ID_p)
data_p2 <- data[which(data$ID_p %in% ID_p[grep("p2", ID_p)]), ]
# Scale variables
data_p2$dist_caminos_sc <- as.numeric(scale(data_p2$dist_caminos, center = TRUE, scale = TRUE))
data_p2$dist_carreteras_sc <- as.numeric(scale(data_p2$dist_carreteras, center = TRUE, scale = TRUE))
data_p2$pendiente_sc <- as.numeric(scale(data_p2$pendiente, center = TRUE, scale = TRUE))
data_p2$pastos_sc <- as.numeric(scale(data_p2$pastos, center = TRUE, scale = TRUE))
data_p2$forestal_sc <- as.numeric(scale(data_p2$forestal, center = TRUE, scale = TRUE))
data_p2$cereal_sc <- as.numeric(scale(data_p2$cereal, center = TRUE, scale = TRUE))
data_p2$barbecho_sc <- as.numeric(scale(data_p2$barbecho, center = TRUE, scale = TRUE))
data_p2$herb_secano_sc <- as.numeric(scale(data_p2$herb_secano, center = TRUE, scale = TRUE))
data_p2$herb_regadio_sc <- as.numeric(scale(data_p2$herb_regadio, center = TRUE, scale = TRUE))
data_p2$frut_regadio_sc <- as.numeric(scale(data_p2$frut_regadio, center = TRUE, scale = TRUE))
data_p2$frut_secano_sc <- as.numeric(scale(data_p2$frut_secano, center = TRUE, scale = TRUE))
# Full model:
p2_3 <- glmer(used ~ dist_caminos + dist_carreteras + pendiente +      # Without forestal, frut regadio and herb_secano: It CONVERGES
pastos +
#forestal +
cereal + barbecho +
#herb_secano +
herb_regadio +
#frut_regadio +
frut_secano + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
summary(p2_3)
pred <- predict(p2_3, type = "response", se.fit = TRUE )
# Try with full model (best model)
p2_3 <- glmer(used ~ dist_caminos + dist_carreteras + pendiente +      # Without forestal, frut regadio and herb_secano: It CONVERGES
pastos + cereal + barbecho + herb_regadio + frut_secano + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
summary(p2_3)
newdata <- as.data.frame(lapply(lapply(data_p2[, -c(1:7,13, 14)], mean), rep, 25))
newdata$cereal <- seq(min(data_p2$cereal), max(data_p2$cereal), length.out = 25)
newdata$Logger_ID <- rep(unique(data_p2$Logger_ID), 5)
pred2 <- predict(p2_3, newdata = newdata, type = "response", re.form = NA)
View(newdata)
newdata <- as.data.frame(lapply(lapply(data_p2[, -c(1:7,13, 14)], mean), rep, 25))
View(newdata)
View(data_p2)
newdata <- as.data.frame(lapply(lapply(data_p2[, -c(1:7,13)], mean), rep, 25))
newdata$cereal <- seq(min(data_p2$cereal), max(data_p2$cereal), length.out = 25)
newdata$Logger_ID <- rep(unique(data_p2$Logger_ID), 5)
pred2 <- predict(p2_3, newdata = newdata, type = "response", re.form = NA)
ggplot(data_p2, aes(x = barbecho, y = pred2$fit)) +
geom_point() +
#geom_line() +
geom_smooth(data = data_p2, aes(x = barbecho, y = used),
method = "glm", method.args = list(family = "binomial")) + # Aqui la linea es la del glm sobre la respuesta (y)
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection")
pred2
pred <- predict(p2_3, type = "response", se.fit = TRUE )
pred <- predict(p2_3, type = "response" )
ggplot(data_p2, aes(x = barbecho, y = pred$fit)) +
geom_point() +
#geom_line() +
geom_smooth(data = data_p2, aes(x = barbecho, y = used),
method = "glm", method.args = list(family = "binomial")) + # Aqui la linea es la del glm sobre la respuesta (y)
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection")
ggplot(data_p2, aes(x = barbecho, y = pred)) +
geom_point() +
#geom_line() +
geom_smooth(data = data_p2, aes(x = barbecho, y = used),
method = "glm", method.args = list(family = "binomial")) + # Aqui la linea es la del glm sobre la respuesta (y)
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection")
rm(list = ls())
library(lme4)
library(MuMIn)
library(ggeffects)
library(ggplot2)
# Run GLMM
setwd("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/Data")
data <- read.csv ("covariates.csv", header = TRUE)
# Check correlation
data <- data[complete.cases(data), ] # I don't know but I delete because I don't have time
correlation <- cor(data[ ,c(8:21)])
correlation[which(correlation > 0.5 & correlation < 1)] # Correlated: Dist carreteras - Dist nucleos urbanos (0.6)
#             Frut secano - Olivo y almendro
names(data) # Quitar: Dist nucleos urbanos, olivo y almendro
data <- data[ , -c(10, 19, 20)]
ID_p <- unique(data$ID_p)
data_p2 <- data[which(data$ID_p %in% ID_p[grep("p2", ID_p)]), ]
data_p2$dist_caminos_sc <- as.numeric(scale(data_p2$dist_caminos, center = TRUE, scale = TRUE))
data_p2$dist_carreteras_sc <- as.numeric(scale(data_p2$dist_carreteras, center = TRUE, scale = TRUE))
data_p2$pendiente_sc <- as.numeric(scale(data_p2$pendiente, center = TRUE, scale = TRUE))
data_p2$pastos_sc <- as.numeric(scale(data_p2$pastos, center = TRUE, scale = TRUE))
data_p2$forestal_sc <- as.numeric(scale(data_p2$forestal, center = TRUE, scale = TRUE))
data_p2$cereal_sc <- as.numeric(scale(data_p2$cereal, center = TRUE, scale = TRUE))
data_p2$barbecho_sc <- as.numeric(scale(data_p2$barbecho, center = TRUE, scale = TRUE))
data_p2$herb_secano_sc <- as.numeric(scale(data_p2$herb_secano, center = TRUE, scale = TRUE))
data_p2$herb_regadio_sc <- as.numeric(scale(data_p2$herb_regadio, center = TRUE, scale = TRUE))
data_p2$frut_regadio_sc <- as.numeric(scale(data_p2$frut_regadio, center = TRUE, scale = TRUE))
data_p2$frut_secano_sc <- as.numeric(scale(data_p2$frut_secano, center = TRUE, scale = TRUE))
# Full model:
p2_3 <- glmer(used ~ dist_caminos + dist_carreteras + pendiente +      # Without forestal, frut regadio and herb_secano: It CONVERGES
pastos +
#forestal +
cereal + barbecho +
#herb_secano +
herb_regadio +
#frut_regadio +
frut_secano + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
summary(p2_3)
p2_3 <- glmer(used ~ dist_caminos_sc + dist_carreteras_sc + pendiente_sc +      # Without forestal, frut regadio and herb_secano: It CONVERGES
pastos_sc +
#forestal +
cereal_sc + barbecho_sc +
#herb_secano +
herb_regadio_sc +
#frut_regadio +
frut_secano_sc + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
summary(p2_3)
p2_3 <- glmer(used ~ dist_caminos_sc + dist_carreteras_sc + pendiente_sc +      # Without forestal, frut regadio and herb_secano: It CONVERGES
pastos_sc +
#forestal +
cereal_sc + barbecho_sc +
#herb_secano +
#herb_regadio_sc +
#frut_regadio +
frut_secano_sc + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_3 <- glmer(used ~ dist_caminos_sc + dist_carreteras_sc + pendiente_sc +      # Without forestal, frut regadio and herb_secano: It CONVERGES
pastos_sc +
#forestal +
cereal_sc + barbecho_sc +
#herb_secano +
herb_regadio_sc +
#frut_regadio +
frut_secano_sc + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p1_3_1 <- glm(used ~ dist_caminos_sc + dist_carreteras_sc + pendiente_sc +      # Without forestal, herb_secano, frut regadio, ID: It doesn't converge
pastos_sc +
#forestal +
cereal_sc + barbecho_sc +
#herb_secano +
herb_regadio_sc +
#frut_regadio +
frut_secano_sc
#+ (1|Logger_ID),
,family = binomial (link = "logit"),
data = data_p1)
View(data_p2)
rm(list = ls())
library(lme4)
library(MuMIn)
library(ggeffects)
library(ggplot2)
# Run GLMM
setwd("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/Data")
data <- read.csv ("covariates.csv", header = TRUE)
# Check correlation
data <- data[complete.cases(data), ] # I don't know but I delete because I don't have time
correlation <- cor(data[ ,c(8:21)])
correlation[which(correlation > 0.5 & correlation < 1)] # Correlated: Dist carreteras - Dist nucleos urbanos (0.6)
#             Frut secano - Olivo y almendro
names(data) # Quitar: Dist nucleos urbanos, olivo y almendro
data <- data[ , -c(10, 19, 20)]
ID_p <- unique(data$ID_p)
data_p1 <- data[which(data$ID_p %in% ID_p[grep("p1", ID_p)]), ]
# Scale variables
data_p1$dist_caminos_sc <- as.numeric(scale(data_p1$dist_caminos, center = TRUE, scale = TRUE))
data_p1$dist_carreteras_sc <- as.numeric(scale(data_p1$dist_carreteras, center = TRUE, scale = TRUE))
data_p1$pendiente_sc <- as.numeric(scale(data_p1$pendiente, center = TRUE, scale = TRUE))
data_p1$pastos_sc <- as.numeric(scale(data_p1$pastos, center = TRUE, scale = TRUE))
data_p1$forestal_sc <- as.numeric(scale(data_p1$forestal, center = TRUE, scale = TRUE))
data_p1$cereal_sc <- as.numeric(scale(data_p1$cereal, center = TRUE, scale = TRUE))
data_p1$barbecho_sc <- as.numeric(scale(data_p1$barbecho, center = TRUE, scale = TRUE))
data_p1$herb_secano_sc <- as.numeric(scale(data_p1$herb_secano, center = TRUE, scale = TRUE))
data_p1$herb_regadio_sc <- as.numeric(scale(data_p1$herb_regadio, center = TRUE, scale = TRUE))
data_p1$frut_regadio_sc <- as.numeric(scale(data_p1$frut_regadio, center = TRUE, scale = TRUE))
data_p1$frut_secano_sc <- as.numeric(scale(data_p1$frut_secano, center = TRUE, scale = TRUE))
# Full model:
p1_3_1 <- glm(used ~ dist_caminos_sc + dist_carreteras_sc + pendiente_sc +      # Without forestal, herb_secano, frut regadio, ID: It doesn't converge
pastos_sc +
#forestal +
cereal_sc + barbecho_sc +
#herb_secano +
herb_regadio_sc +
#frut_regadio +
frut_secano_sc
#+ (1|Logger_ID),
,family = binomial (link = "logit"),
data = data_p1)
summary(p1_3_1)
ID_p <- unique(data$ID_p)
data_p2 <- data[which(data$ID_p %in% ID_p[grep("p2", ID_p)]), ]
# Scale variables
data_p2$dist_caminos_sc <- as.numeric(scale(data_p2$dist_caminos, center = TRUE, scale = TRUE))
data_p2$dist_carreteras_sc <- as.numeric(scale(data_p2$dist_carreteras, center = TRUE, scale = TRUE))
data_p2$pendiente_sc <- as.numeric(scale(data_p2$pendiente, center = TRUE, scale = TRUE))
data_p2$pastos_sc <- as.numeric(scale(data_p2$pastos, center = TRUE, scale = TRUE))
data_p2$forestal_sc <- as.numeric(scale(data_p2$forestal, center = TRUE, scale = TRUE))
data_p2$cereal_sc <- as.numeric(scale(data_p2$cereal, center = TRUE, scale = TRUE))
data_p2$barbecho_sc <- as.numeric(scale(data_p2$barbecho, center = TRUE, scale = TRUE))
data_p2$herb_secano_sc <- as.numeric(scale(data_p2$herb_secano, center = TRUE, scale = TRUE))
data_p2$herb_regadio_sc <- as.numeric(scale(data_p2$herb_regadio, center = TRUE, scale = TRUE))
data_p2$frut_regadio_sc <- as.numeric(scale(data_p2$frut_regadio, center = TRUE, scale = TRUE))
data_p2$frut_secano_sc <- as.numeric(scale(data_p2$frut_secano, center = TRUE, scale = TRUE))
# Full model:
p2_3 <- glmer(used ~ dist_caminos_sc + dist_carreteras_sc + pendiente_sc +      # Without forestal, frut regadio and herb_secano: It CONVERGES
pastos_sc +
#forestal +
cereal_sc + barbecho_sc +
#herb_secano +
herb_regadio_sc +
#frut_regadio +
frut_secano_sc + (1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
summary(p2_3)
# Full model:
p2_3 <- glmer(used ~ dist_caminos_sc + dist_carreteras_sc + pendiente_sc +      # Without forestal, frut regadio and herb_secano: It CONVERGES
pastos_sc +
#forestal +
cereal_sc + barbecho_sc +
#herb_secano +
herb_regadio_sc +
#frut_regadio +
#frut_secano_sc +
(1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_3 <- glmer(used ~ dist_caminos_sc + dist_carreteras_sc + pendiente_sc +      # Without forestal, frut regadio and herb_secano: It CONVERGES
pastos_sc +
#forestal +
cereal_sc + barbecho_sc +
herb_secano +
herb_regadio_sc +
#frut_regadio +
#frut_secano_sc +
(1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_3 <- glmer(used ~ dist_caminos_sc + dist_carreteras_sc + pendiente_sc +      # Without forestal, frut regadio and herb_secano: It CONVERGES
pastos_sc +
#forestal +
cereal_sc + barbecho_sc +
herb_secano_sc +
herb_regadio_sc +
#frut_regadio +
#frut_secano_sc +
(1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_3 <- glmer(used ~ dist_caminos_sc + dist_carreteras_sc + pendiente_sc +      # Without forestal, frut regadio and herb_secano: It CONVERGES
pastos_sc +
#forestal +
cereal_sc + barbecho_sc +
herb_secano_sc +
herb_regadio_sc +
#frut_regadio +
frut_secano_sc +
(1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
summary(p2_3)
p2_3 <- glmer(used ~ dist_caminos_sc + dist_carreteras_sc + pendiente_sc +      # Without forestal, frut regadio and herb_secano: It CONVERGES
pastos_sc +
#forestal +
cereal_sc + barbecho_sc +
#herb_secano_sc +
herb_regadio_sc +
#frut_regadio +
frut_secano_sc +
(1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
p2_3 <- glmer(used ~ dist_caminos_sc + dist_carreteras_sc + pendiente_sc +      # Without forestal, frut regadio and herb_secano: It CONVERGES
pastos_sc +
#forestal +
cereal_sc + barbecho_sc +
#herb_secano_sc +
herb_regadio_sc +
#frut_regadio +
#frut_secano_sc +
(1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
data_p3 <- data[which(data$ID_p %in% ID_p[grep("p3", ID_p)]), ]
data_p3$dist_caminos_sc <- as.numeric(scale(data_p3$dist_caminos, center = TRUE, scale = TRUE))
data_p3$dist_carreteras_sc <- as.numeric(scale(data_p3$dist_carreteras, center = TRUE, scale = TRUE))
data_p3$pendiente_sc <- as.numeric(scale(data_p3$pendiente, center = TRUE, scale = TRUE))
data_p3$pastos_sc <- as.numeric(scale(data_p3$pastos, center = TRUE, scale = TRUE))
data_p3$forestal_sc <- as.numeric(scale(data_p3$forestal, center = TRUE, scale = TRUE))
data_p3$cereal_sc <- as.numeric(scale(data_p3$cereal, center = TRUE, scale = TRUE))
data_p3$barbecho_sc <- as.numeric(scale(data_p3$barbecho, center = TRUE, scale = TRUE))
data_p3$herb_secano_sc <- as.numeric(scale(data_p3$herb_secano, center = TRUE, scale = TRUE))
data_p3$herb_regadio_sc <- as.numeric(scale(data_p3$herb_regadio, center = TRUE, scale = TRUE))
data_p3$frut_regadio_sc <- as.numeric(scale(data_p3$frut_regadio, center = TRUE, scale = TRUE))
data_p3$frut_secano_sc <- as.numeric(scale(data_p3$frut_secano, center = TRUE, scale = TRUE))
p3_3 <- glmer(used ~ dist_caminos_sc + dist_carreteras_sc + pendiente_sc +      # Without forestal, frut regadio and herb_secano: It CONVERGES
pastos_sc +
#forestal +
cereal_sc + barbecho_sc +
#herb_secano +
herb_regadio_sc +
#frut_regadio +
#frut_secano_sc +
(1|Logger_ID),
family = binomial (link = "logit"),
data = data_p3)
pred <- predict(p2_3, type = "response" )
ggplot(data_p2, aes(x = barbecho, y = pred)) +
geom_point() +
#geom_line() +
geom_smooth(data = data_p2, aes(x = barbecho, y = used),
method = "glm", method.args = list(family = "binomial")) + # Aqui la linea es la del glm sobre la respuesta (y)
#facet_wrap(~Sector) +
labs(x = "Barbecho", y = "Prob. selection")
p1 <- glm(used ~ dist_caminos_sc + dist_carreteras_sc + pendiente_sc +      # Without forestal, herb_secano, frut regadio, ID: It doesn't converge
pastos_sc +
#forestal +
cereal_sc + barbecho_sc +
#herb_secano +
herb_regadio_sc +
#frut_regadio +
#frut_secano_sc
#+ (1|Logger_ID),
,family = binomial (link = "logit"),
data = data_p1)
p1 <- glm(used ~ dist_caminos_sc + dist_carreteras_sc + pendiente_sc +      # Without forestal, herb_secano, frut regadio, ID: It doesn't converge
pastos_sc +
#forestal +
cereal_sc + barbecho_sc +
#herb_secano +
herb_regadio_sc
#frut_regadio +
#frut_secano_sc
#+ (1|Logger_ID),
,family = binomial (link = "logit"),
data = data_p1)
summary(p1)
p2 <- glmer(used ~ dist_caminos_sc + dist_carreteras_sc + pendiente_sc +      # Without forestal, frut regadio and herb_secano: It CONVERGES
pastos_sc +
#forestal +
cereal_sc + barbecho_sc +
#herb_secano_sc +
herb_regadio_sc +
#frut_regadio +
#frut_secano_sc +
(1|Logger_ID),
family = binomial (link = "logit"),
data = data_p2)
options(na.action = na.fail)
models_p2 <- dredge(p2, beta = "none", evaluate = TRUE )
setwd("C:/Users/ana.sanz/Documents/PhD_20_sept/Fourth chapter/Data/Results")
save(models_p2, file = "2.dredge_p2.RData")
