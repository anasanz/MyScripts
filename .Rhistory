write.csv2(FI, name_Fitted_Values_File, row.names = FALSE)
}
############################################################
}
all_Indices_All_Trends <- all_Indices_All_Trends[order(all_Indices_All_Trends$Species_number, all_Indices_All_Trends$Stratum_number, all_Indices_All_Trends$Recordtype_number), ]
write.csv2(all_Indices_All_Trends, "all_Indices_All_Trends.csv", row.names = FALSE)
View(arguments)
View(result)
crops <- read.csv("clasificacion_cultivos_div_greening.csv", header = TRUE)
setwd("C:/Users/ana.sanz/Documents/PhD_20_sept/Third chapter/Data")
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/Data")
crops <- read.csv("clasificacion_cultivos_div_greening.csv", header = TRUE)
crops <- read.csv("clasificacion_cultivos_div_greening.csv", header = TRUE, sep = ";")
View(crops)
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification")
dun15 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun15_crop")
dun16 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun16_crop")
dun17 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun17_crop")
dun18 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun18_crop")
dun19 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun19_crop")
# Load classification
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/Data")
crops <- read.csv("clasificacion_cultivos_div_greening.csv", header = TRUE, sep = ";")
library(rgdal)
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification")
dun15 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun15_crop")
dun16 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun16_crop")
dun17 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun17_crop")
dun18 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun18_crop")
dun19 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun19_crop")
cul15 <- as.data.frame(unique(dun15@data$Cultiu))
View(cul15)
View(crops)
View(crops)
View(crops)
crops <- crops[ ,c(1,4)]
dun15@data <- left_join(dun15@data, crops, by "Cultiu")
dun15@data <- left_join(dun15@data, crops, by = "Cultiu")
library(dplyr)
dun15@data <- left_join(dun15@data, crops, by = "Cultiu")
head(dun15@data)
dun15@data
dun15@data
dun16@data <- left_join(dun16@data, crops, by = "Cultiu")
dun16@data
dun17@data <- left_join(dun17@data, crops, by = "Cultiu")
dun18@data <- left_join(dun18@data, crops, by = "Cultiu")
dun19@data <- left_join(dun19@data, crops, by = "Cultiu")
dun19@data
dun19@data[which(dun19@data$Cultiu == "SAFRÃ€"), ]
dun19@data[which(dun19@data$Cultiu == "CÃƒâ‚¬RTAM O SAFRANÃƒâ€œ"), ]
dun19@data[which(dun19@data$Cultiu == "TOMÃ€QUET"), ]
dun19@data$Cultiu[which(is.na(dun19@data$Cultiu)]
dun19@data$Cultiu[which(is.na(dun19@data$Cultiu))]
dun15 <- dun15[-which(dun15$diversitat.greening == "no"), ]
dun16 <- dun16[-which(dun16$diversitat.greening == "no"), ]
dun17 <- dun17[-which(dun17$diversitat.greening == "no"), ]
dun18 <- dun18[-which(dun18$diversitat.greening == "no"), ]
dun19 <- dun19[-which(dun19$diversitat.greening == "no"), ]
plot(dun15)
tr <- readOGR("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS", "Trans_2010_2018_ch3_EPSG23031") # Contains transects sampled each year (1/0)
buf <- gBuffer(tr, byid = TRUE, width = 500)
library(raster)
layers <- c("dun15", "dun16", "dun17", "dun18", "dun19")
crop_diver <- as.data.frame(matrix(NA, nrow = nrow(buf), ncol = 1))
buf <- gBuffer(tr, byid = TRUE, width = 500)
library(raster)
buf <- gBuffer(tr, byid = TRUE, width = 500)
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification")
library(rgeos)
buf <- gBuffer(tr, byid = TRUE, width = 500)
layers <- c("dun15", "dun16", "dun17", "dun18", "dun19")
crop_diver <- as.data.frame(matrix(NA, nrow = nrow(buf), ncol = 1))
View(crop_diver)
colnames(crop_diver)[1] <- "Codi"
crop_diver$Codi <- crop_diver@data$Codi
crop_diver$Codi <- buf@data$Codi
crop_diver
i == 1
i = 1
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
layers <- c("dun15", "dun16", "dun17", "dun18", "dun19")
layers
layers <- c(dun15, dun16, dun17, dun18, dun19)
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
buf
rownames(buf)
layers[[i]]
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
rm(list=ls())
library(rgdal)
library(dplyr)
library(raster)
library(rgeos)
# CALCULATE VARIABLE CROP RICHNESS #
# Load DUN layers cropped with buffers
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification")
dun15 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun15_crop")
dun16 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun16_crop")
dun17 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun17_crop")
dun18 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun18_crop")
dun19 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun19_crop")
# Load classification
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/Data")
crops <- read.csv("clasificacion_cultivos_div_greening.csv", header = TRUE, sep = ";")
crops <- crops[ ,c(1,4)]
# Join in attribute table of the layers the new classification
dun15@data <- left_join(dun15@data, crops, by = "Cultiu")
dun16@data <- left_join(dun16@data, crops, by = "Cultiu")
dun17@data <- left_join(dun17@data, crops, by = "Cultiu")
dun18@data <- left_join(dun18@data, crops, by = "Cultiu")
dun19@data <- left_join(dun19@data, crops, by = "Cultiu")
tr <- readOGR("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS", "Trans_2010_2018_ch3_EPSG23031") # Contains transects sampled each year (1/0)
buf <- gBuffer(tr, byid = TRUE, width = 500)
layer_names <- c("dun15", "dun16", "dun17", "dun18", "dun19")
layers <- c(dun15, dun16, dun17, dun18, dun19)
crop_diver <- as.data.frame(matrix(NA, nrow = nrow(buf), ncol = 1))
colnames(crop_diver)[1] <- "Codi"
crop_diver$Codi <- buf@data$Codi
i = 1
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
rm(list=ls())
library(rgdal)
library(dplyr)
library(raster)
library(rgeos)
# CALCULATE VARIABLE CROP RICHNESS #
# Load DUN layers cropped with buffers
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification")
dun15 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun15_crop")
dun16 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun16_crop")
dun17 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun17_crop")
dun18 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun18_crop")
dun19 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun19_crop")
tr <- readOGR("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS", "Trans_2010_2018_ch3_EPSG23031") # Contains transects sampled each year (1/0)
buf <- gBuffer(tr, byid = TRUE, width = 500)
layer_names <- c("dun15", "dun16", "dun17", "dun18", "dun19")
layers <- c(dun15, dun16, dun17, dun18, dun19)
crop_diver <- as.data.frame(matrix(NA, nrow = nrow(buf), ncol = 1))
colnames(crop_diver)[1] <- "Codi"
crop_diver$Codi <- buf@data$Codi
i = 1
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
dun15 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun15_crop")
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
dun15 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun15_crop")
layer_names <- c("dun15", "dun16", "dun17", "dun18", "dun19")
layers <- c(dun15, dun16, dun17, dun18, dun19)
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
dun15 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun15_crop")
layers <- c(dun15, dun16, dun17, dun18, dun19)
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
i = 2
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
i = 3
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
i = 4
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
i = 5
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification")
layers[[i]]
dun19 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun19_crop")
layers <- c(dun15, dun16, dun17, dun18, dun19)
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
head(buf@data)
head(dun19@data)
head(poli)
layers[[i]]@data
poli@data <- left_join(layers[[i]]@data, crops, by = "Cultiu")
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/Data")
crops <- read.csv("clasificacion_cultivos_div_greening.csv", header = TRUE, sep = ";")
crops <- crops[ ,c(1,4)]
poli@data <- left_join(layers[[i]]@data, crops, by = "Cultiu")
poli@data
poli <- poli[-which(poli$diversitat.greening == "no"), ]
length(buf)
buf_id <- unique(buf@data$Codi)
buf_id
crop_diver
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
poli@data
poli@data <- left_join(poli@data, crops, by = "Cultiu") # Join in attribute table of the layers the new classification
poli@data
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
poli@data <- left_join(poli@data, crops, by = "Cultiu") # Join in attribute table of the layers the new classification
poli@data
poli <- poli[-which(poli$diversitat.greening == "no"), ] # Delete the fields that are not considered for crop diversification in greening
poli@data
poli_transect <- poli[which(poli$Codi == buf_id[[j]]), ]
i = 1
poli_transect <- poli[which(poli$Codi == buf_id[[j]]), ]
buf_id[[j]]
poli_transect <- poli[which(poli$Codi == buf_id[[j]])]
buf_id
buf_id[[j]]
poli_transect <- poli[which(poli$Codi == buf_id[j])]
buf_id[j]
buf_id
buf_id[1]
j = 1
buf_id[j]
buf_id[j]
poli_transect <- poli[which(poli$Codi == buf_id[j]), ]
plot(poli_transect)
poli_transect@data
unique(poli_transect@data$diversitat.greening)
n_crops <- length(unique(poli_transect@data$diversitat.greening))
n_crops
crop_diver <- as.data.frame(matrix(NA, nrow = nrow(buf), ncol = length(layers)))
crop_diver
colnames(crop_diver)[1] <- "Codi"
crop_diver
colnames(crop_diver)[1] <- "Codi"
crop_diver$Codi <- buf@data$Codi
crop_diver
crop_diver <- as.data.frame(matrix(NA, nrow = nrow(buf), ncol = length(layers)+1))
colnames(crop_diver)[1] <- "Codi"
crop_diver$Codi <- buf@data$Codi
crop_diver
crop_diver <- as.data.frame(matrix(NA, nrow = nrow(buf), ncol = length(layers)+1))
colnames(crop_diver) <- c("Codi", layer_names)
crop_diver$Codi <- buf@data$Codi
crop_diver
for (i in 2:length(layers)){
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
poli@data <- left_join(poli@data, crops, by = "Cultiu") # Join in attribute table of the layers the new classification
poli <- poli[-which(poli$diversitat.greening == "no"), ] # Delete the fields that are not considered for crop diversification in greening
for (j in 1:length(buf)) {
poli_transect <- poli[which(poli$Codi == buf_id[j]), ]
n_crops <- length(unique(poli_transect@data$diversitat.greening))
crop_diver[j,i] <- n_crops
}
}
print(i)
print(j)
poli_transect <- poli[which(poli$Codi == buf_id[189]), ]
poli_transect
buf_id[189]
which(poli$Codi == buf_id[189])
poli[which(poli$Codi == buf_id[189]), ]
which(poli$Codi == buf_id[189])
poli[which(poli$Codi == buf_id[189]), ]
poli_transect <- poli[which(poli$Codi == buf_id[188]), ]
poli_transect
which(poli$Codi == buf_id[188])
poli[which(poli$Codi == buf_id[188]), ]
which(poli$Codi == buf_id[189])
poli[7305, ]
poli@data
p <- as.data.frame(poli@data)
View(p)
which(poli$Codi == buf_id[j])
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
poli@data <- left_join(poli@data, crops, by = "Cultiu") # Join in attribute table of the layers the new classification
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
poli <- left_join(poli, crops, by = "Cultiu") # Join in attribute table of the layers the new classification
p <- as.data.frame(poli@data)
View(p)
l <- left_join(p, crops, by = "Cultiu")
View(l)
i <- inner_join(p, crops, by = "Cultiu")
View(crops)
crops <- crops[c(1:111),c(1,4)]
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/Data")
crops <- read.csv("clasificacion_cultivos_div_greening.csv", header = TRUE, sep = ";")
crops <- crops[c(1:111),c(1,4)]
l <- left_join(p, crops, by = "Cultiu")
p <- as.data.frame(poli@data)
l <- left_join(p, crops, by = "Cultiu")
i <- inner_join(p, crops, by = "Cultiu")
crops
rm(list=ls())
library(rgdal)
library(dplyr)
library(raster)
library(rgeos)
# CALCULATE VARIABLE CROP RICHNESS #
# Load DUN layers cropped with buffers
# There are errors in intersect loop below (self intersections in the layers. Modified manually in Arcgis and re-load them here(dun15, dun19))
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification")
dun15 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun15_crop")
dun16 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun16_crop")
dun17 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun17_crop")
dun18 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun18_crop")
dun19 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_cropdiver_classification", layer = "dun19_crop")
# Load classification
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/Data")
crops <- read.csv("clasificacion_cultivos_div_greening.csv", header = TRUE, sep = ";")
crops <- crops[c(1:111),c(1,4)]
View(crops)
tr <- readOGR("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS", "Trans_2010_2018_ch3_EPSG23031") # Contains transects sampled each year (1/0)
buf <- gBuffer(tr, byid = TRUE, width = 500)
buf_id <- unique(buf@data$Codi)
layer_names <- c("dun15", "dun16", "dun17", "dun18", "dun19")
layers <- c(dun15, dun16, dun17, dun18, dun19)
crop_diver <- as.data.frame(matrix(NA, nrow = nrow(buf), ncol = length(layers)+1))
colnames(crop_diver) <- c("Codi", layer_names)
crop_diver$Codi <- buf@data$Codi
i = 1
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
poli@data <- left_join(poli, crops, by = "Cultiu") # Join in attribute table of the layers the new classification
poli@data <- left_join(poli@data, crops, by = "Cultiu") # Join in attribute table of the layers the new classification
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/Data")
crops <- read.csv("clasificacion_cultivos_div_greening.csv", header = TRUE, sep = ";")
View(crops)
View(crops)
crops_years <- crops[c(1:111),c(5:9)]
crops <- crops[c(1:111),c(1,4)]
i = 1
layers[[i]]
length(layers)
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/Data")
crops <- read.csv("clasificacion_cultivos_div_greening.csv", header = TRUE, sep = ";")
crops <- crops[c(1:111),c(1,4, 5:9)]
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/Data")
crops <- read.csv("clasificacion_cultivos_div_greening.csv", header = TRUE, sep = ";")
crops <- crops[c(1:111),c(1,4)]
crops_years <- crops[c(1:111),c(5:9)]
which(!is.na(crops_years[,i]))
crops[which(!is.na(crops_years[,i]))]
crops
crops[which(!is.na(crops_years[,i])),]
poli@data <- left_join(poli@data, crops[which(!is.na(crops_years[,i])),], by = "Cultiu") # Join in attribute table of the layers the new classification
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
# 2015:
unique(poli@data$Cultiu)
crops[which(!is.na(crops_years[,i])),]
# 2015:
i = 1
crops[which(!is.na(crops_years[,i])),]
h <- crops[which(!is.na(crops_years[,i])),]
u <- unique(poli@data$Cultiu)
u
length(u)
nrow(h)
u <- as.data.frame(unique(poli@data$Cultiu))
View(u)
u$ex <- 1
colnames(u)
colnames(u)[1] <- "Cultiu"
left_join(h,u)
u
h
nrow(h)
left_join(u,h)
full_join(u,h)
length(u)
nrow(h)
nrow(u)
u
u <- as.data.frame(unique(poli@data$Cultiu))
u$exU <- 1
colnames(u)[1] <- "Cultiu"
h <- crops[which(!is.na(crops_years[,i])),]
h$exH
full_join(u,h)
u <- as.data.frame(unique(poli@data$Cultiu))
u$exU <- 1
colnames(u)[1] <- "Cultiu"
h <- crops[which(!is.na(crops_years[,i])),]
h$exH <- 2
nrow(u)
nrow(h)
full_join(u,h)
inner_join(u,h)
u
h
# 2015:
data15 <- poli@data
data15
crops
j <- left_join(data15, crops)
View(j)
crops
# 2015:
crops <- crops[-which(duplicated(crops$Cultiu)), ]
j <- left_join(data15, crops)
poli@data <- left_join(poli@data, crops[which(!is.na(crops_years[,i])),], by = "Cultiu") # Join in attribute table of the layers the new classification
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/Data")
crops <- read.csv("clasificacion_cultivos_div_greening.csv", header = TRUE, sep = ";")
crops <- crops[c(1:111),c(1,4)]
crops <- crops[-which(duplicated(crops$Cultiu)), ] # Otherwise NOTHING works
crops_years <- crops[c(1:111),c(5:9)]
crops
crops_years <- crops[c(1:111),c(5:9)]
crops <- read.csv("clasificacion_cultivos_div_greening.csv", header = TRUE, sep = ";")
crops_years <- crops[c(1:111),c(5:9)]
crops_years
crops <- read.csv("clasificacion_cultivos_div_greening.csv", header = TRUE, sep = ";")
#crops_years <- crops[c(1:111),c(5:9)]
crops <- crops[c(1:111),c(1,4)]
crops <- crops[-which(duplicated(crops$Cultiu)), ] # Otherwise NOTHING works
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
for (i in 1:length(layers)){
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
poli@data <- left_join(poli@data, crops, by = "Cultiu") # Join in attribute table of the layers the new classification
poli <- poli[-which(poli$diversitat.greening == "no"), ] # Delete the fields that are not considered for crop diversification in greening
for (j in 1:length(buf)) {
poli_transect <- poli[which(poli$Codi == buf_id[j]), ]  # SUbset of each buffer independently
n_crops <- length(unique(poli_transect@data$diversitat.greening)) # Calculate number of different crops (unique)
crop_diver[j,i] <- n_crops # Store
}
}
crop_diver
for (i in 1:length(layers)){
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
poli@data <- left_join(poli@data, crops, by = "Cultiu") # Join in attribute table of the layers the new classification
poli <- poli[-which(poli$diversitat.greening == "no"), ] # Delete the fields that are not considered for crop diversification in greening
for (j in 1:length(buf)) {
poli_transect <- poli[which(poli$Codi == buf_id[j]), ]  # SUbset of each buffer independently
n_crops <- length(unique(poli_transect@data$diversitat.greening)) # Calculate number of different crops (unique)
crop_diver[j,i+1] <- n_crops # Store
}
}
crop_diver
poli
poli_transect
poli_transect@data
poli_transect@data
j <- poli_transect@data
View(j)
crop_diver
View(crop_diver)
j = 2
poli_transect <- poli[which(poli$Codi == buf_id[j]), ]  # SUbset of each buffer independently
j <- poli_transect@data
i = 2
j = 2
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with management fields polygons
poli@data <- left_join(poli@data, crops, by = "Cultiu") # Join in attribute table of the layers the new classification
poli <- poli[-which(poli$diversitat.greening == "no"), ] # Delete the fields that are not considered for crop diversification in greening
poli_transect <- poli[which(poli$Codi == buf_id[j]), ]  # SUbset of each buffer independently
n_crops <- length(unique(poli_transect@data$diversitat.greening)) # Calculate number of different crops (unique)
n_crops
j = 1
poli_transect <- poli[which(poli$Codi == buf_id[j]), ]  # SUbset of each buffer independently
n_crops <- length(unique(poli_transect@data$diversitat.greening)) # Calculate number of different crops (unique)
n_crops
j = 5
poli_transect <- poli[which(poli$Codi == buf_id[j]), ]  # SUbset of each buffer independently
n_crops <- length(unique(poli_transect@data$diversitat.greening)) # Calculate number of different crops (unique)
n_crops
j <- poli_transect@data
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/Data")
write.csv(crop_diver, "crop_richness_500.csv")
rm(list=ls())
library(rgdal)
library(dplyr)
library(raster)
library(rgeos)
setwd("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_average_field_size")
sigpac15 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_average_field_size", layer = "sigpac15_crop")
# Load transects and make buffers
tr <- readOGR("C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS", "Trans_2010_2018_ch3_EPSG23031") # Contains transects sampled each year (1/0)
buf <- gBuffer(tr, byid = TRUE, width = 500)
sigpac15 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_average_field_size", layer = "sigpac15_crop")
sigpac16 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_average_field_size", layer = "sigpac16_crop")
sigpac17 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_average_field_size", layer = "sigpac17_crop")
sigpac18 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_average_field_size", layer = "sigpac18_crop")
sigpac19 <- readOGR(dsn = "C:/Users/ana.sanz/Documents/PhD_12_Nov/Third chapter/GIS/Buffers_average_field_size", layer = "sigpac19_crop")
buf_id <- unique(buf@data$Codi)
layer_names <- c("sigpac15", "sigpac16", "sigpac17", "sigpac18", "sigpac19")
layers <- c(sigpac15, sigpac16, sigpac17, sigpac18, sigpac19)
av_field_size <- as.data.frame(matrix(NA, nrow = nrow(buf), ncol = length(layers)+1))
colnames(av_field_size) <- c("Codi", layer_names)
av_field_size$Codi <- buf@data$Codi
View(av_field_size)
i = 1
poli <- raster::intersect(buf, layers[[i]]) # Intersect buffers with sigpac fields polygons
crops_select <- c("FL","FV", "VO", "FS", "OV", "TA", "VI") # En documento usos_sigpac.xls
poli_agri <- poli[which(poli@data$US %in% crops_select), ]
poli_agri@data
duplicated(poli_agri@data$ID_REC)
which(duplicated(poli_agri@data$ID_REC))
p <- poli_agri@data
View(p)
p <- poli_agri@data[c(372, 373), ]
View(p)
p <- poli_agri@data[c(372, 373, 374), ]
View(p)
which(duplicated(poli_agri@data$ID_REC))
p <- poli_agri@data[c(379,380,381), ]
class(poli_agri@data$ID_REC)
poli_agri@data$ID_REC <- as.character(poli_agri@data$ID_REC)
which(duplicated(poli_agri@data$ID_REC))
p <- poli_agri@data[c(373,380), ]
View(p)
p <- poli_agri@data[which(poli_agri@data$ID_REC == "25049:0:0:5:1:40"), ]
View(p)
which(poli_agri@data$ID_REC == "25049:0:0:5:1:40")
poli_agri2 <- poli_agri[-which(duplicated(poli_agri@data$ID_REC))]   # 2. Remove duplicates (ID) <- because you can cut the same polygon in 2 polygons and then you count it twice making the average
poli_agri <- poli[which(poli@data$US %in% crops_select), ]   # 1. Select relevant agriculture crops
poli_agri2 <- poli_agri[-which(duplicated(poli_agri@data$ID_REC))]   # 2. Remove duplicates (ID) <- because you can cut the same polygon in 2 polygons and then you count it twice making the average
which(duplicated(poli_agri@data$ID_REC))
poli_agri[-which(duplicated(poli_agri@data$ID_REC))]
poli_agri2 <- poli_agri[-which(duplicated(poli_agri$ID_REC))]   # 2. Remove duplicates (ID) <- because you can cut the same polygon in 2 polygons and then you count it twice making the average
poli_agri2 <- poli_agri[-which(duplicated(poli_agri$ID_REC))]   # 2. Remove duplicates (ID) <- because you can cut the same polygon in 2 polygons and then you count it twice making the average
which(duplicated(poli_agri$ID_REC))
# 3. Remove field size < 0.03ha (noise, bad digitalization)
# 4. Calculate average field size
poli_agri[-1]
# 3. Remove field size < 0.03ha (noise, bad digitalization)
# 4. Calculate average field size
poli_agri[[-1]]
# 3. Remove field size < 0.03ha (noise, bad digitalization)
# 4. Calculate average field size
poli_agri[-1, ]
poli_agri2 <- poli_agri[-which(duplicated(poli_agri$ID_REC)), ]   # 2. Remove duplicates (ID) <- because you can cut the same polygon in 2 polygons and then you count it twice making the average
poli_agri3 <- poli_agri2[-which(poli_agri2@data$HA < 0.03), ]
View(poli_agri3)
