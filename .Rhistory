nyrs <- length(yrs)
all.sites <- unique(all_sp$transectID)
all.sites <- sort(all.sites,descreasing = TRUE)
max.sites <- length(all.sites)
m <- matrix(NA, nrow = length(all.sites), ncol = nyrs)
rownames(m) <- all.sites
colnames(m) <- yrs
count <- aggregate(Species ~ Year + transectID, FUN = length, data = sp)
for (i in 1:nrow(count)){ # Add counts > 0
m[which(rownames(m) %in% count$transectID[i]), which(colnames(m) %in% count$Year[i])] <- count$Species[i]}
for (i in 1:nrow(absent)){ # Add absences (0)
m[which(rownames(m) %in% absent$transectID[i]), which(colnames(m) %in% absent$Year[i])] <- absent$count[i]}
at[[4]] <- colSums(m,na.rm = TRUE)
species[[xxx]] <- at
print(xxx)
}
# Bayesian p-values
bp.obs <- list()
bp.n <- list()
for(i in 1:length(s_good)){
bp.obs[i] <- paste(species[[i]][[1]], "=", species[[i]][[2]][which(rownames(species[[i]][[2]]) %in% c("Bp.Obs")), 1])
bp.n[i] <- species[[i]][[2]][which(rownames(species[[i]][[2]]) %in% c("Bp.N")), 1]
}
# Convergence
# Structural parameters
params <- c( "mu.sig", "sig.sig", "bTemp.sig", "b",
"mu.lam.site", "sig.lam.site", "sig.lam.year", "bYear.lam",
"sd", "rho",'Bp.Obs', 'Bp.N', "sig.sig.year")
conv <- list()
for(i in 1:length(s_good)){
sp <- s_good[i]
c <- species[[i]][[3]]
c <- c[which(rownames(c) %in% params), ]
conv_sp <- list(sp, c)
conv[[i]] <- conv_sp
}
hr
s_gppd
s_good
conv[[1]]
conv[[3]]
conv[[4]]
conv[[5]]
conv[[1]]
conv[[2]]
hist(rnorm(15,0,0.001)
hist(rnorm(15,0,0.001))
hist(rnorm(15,0,0.001))
hist(rnorm(100,0,0.001))
hist(rnorm(100,0,0.1))
hr <- c("TERAX", "BUOED", "TUMER","CACAR","COOEN","COPAL","GACRI","GATHE","MEAPI","MECAL","SESER","STSSP","SYMEL","UPEPO",
"MICAL","HIRUS","PADOM","PIPIC","PAMON", "COMON", "FATIN", "LUARB", "COGAR", "PYRAX", "CAINA")
setwd("C:/Users/ana.sanz/Documents/PhD/Second chapter/Resubmission")
load("spConvergence_light_HR_resub.RData")
species[[1]]
species[[1]][[2]]
sum <- species[[1]][[2]]
sum
grep("popindex_zepa", sum)
grep("popindex_zepa", rownames(sum))
sum_zepa <- sum[grep("popindex_zepa", rownames(sum)), ]
sum_zepa
setwd("C:/Users/ana.sanz/Documents/PhD/Second chapter/Resubmission")
#setwd("D:/ANA/Data/chapter2")
d <- read.csv("DataDS_ready_ALL_revch2.csv")
colnames(d)[which(colnames(d) == "Count")] <- "Cluster"
setwd("C:/Users/ana.sanz/Documents/PhD/Second chapter/Resubmission")
#setwd("D:/ANA/Data/chapter2")
zep <- read.csv("zepa.csv")
s_good <- c("TERAX", "BUOED")
xxx = 1
d_tr <- d[ ,which(colnames(d) %in% c("Species",  "T_Y", "Observer", "Temp"))]
d_tr_all <- data.frame(T_Y = unique(d_tr$T_Y), id = NA)
d_tr$Observer <- as.character(d_tr$Observer)
d_tr_all_obs <- left_join(d_tr_all, d_tr)
d_tr_all_obs <- d_tr_all_obs[ ,c(1,4,5)]
d_tr_all_obs <- d_tr_all_obs[which(!duplicated(d_tr_all_obs)), ] # Table with all sampled fields, which observer sampled it and wind and temperature
sp <- d[which(d$Species == s_good[xxx]), which(colnames(d) %in% c("Year", "Banda", "transectID", "T_Y", "Species", "Observer", "Cluster", "Temp"))] # Select species spAL and all years
sp <- arrange(sp, Year, transectID) #Ordered
sp_detec_transectID <- unique(sp$transectID)
sp$Observer <- as.character(sp$Observer)
absent <- anti_join(d_tr_all,sp) # Transects with 0 abundance, add to sp.
colnames(absent)[2] <- "Banda" # Format it to add the rows to sp
absent$T_Y <- as.character(absent$T_Y)
absent$Species <- s_good[xxx]
absent$Cluster <- NA
absent <- left_join(absent, d_tr_all_obs)
for (i in 1:nrow(absent)){ # Format to join absent - detections
cent <- substr(absent$T_Y[i], 10,10) # To include SI102 (cents)
cent <- as.numeric(cent)
if(is.na(cent)){
absent$Year[i] <- substr(absent$T_Y[i], 6,9)
absent$transectID[i] <- substr(absent$T_Y[i], 1,4)
} else { absent$Year[i] <- substr(absent$T_Y[i], 7,10)
absent$transectID[i] <- substr(absent$T_Y[i], 1,5)}
}
absent$count <- 0
sp$count <- 1
all_sp <- rbind(sp,absent) # Include transects with abundance 0
all_sp <- arrange(all_sp, Year, transectID) # Ordered
absent$count <- 0
###################################################################
##                       HDS ANALYSIS                           ###
###################################################################
# ---- Information: bins, years, sites ----
strip.width <- 500 				# strip half-width, w (in this example only one side of the line transect is surveyed)
dist.breaks <- c(0,25,50,100,200,500)
int.w <- diff(dist.breaks) # width of distance categories (v)
midpt <- (int.w/2) + dist.breaks[-6]
nG <- length(dist.breaks)-1
yrs <- c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018) # I HAVE TO CONVERT THIS FROM 0-7 (but nyrs is still 8!)
nyrs <- length(yrs)
# ---- Distance observations ----
# Format
all.sites <- unique(all_sp$transectID)
all.sites <- sort(all.sites,descreasing = TRUE)
max.sites <- length(all.sites)
m <- matrix(NA, nrow = length(all.sites), ncol = nyrs)
rownames(m) <- all.sites
colnames(m) <- yrs
# Add counts > 0
count <- aggregate(Species ~ Year + transectID, FUN = length, data = sp)
for (i in 1:nrow(count)){
m[which(rownames(m) %in% count$transectID[i]), which(colnames(m) %in% count$Year[i])] <- count$Species[i]
}
# Add absences (0)
for (i in 1:nrow(absent)){
m[which(rownames(m) %in% absent$transectID[i]), which(colnames(m) %in% absent$Year[i])] <- absent$count[i]
}
# Only to check: Count of individuals per year
count.year <- colSums(m,na.rm = TRUE)
# Count of individuals per year corrected by cluster size
average_clus <- mean(sp$Cluster) # TO INCLUDE IN THE MODEL
count.year_clus <- count.year*average_clus
# Year
yrs2 <- c(0, 1, 2, 3, 4, 5, 6, 7, 8) # To make it as a continuous variable, otherwise it doesnt work
year <- matrix(NA,nrow = max.sites, ncol = nyrs)
colnames(year) <- yrs
for (i in 1:nyrs){
year[ ,which(colnames(year) %in% yrs[i])] <- rep(yrs2[i], max.sites)
}
# Observer
# Format
obs <- matrix(NA, nrow = max.sites, ncol = nyrs)
rownames(obs) <- all.sites
colnames(obs) <- yrs
# Add observers for fields with counts > 0
for (i in 1:nrow(sp)){
obs[which(rownames(obs) %in% sp$transectID[i]), which(colnames(obs) %in% sp$Year[i])] <- sp$Observer[i]
}
# Add observers for fields with absences (0)
for (i in 1:nrow(absent)){
obs[which(rownames(obs) %in% absent$transectID[i]), which(colnames(obs) %in% absent$Year[i])] <- absent$Observer[i]
}
unique(obs)
# Temperature
# Format
temp <- matrix(NA, nrow = max.sites, ncol = nyrs)
rownames(temp) <- all.sites
colnames(temp) <- yrs
# Add temper for fields with counts > 0
for (i in 1:nrow(sp)){
temp[which(rownames(temp) %in% sp$transectID[i]), which(colnames(temp) %in% sp$Year[i])] <- sp$Temp[i]
}
# Add temper for fields with absences (0)
for (i in 1:nrow(absent)){
temp[which(rownames(temp) %in% absent$transectID[i]), which(colnames(temp) %in% absent$Year[i])] <- absent$Temp[i]
}
# ---- Specify data in JAGS format ----
# Distance class and ind
nind <- nrow(sp)
dclass <- sp$Banda
m  # Counts per year and site
# Co-variates
yrs <- 1:9
year_number <- 0:8
# Matrix with observers
ob <- matrix(as.numeric(factor(obs)), nrow = max.sites, ncol = nyrs) # JAGS doesn't accept categorical variables
unique(factor(ob))
obs_id <- unique(factor(ob))[-1]
ob[which(is.na(ob))] <- sample(obs_id, length(which(is.na(ob))), replace = TRUE) # No NA in covariate
nobs <- length(unique(factor(ob)))
# Matrix with temperature (put random values where NA)
unique(factor(temp))
temp_id <- unique(factor(temp))[-1]
temp[which(is.na(temp))] <- sample(temp_id, length(which(is.na(temp))), replace = TRUE) # No NA in covariate
#temp_mean <- mean(temp)
#temp_sd <- sd(temp)
#temp_sc <- (temp - temp_mean) / temp_sd
# Index for random effects
site <- c(1:max.sites)
year <- c(1:nyrs)
sitesYears <- NULL
for (i in 1:nyrs){
sitesYears <- c(sitesYears,c(1:length(all.sites)))}
# Fixed index to map dclass onto site and year
# For the index, create a matrix m where NA are 0 (because I need the same length)
m_index <- m
m_index[which(is.na(m_index))] <- 0
site.dclass <- year.dclass <- NULL
for (t in 1:nyrs){ # sites has to be nested on years because dclass first indexes the sites on the same year
for (j in 1:max.sites){
site.dclass <- c(site.dclass, rep(j, m_index[j,t]))
year.dclass <- c(year.dclass, rep(t, m_index[j,t]))
} }
# Create one matrix for indexing SITE (SPA) when calculating abundance per year and spa in JAGS (works for all species)
# Vector where SPA = numbers
sites_df <- data.frame(all.sites)
colnames(sites_df)[1] <- "transectID"
zepas <- left_join(sites_df, zep)
# Missing AL21 and AL4 (not digitalized, I add them manually here)
zepas[zepas$transectID == "AL04", c(3,4)] <- c("no", "AL")
zepas[zepas$transectID == "AL21", c(3,4)] <- c("no", "AL")
zepas$Zepa <- as.character(zepas$Zepa)
zepas$SECTOR <- as.character(zepas$SECTOR)
zepas$index <- zepas$SECTOR # Add category "no zepa"
zepas$index[which(zepas$Zepa == "no")] <- "NZ"
allzepas <- rep(zepas$index,nyrs)
a <- data.frame(allzepas = zepas$index)
a$allzepas <- as.factor(a$allzepas)
indexZepas <- model.matrix(~ allzepas-1, data = a)
nspa <- length(unique(zepas$index))
# Check (conteo de individuos por zepa. EN modelo se hace lo mismo pero con la abundancia)
m_index <- m
m_index[is.na(m_index)] <- 0
pop_zepa <- matrix(NA, nrow = nspa, ncol = nyrs)
rownames(pop_zepa) <- colnames(indexZepas)
colnames(pop_zepa) <- yrs
for(t in 1:nyrs){
for(s in 1:nspa){
pop_zepa[s,t] <- sum(m_index[,t]*indexZepas[,s])
}}
library(rjags)
library(jagsUI)
library(dplyr)
library(rtrim)
d_tr <- d[ ,which(colnames(d) %in% c("Species",  "T_Y", "Observer", "Temp"))]
d_tr_all <- data.frame(T_Y = unique(d_tr$T_Y), id = NA)
d_tr$Observer <- as.character(d_tr$Observer)
d_tr_all_obs <- left_join(d_tr_all, d_tr)
d_tr_all_obs <- d_tr_all_obs[ ,c(1,4,5)]
d_tr_all_obs <- d_tr_all_obs[which(!duplicated(d_tr_all_obs)), ] # Table with all sampled fields, which observer sampled it and wind and temperature
sp <- d[which(d$Species == s_good[xxx]), which(colnames(d) %in% c("Year", "Banda", "transectID", "T_Y", "Species", "Observer", "Cluster", "Temp"))] # Select species spAL and all years
sp <- arrange(sp, Year, transectID) #Ordered
sp_detec_transectID <- unique(sp$transectID)
sp$Observer <- as.character(sp$Observer)
absent <- anti_join(d_tr_all,sp) # Transects with 0 abundance, add to sp.
colnames(absent)[2] <- "Banda" # Format it to add the rows to sp
absent$T_Y <- as.character(absent$T_Y)
absent$Species <- s_good[xxx]
absent$Cluster <- NA
absent <- left_join(absent, d_tr_all_obs)
for (i in 1:nrow(absent)){ # Format to join absent - detections
cent <- substr(absent$T_Y[i], 10,10) # To include SI102 (cents)
cent <- as.numeric(cent)
if(is.na(cent)){
absent$Year[i] <- substr(absent$T_Y[i], 6,9)
absent$transectID[i] <- substr(absent$T_Y[i], 1,4)
} else { absent$Year[i] <- substr(absent$T_Y[i], 7,10)
absent$transectID[i] <- substr(absent$T_Y[i], 1,5)}
}
absent$count <- 0
sp$count <- 1
all_sp <- rbind(sp,absent) # Include transects with abundance 0
all_sp <- arrange(all_sp, Year, transectID) # Ordered
absent$count <- 0
###################################################################
##                       HDS ANALYSIS                           ###
###################################################################
# ---- Information: bins, years, sites ----
strip.width <- 500 				# strip half-width, w (in this example only one side of the line transect is surveyed)
dist.breaks <- c(0,25,50,100,200,500)
int.w <- diff(dist.breaks) # width of distance categories (v)
midpt <- (int.w/2) + dist.breaks[-6]
nG <- length(dist.breaks)-1
yrs <- c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018) # I HAVE TO CONVERT THIS FROM 0-7 (but nyrs is still 8!)
nyrs <- length(yrs)
# ---- Distance observations ----
# Format
all.sites <- unique(all_sp$transectID)
all.sites <- sort(all.sites,descreasing = TRUE)
max.sites <- length(all.sites)
m <- matrix(NA, nrow = length(all.sites), ncol = nyrs)
rownames(m) <- all.sites
colnames(m) <- yrs
# Add counts > 0
count <- aggregate(Species ~ Year + transectID, FUN = length, data = sp)
for (i in 1:nrow(count)){
m[which(rownames(m) %in% count$transectID[i]), which(colnames(m) %in% count$Year[i])] <- count$Species[i]
}
# Add absences (0)
for (i in 1:nrow(absent)){
m[which(rownames(m) %in% absent$transectID[i]), which(colnames(m) %in% absent$Year[i])] <- absent$count[i]
}
# Only to check: Count of individuals per year
count.year <- colSums(m,na.rm = TRUE)
# Count of individuals per year corrected by cluster size
average_clus <- mean(sp$Cluster) # TO INCLUDE IN THE MODEL
count.year_clus <- count.year*average_clus
# Year
yrs2 <- c(0, 1, 2, 3, 4, 5, 6, 7, 8) # To make it as a continuous variable, otherwise it doesnt work
year <- matrix(NA,nrow = max.sites, ncol = nyrs)
colnames(year) <- yrs
for (i in 1:nyrs){
year[ ,which(colnames(year) %in% yrs[i])] <- rep(yrs2[i], max.sites)
}
# Observer
# Format
obs <- matrix(NA, nrow = max.sites, ncol = nyrs)
rownames(obs) <- all.sites
colnames(obs) <- yrs
# Add observers for fields with counts > 0
for (i in 1:nrow(sp)){
obs[which(rownames(obs) %in% sp$transectID[i]), which(colnames(obs) %in% sp$Year[i])] <- sp$Observer[i]
}
# Add observers for fields with absences (0)
for (i in 1:nrow(absent)){
obs[which(rownames(obs) %in% absent$transectID[i]), which(colnames(obs) %in% absent$Year[i])] <- absent$Observer[i]
}
unique(obs)
# Temperature
# Format
temp <- matrix(NA, nrow = max.sites, ncol = nyrs)
rownames(temp) <- all.sites
colnames(temp) <- yrs
# Add temper for fields with counts > 0
for (i in 1:nrow(sp)){
temp[which(rownames(temp) %in% sp$transectID[i]), which(colnames(temp) %in% sp$Year[i])] <- sp$Temp[i]
}
# Add temper for fields with absences (0)
for (i in 1:nrow(absent)){
temp[which(rownames(temp) %in% absent$transectID[i]), which(colnames(temp) %in% absent$Year[i])] <- absent$Temp[i]
}
# ---- Specify data in JAGS format ----
# Distance class and ind
nind <- nrow(sp)
dclass <- sp$Banda
m  # Counts per year and site
# Co-variates
yrs <- 1:9
year_number <- 0:8
# Matrix with observers
ob <- matrix(as.numeric(factor(obs)), nrow = max.sites, ncol = nyrs) # JAGS doesn't accept categorical variables
unique(factor(ob))
obs_id <- unique(factor(ob))[-1]
ob[which(is.na(ob))] <- sample(obs_id, length(which(is.na(ob))), replace = TRUE) # No NA in covariate
nobs <- length(unique(factor(ob)))
# Matrix with temperature (put random values where NA)
unique(factor(temp))
temp_id <- unique(factor(temp))[-1]
temp[which(is.na(temp))] <- sample(temp_id, length(which(is.na(temp))), replace = TRUE) # No NA in covariate
#temp_mean <- mean(temp)
#temp_sd <- sd(temp)
#temp_sc <- (temp - temp_mean) / temp_sd
# Index for random effects
site <- c(1:max.sites)
year <- c(1:nyrs)
sitesYears <- NULL
for (i in 1:nyrs){
sitesYears <- c(sitesYears,c(1:length(all.sites)))}
# Fixed index to map dclass onto site and year
# For the index, create a matrix m where NA are 0 (because I need the same length)
m_index <- m
m_index[which(is.na(m_index))] <- 0
site.dclass <- year.dclass <- NULL
for (t in 1:nyrs){ # sites has to be nested on years because dclass first indexes the sites on the same year
for (j in 1:max.sites){
site.dclass <- c(site.dclass, rep(j, m_index[j,t]))
year.dclass <- c(year.dclass, rep(t, m_index[j,t]))
} }
# Create one matrix for indexing SITE (SPA) when calculating abundance per year and spa in JAGS (works for all species)
# Vector where SPA = numbers
sites_df <- data.frame(all.sites)
colnames(sites_df)[1] <- "transectID"
zepas <- left_join(sites_df, zep)
# Missing AL21 and AL4 (not digitalized, I add them manually here)
zepas[zepas$transectID == "AL04", c(3,4)] <- c("no", "AL")
zepas[zepas$transectID == "AL21", c(3,4)] <- c("no", "AL")
zepas$Zepa <- as.character(zepas$Zepa)
zepas$SECTOR <- as.character(zepas$SECTOR)
zepas$index <- zepas$SECTOR # Add category "no zepa"
zepas$index[which(zepas$Zepa == "no")] <- "NZ"
allzepas <- rep(zepas$index,nyrs)
a <- data.frame(allzepas = zepas$index)
a$allzepas <- as.factor(a$allzepas)
indexZepas <- model.matrix(~ allzepas-1, data = a)
nspa <- length(unique(zepas$index))
# Check (conteo de individuos por zepa. EN modelo se hace lo mismo pero con la abundancia)
m_index <- m
m_index[is.na(m_index)] <- 0
pop_zepa <- matrix(NA, nrow = nspa, ncol = nyrs)
rownames(pop_zepa) <- colnames(indexZepas)
colnames(pop_zepa) <- yrs
for(t in 1:nyrs){
for(s in 1:nspa){
pop_zepa[s,t] <- sum(m_index[,t]*indexZepas[,s])
}}
pop_zepa
indexZepas
m_index
indexZepas
sum_zepa <- sum[grep("popindex_zepa", rownames(sum)), ]
sum_zepa
nspa
nyrs
colnames(indexZepas)
yrs
ab_zepa <- matrix(NA, nrow = 8, ncol = 9)
rownames(ab_zepa) <- c("allzepasAF", "allzepasAL", "allzepasBA", "allzepasBE", "allzepasBM", "allzepasGR", "allzepasNZ", "allzepasSI")
colnames(ab_zepa) <- c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018)
ab_zepa
sum_zepa
grep("1]", rownames(sum_zepa))
sum_zepa[grep("1]", rownames(sum_zepa)), ]
ab_zepa
sum_zepa_mean <- sum_zepa[grep("1]", rownames(sum_zepa)), 1] # To get the mean
sum_zepa_mean
ab_zepa[,1] <- sum_zepa_mean
ab_zepa
sum- round(sum, 2)
sum <- round(sum, 2)
sum
sum_zepa <- sum[grep("popindex_zepa", rownames(sum)), ]
sum_zepa
sum_zepa_mean <- sum_zepa[grep("1]", rownames(sum_zepa)), 1] # To get the mean
sum_zepa_mean
sum_zepa_sd <- sum_zepa[grep("1]", rownames(sum_zepa)), 2] # To get the sd
sum_zepa_sd
# Year1(2010)
sum_zepa_mean <- sum_zepa[grep("1]", rownames(sum_zepa)), 1] # To get the mean
sum_zepa_sd <- sum_zepa[grep("1]", rownames(sum_zepa)), 2] # To get the sd
ab_zepa[,1] <- paste(sum_zepa_mean, "+/-", sum_zepa_sd)
ab_zepa
nzepas <- 8
nyears <- 9
sum_zepa[grep(paste(t,"]"), rownames(sum_zepa)), 1]
sum <- species[[1]][[2]]
sum <- round(sum, 2)
sum_zepa <- sum[grep("popindex_zepa", rownames(sum)), ]
grep(paste(t,"]")
sum_zepa[grep(paste(t,"]"), rownames(sum_zepa)), 1]
sum_zepa[grep(paste(t,"]"), rownames(sum_zepa)), 1]
grep(paste(t,"]")
paste(t,"]")
paste(t,"]")
paste(t,"]", sep = "")
t = 1
sum_zepa[grep(paste(t,"]", sep = ""), rownames(sum_zepa)), 1]
# Year1(2010)
sum_zepa_mean <- sum_zepa[grep(paste(t,"]", sep = ""), rownames(sum_zepa)), 1] # To get the mean
sum_zepa_sd <- sum_zepa[grep(paste(t,"]", sep = ""), rownames(sum_zepa)), 2] # To get the sd
ab_zepa[,1] <- paste(sum_zepa_mean, "+/-", sum_zepa_sd)
ab_zepa
for (t in 1:nyears){
sum_zepa_mean <- sum_zepa[grep(paste(t,"]", sep = ""), rownames(sum_zepa)), 1] # To get the mean
sum_zepa_sd <- sum_zepa[grep(paste(t,"]", sep = ""), rownames(sum_zepa)), 2] # To get the sd
ab_zepa[,t] <- paste(sum_zepa_mean, "+/-", sum_zepa_sd)}
ab_zepa
nzepas <- 8
nyears <- 9
ab_zepa <- matrix(NA, nrow = nzepas, ncol = nyears)
rownames(ab_zepa) <- c("AF", "AL", "BA", "BE", "BM", "GR", "NoZepa", "SI")
colnames(ab_zepa) <- c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018)
ab_zepa_sp <- list()
s = 1
sum <- species[[s]][[2]]
sum <- round(sum, 2)
sum_zepa <- sum[grep("popindex_zepa", rownames(sum)), ]
sum_zepa
for (t in 1:nyears){
sum_zepa_mean <- sum_zepa[grep(paste(t,"]", sep = ""), rownames(sum_zepa)), 1] # To get the mean
sum_zepa_sd <- sum_zepa[grep(paste(t,"]", sep = ""), rownames(sum_zepa)), 2] # To get the sd
ab_zepa[,t] <- paste(sum_zepa_mean, "+/-", sum_zepa_sd)
}
ab_zepa
ab_zepa_sp[[s]] <- ab_zepa
hr[s]
ab_zepa_sp[[s]] <- hr[s]
ab_zepa_sp
ab_zepa_sp[[s]] <- ab_zepa
ab_zepa_sp
ab_zepa_sp[s] <- ab_zepa
ab_zepa_sp[[s]] <- c(hr[s],ab_zepa)
ab_zepa_sp
ab_zepa
list(hr[s],ab_zepa)
ab_zepa_sp[[s]] <- list(hr[s],ab_zepa)
ab_zepa_sp
for (s in 1:length(hr)){
sum <- species[[s]][[2]]
sum <- round(sum, 2)
sum_zepa <- sum[grep("popindex_zepa", rownames(sum)), ]
for (t in 1:nyears){
sum_zepa_mean <- sum_zepa[grep(paste(t,"]", sep = ""), rownames(sum_zepa)), 1] # To get the mean
sum_zepa_sd <- sum_zepa[grep(paste(t,"]", sep = ""), rownames(sum_zepa)), 2] # To get the sd
ab_zepa[,t] <- paste(sum_zepa_mean, "+/-", sum_zepa_sd)
}
ab_zepa_sp[[s]] <- list(hr[s],ab_zepa)
}
ab_zepa_sp
for (s in 1:length(hr)){
sum <- species[[s]][[2]]
sum <- round(sum, 2)
sum_zepa <- sum[grep("popindex_zepa", rownames(sum)), ]
for (t in 1:nyears){
sum_zepa_mean <- sum_zepa[grep(paste(t,"]", sep = ""), rownames(sum_zepa)), 1] # To get the mean
sum_zepa_sd <- sum_zepa[grep(paste(t,"]", sep = ""), rownames(sum_zepa)), 2] # To get the sd
ab_zepa[,t] <- as.character(paste(sum_zepa_mean, "+/-", sum_zepa_sd))
}
ab_zepa_sp[[s]] <- list(hr[s],ab_zepa)
}
ab_zepa_sp
