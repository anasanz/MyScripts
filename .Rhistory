sp_mig <- as.character(unique(mig$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_mig), ]
setwd("D:/PhD/Third chapter/Data")
dat_info <- read.csv("infospecies_ch3_FINAL_1019.csv", sep = ";")
scarce <- dat_info[which(dat_info$remove_veryscarce == 1), ]
sp_scarce <- as.character(unique(scarce$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_scarce), ]
# JOIN SPECIES FROM STURNUS (STVUL + STUNI = STSSP)
dat[which(dat$Species == "STSSP"), ]
dat$Species[which(dat$Species == "STVUL")] <- "STSSP"
dat$Species[which(dat$Species == "STUNI")] <- "STSSP"
dat[which(dat$Species == "STSSP"), ]
dat$Species[which(dat$Species == "STVUL")] <- "STSSP"
dat$Species[which(dat$Species == "STUNI")] <- "STSSP"
# REMOVE GASSP BECAUSE GATHE AND GACRI HAVE A LOT OF OBSERVATIONS
dat <- dat[-which(dat$Species == "GASSP"), ]
spec <- dat_info$Species[-which(dat_info$Species %in% sp_scarce)] # Order descending of proportion of transects occupied
spec <- spec[-(which(spec %in% c("STVUL", "STUNI", "GASSP")))]
spec
rm(list=ls())
library(dplyr)
library(tidyr)
setwd("C:/Users/Ana/Documents/PhD/Third chapter/Data")
dat <- read.csv("DataDS_ch3_allsp_1019.csv", sep = ",")
#### Remove species that are MIGRANT and therefore are not link to the transect and the  scale of the study ####
setwd("D:/PhD/Second chapter/Data")
all <- read.csv("index_selec_communities_FSP_DG_GB.csv", sep = ";")
mig <- all[which(all$NO.FS.DG.GB == 1),]
sp_mig <- as.character(unique(mig$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_mig), ]
setwd("D:/PhD/Third chapter/Data")
dat_info <- read.csv("infospecies_ch3_FINAL_1019.csv", sep = ";")
scarce <- dat_info[which(dat_info$remove_veryscarce == 1), ]
sp_scarce <- as.character(unique(scarce$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_scarce), ]
#### Join species in sp. where it is hard to tell the difference ####
# JOIN SPECIES FROM STURNUS (STVUL + STUNI = STSSP)
dat[which(dat$Species == "STSSP"), ]
dat$Species[which(dat$Species == "STVUL")] <- "STSSP"
dat$Species[which(dat$Species == "STUNI")] <- "STSSP"
# REMOVE GASSP BECAUSE GATHE AND GACRI HAVE A LOT OF OBSERVATIONS
dat <- dat[-which(dat$Species == "GASSP"), ]
##### Check detection curves ####
# Make plot all species to compare Seen vS. Heard
setwd("D:/PhD/Third chapter/Explore")
pdf("df_all_observations_allsp_1019.pdf")
spec <- dat_info$Species[-which(dat_info$Species %in% sp_scarce)] # Order descending of proportion of transects occupied
spec <- spec[-(which(spec %in% c("STVUL", "STUNI", "GASSP")))]
spec
#### Remove species with no biological meaning related to the study question ####
bio <- dat_info[which(dat_info$remove_biologicalsense == 1), ]
sp_bio <- as.character(unique(bio$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_bio), ]
# Make plot all species to compare Seen vS. Heard
setwd("D:/PhD/Third chapter/Explore")
pdf("df_all_observations_allsp_1019.pdf")
spec <- dat_info$Species[-which(dat_info$Species %in% sp_bio)]
spec <- spec[-(which(spec %in% c("STVUL", "STUNI", "GASSP")))]
spec
sp_bio
rm(list=ls())
library(dplyr)
library(tidyr)
setwd("C:/Users/Ana/Documents/PhD/Third chapter/Data")
dat <- read.csv("DataDS_ch3_allsp_1019.csv", sep = ",")
#### Remove species that are MIGRANT and therefore are not link to the transect and the  scale of the study ####
setwd("D:/PhD/Second chapter/Data")
all <- read.csv("index_selec_communities_FSP_DG_GB.csv", sep = ";")
mig <- all[which(all$NO.FS.DG.GB == 1),]
sp_mig <- as.character(unique(mig$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_mig), ]
setwd("D:/PhD/Third chapter/Data")
dat_info <- read.csv("infospecies_ch3_FINAL_1019.csv", sep = ";")
scarce <- dat_info[which(dat_info$remove_veryscarce == 1), ]
sp_scarce <- as.character(unique(scarce$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_scarce), ]
#### Join species in sp. where it is hard to tell the difference ####
# JOIN SPECIES FROM STURNUS (STVUL + STUNI = STSSP)
dat[which(dat$Species == "STSSP"), ]
dat$Species[which(dat$Species == "STVUL")] <- "STSSP"
dat$Species[which(dat$Species == "STUNI")] <- "STSSP"
# REMOVE GASSP BECAUSE GATHE AND GACRI HAVE A LOT OF OBSERVATIONS
dat <- dat[-which(dat$Species == "GASSP"), ]
#### Remove species with no biological meaning related to the study question ####
bio <- dat_info[which(dat_info$remove_biologicalsense == 1), ]
sp_bio <- as.character(unique(bio$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_bio), ]
rm(list=ls())
library(dplyr)
library(tidyr)
setwd("D://PhD/Third chapter/Data")
dat <- read.csv("DataDS_ch3_allsp_1019.csv", sep = ",")
setwd("D:/PhD/Second chapter/Data")
all <- read.csv("index_selec_communities_FSP_DG_GB.csv", sep = ";")
mig <- all[which(all$NO.FS.DG.GB == 1),]
sp_mig <- as.character(unique(mig$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_mig), ]
setwd("D:/PhD/Third chapter/Data")
dat_info <- read.csv("infospecies_ch3_FINAL_1019.csv", sep = ";")
scarce <- dat_info[which(dat_info$remove_veryscarce == 1), ]
sp_scarce <- as.character(unique(scarce$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_scarce), ]
dat[which(dat$Species == "STSSP"), ]
dat$Species[which(dat$Species == "STVUL")] <- "STSSP"
dat$Species[which(dat$Species == "STUNI")] <- "STSSP"
# REMOVE GASSP BECAUSE GATHE AND GACRI HAVE A LOT OF OBSERVATIONS
dat <- dat[-which(dat$Species == "GASSP"), ]
#### Remove species with no biological meaning related to the study question ####
bio <- dat_info[which(dat_info$remove_biologicalsense == 1), ]
sp_bio <- as.character(unique(bio$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_bio), ]
spec <- dat_info$Species[-which(dat_info$Species %in% sp_scarce)] # Order descending of proportion of transects occupied
spec <- dat_info$Species[-which(dat_info$Species %in% sp_bio)]
spec <- spec[-(which(spec %in% c("STVUL", "STUNI", "GASSP")))]
spec
spec <- dat_info$Species[-which(dat_info$Species %in% sp_scarce)] # Order descending of proportion of transects occupied
spec
spec <- dat_info$Species[-which(dat_info$Species %in% sp_bio)]
spec
spec
spec <- as.character(dat_info$Species)
spec <- spec[-which(spec %in% sp_scarce | sp_bio)] # Order descending of proportion of transects occupied
spec <- spec[-which(spec %in% sp_scarce)] # Order descending of proportion of transects occupied
spec <- spec[-which(spec %in% sp_bio)]
spec <- spec[-(which(spec %in% c("STVUL", "STUNI", "GASSP")))]
pdf("df_all_observations_allsp_1019.pdf")
spec <- as.character(dat_info$Species)
spec <- spec[-which(spec %in% sp_scarce)] # Order descending of proportion of transects occupied
spec <- spec[-which(spec %in% sp_bio)]
spec <- spec[-which(spec %in% c("STVUL", "STUNI", "GASSP"))]
setwd("D:/PhD/Third chapter/Explore")
pdf("df_all_observations_allsp_1019.pdf")
spec <- as.character(dat_info$Species)
spec <- spec[-which(spec %in% sp_scarce)] # Order descending of proportion of transects occupied
spec <- spec[-which(spec %in% sp_bio)]
spec
spec["STVUL"]
spec["HIRUS"]
spec[which(spec == "STVUL")]
spec[which(spec == "PTORI")]
pdf("df_all_observations_allsp_1019.pdf")
spec <- as.character(dat_info$Species)
spec <- spec[-which(spec %in% sp_scarce)] # Order descending of proportion of transects occupied
spec <- spec[-which(spec %in% sp_bio)]
par(mfrow = c(4,3))
for (i in 1:length(spec)){
hist(dat$distance[which(dat$Species %in% spec[i])], breaks = c(0,25,50,99,200,500),
main = paste(spec[i], "- Distances"), col = "grey", freq = FALSE)
}
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
setwd("D:/PhD/Third chapter/Explore")
spec <- as.character(dat_info$Species)
spec <- spec[-which(spec %in% sp_scarce)] # Order descending of proportion of transects occupied
spec <- spec[-which(spec %in% sp_bio)]
pdf("df_all_observations_allsp_1019.pdf")
par(mfrow = c(4,3))
for (i in 1:length(spec)){
hist(dat$distance[which(dat$Species %in% spec[i])], breaks = c(0,25,50,99,200,500),
main = paste(spec[i], "- Distances"), col = "grey", freq = FALSE)
}
dev.off()
dev.off()
setwd("D:/PhD/Third chapter/Data")
dat_info <- read.csv("infospecies_ch3_FINAL_1019.csv", sep = ";")
scarce <- dat_info[which(dat_info$remove_veryscarce == 1), ]
sp_scarce <- as.character(unique(scarce$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_scarce), ]
# JOIN SPECIES FROM STURNUS (STVUL + STUNI = STSSP)
dat[which(dat$Species == "STSSP"), ]
dat$Species[which(dat$Species == "STVUL")] <- "STSSP"
dat$Species[which(dat$Species == "STUNI")] <- "STSSP"
# REMOVE GASSP BECAUSE GATHE AND GACRI HAVE A LOT OF OBSERVATIONS
dat <- dat[-which(dat$Species == "GASSP"), ]
#### Remove species with no biological meaning related to the study question ####
bio <- dat_info[which(dat_info$remove_biologicalsense == 1), ]
sp_bio <- as.character(unique(bio$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_bio), ]
rm(list=ls())
library(dplyr)
library(tidyr)
setwd("D://PhD/Third chapter/Data")
dat <- read.csv("DataDS_ch3_allsp_1019.csv", sep = ",")
#### Remove species that are MIGRANT and therefore are not link to the transect and the  scale of the study ####
setwd("D:/PhD/Second chapter/Data")
all <- read.csv("index_selec_communities_FSP_DG_GB.csv", sep = ";")
mig <- all[which(all$NO.FS.DG.GB == 1),]
sp_mig <- as.character(unique(mig$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_mig), ]
setwd("D:/PhD/Third chapter/Data")
dat_info <- read.csv("infospecies_ch3_FINAL_1019.csv", sep = ";")
scarce <- dat_info[which(dat_info$remove_veryscarce == 1), ]
sp_scarce <- as.character(unique(scarce$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_scarce), ]
#### Join species in sp. where it is hard to tell the difference ####
# JOIN SPECIES FROM STURNUS (STVUL + STUNI = STSSP)
dat[which(dat$Species == "STSSP"), ]
dat$Species[which(dat$Species == "STVUL")] <- "STSSP"
dat$Species[which(dat$Species == "STUNI")] <- "STSSP"
# REMOVE GASSP BECAUSE GATHE AND GACRI HAVE A LOT OF OBSERVATIONS
dat <- dat[-which(dat$Species == "GASSP"), ]
#### Remove species with no biological meaning related to the study question ####
bio <- dat_info[which(dat_info$remove_biologicalsense == 1), ]
sp_bio <- as.character(unique(bio$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_bio), ]
dc <- dat_info[which(dat_info$remove_detectioncurve == 1), ]
sp_dc <- as.character(unique(dc$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_dc), ]
spec_no_order <- unique(dat$Species)
spec <- dat_info$Species[which(dat_info$Species %in% spec_no_order)]
spec
pdf("df_all_observations_goodsp_1019.pdf")
spec_no_order <- unique(dat$Species)
spec <- dat_info$Species[which(dat_info$Species %in% spec_no_order)]
par(mfrow = c(4,3))
for (i in 1:length(spec)){
hist(dat$distance[which(dat$Species %in% spec[i])], breaks = c(0,25,50,99,200,500),
main = paste(spec[i], "- Distances"), col = "grey", freq = FALSE, xlab = " ")
}
dev.off()
setwd("D:/PhD/Third chapter/Explore")
pdf("df_all_observations_goodsp_1019.pdf")
spec_no_order <- unique(dat$Species)
spec <- dat_info$Species[which(dat_info$Species %in% spec_no_order)]
par(mfrow = c(4,3))
for (i in 1:length(spec)){
hist(dat$distance[which(dat$Species %in% spec[i])], breaks = c(0,25,50,99,200,500),
main = paste(spec[i], "- Distances"), col = "grey", freq = FALSE, xlab = " ")
}
dev.off()
# Plot only seen
setwd("D:/PhD/Third chapter/Explore")
pdf("df_all_observations_goodsp_1019_seen.pdf")
par(mfrow = c(4,3))
for (i in 1:length(spec)){
hist(dat$distance[which(dat$Species %in% spec[i] & dat$Obs_type == "V")], breaks = c(0,25,50,99,200,500),
main = paste(spec[i], "- Distances"), col = "grey", freq = FALSE, xlab = " ")
}
dev.off()
setwd("D:/PhD/Third chapter/Explore")
pdf("df_all_observations_goodsp_1019_heard.pdf")
par(mfrow = c(4,3))
for (i in 1:length(spec)){
if (sum(dat$distance[which(dat$Species %in% spec[i] & dat$Obs_type == "S")]) == 0)
plot(1,xlab = " ", ylab = " ", main = spec[i]) else hist(dat$distance[which(dat$Species %in% spec[i] & dat$Obs_type == "S")], breaks = c(0,25,50,99,200,500),
main = paste(spec[i], "- Distances"), col = "grey", freq = FALSE, xlab = " ")
}
dev.off()
dat$Species2 <- dat$Species
dat$Species2 <- as.character(dat$Species2)
dat$Species2[which(dat$Species2 == "TERAX" & dat$Sex == 0)] <- "TERAX_ind"
dat$Species2[which(dat$Species2 == "TERAX" & dat$Sex == 1)] <- "TERAX_M"
dat$Species2[which(dat$Species2 == "TERAX" & dat$Sex == 2)] <- "TERAX_F"
par(mfrow = c(1, 3))
hist(dat$distance[which(dat$Species2  == "TERAX_ind")], breaks = c(0,25,50,99,200,500),
main = "TERAX_ind - Distances", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species2  == "TERAX_M")], breaks = c(0,25,50,99,200,500),
main = "TERAX_M - Distances", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species2  == "TERAX_F")], breaks = c(0,25,50,99,200,500),
main = "TERAX_F - Distances", col = "grey", freq = FALSE, xlab = " ")
freq <- as.data.frame(xtabs(~Species2 + Year, dat))
freq <- spread(freq,Year, Freq) # Number of detections (ds observations) of each species per year in all transects (nrows per species and year)
freq$remove <- 0 # To export data set and select the ones that are present in enough transects
freq$total_detections <- rowSums(freq[ ,c(2:10)])
freq
# Check and select species that will be used for the community model (CH 3)
rm(list=ls())
library(dplyr)
library(tidyr)
setwd("D:/PhD/Third chapter/Data")
dat <- read.csv("DataDS_ch3_allsp_1019.csv", sep = ",")
#### Remove species that are MIGRANT and therefore are not link to the transect and the  scale of the study ####
setwd("D:/PhD/Second chapter/Data")
all <- read.csv("index_selec_communities_FSP_DG_GB.csv", sep = ";")
mig <- all[which(all$NO.FS.DG.GB == 1),]
sp_mig <- as.character(unique(mig$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_mig), ]
#### Remove very scarce (less than 20 detections in total, which is the lower threshold to include PTORI) ####
setwd("D:/PhD/Third chapter/Data")
dat_info <- read.csv("infospecies_ch3_FINAL_1019.csv", sep = ";")
scarce <- dat_info[which(dat_info$remove_veryscarce == 1), ]
sp_scarce <- as.character(unique(scarce$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_scarce), ]
#### Join species in sp. where it is hard to tell the difference ####
# JOIN SPECIES FROM STURNUS (STVUL + STUNI = STSSP)
dat[which(dat$Species == "STSSP"), ]
dat$Species[which(dat$Species == "STVUL")] <- "STSSP"
dat$Species[which(dat$Species == "STUNI")] <- "STSSP"
# REMOVE GASSP BECAUSE GATHE AND GACRI HAVE A LOT OF OBSERVATIONS
dat <- dat[-which(dat$Species == "GASSP"), ]
#### Remove species with a bad detection curve ####
dc <- dat_info[which(dat_info$remove_detectioncurve == 1), ]
sp_dc <- as.character(unique(dc$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_dc), ]
#### Remove species with no biological meaning related to the study question ####
bio <- dat_info[which(dat_info$remove_biologicalsense == 1), ]
sp_bio <- as.character(unique(bio$Species)) #Vector with species to delete
dat <- dat[-which(dat$Species %in% sp_bio), ]
#### Include/Check TERAX_F and TERAX_M because they have different requirements ####
dat$Species2 <- dat$Species
dat$Species2 <- as.character(dat$Species2)
dat$Species2[which(dat$Species2 == "TERAX" & dat$Sex == 0)] <- "TERAX_ind"
dat$Species2[which(dat$Species2 == "TERAX" & dat$Sex == 1)] <- "TERAX_M"
dat$Species2[which(dat$Species2 == "TERAX" & dat$Sex == 2)] <- "TERAX_F"
setwd("D:/PhD/Third chapter/Data")
write.csv(dat,"DataDS_ch3_20_19_READY.csv") #Final data set ready for analyzing
View(dat)
unique(dat$Region.Label)
hist(dat$distance[which(dat$Species  == "TERAX" & dat$Region.Label == "BA")], breaks = c(0,25,50,99,200,500),
main = "TERAX_ind - Distances", col = "grey", freq = FALSE, xlab = " ")
par(mfrow = c(4, 3))
for (i in 1:length(zepas)){
hist(dat$distance[which(dat$Species  == "TERAX" & dat$Region.Label == zepas[i])], breaks = c(0,25,50,99,200,500),
main = "TERAX_ind - Distances", col = "grey", freq = FALSE, xlab = " ")
}
zepas <- unique(dat$Region.Label)
par(mfrow = c(4, 3))
for (i in 1:length(zepas)){
hist(dat$distance[which(dat$Species  == "TERAX" & dat$Region.Label == zepas[i])], breaks = c(0,25,50,99,200,500),
main = "TERAX_ind - Distances", col = "grey", freq = FALSE, xlab = " ")
}
zepas <- unique(dat$Region.Label)
par(mfrow = c(4, 2))
for (i in 1:length(zepas)){
hist(dat$distance[which(dat$Species  == "TERAX" & dat$Region.Label == zepas[i])], breaks = c(0,25,50,99,200,500),
main = paste("TERAX -", zepas[i]), col = "grey", freq = FALSE, xlab = " ")
}
datprueba <- dat
# Probar a quitar BA and AL
datprueba <- dat
datprueba <- datprueba[-which(datprueba$Region.Label %in% c("AL", "BA")), ]
hist(dat$distance[which(dat$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
hist(datprueba$distance[which(datprueba$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
par(mfrow = c(4, 2))
for (i in 1:length(zepas)){
hist(dat$distance[which(dat$Species  == "TERAX" & dat$Region.Label == zepas[i])], breaks = c(0,25,50,99,200,500),
main = paste("TERAX -", zepas[i]), col = "grey", freq = FALSE, xlab = " ")
}
# Probar a quitar BA and AL
datprueba <- dat
datprueba <- datprueba[-which(datprueba$Region.Label %in% c("AL", "BA", "BM")), ]
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
hist(datprueba$distance[which(datprueba$Species2  == "TERAX_M")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species2  == "TERAX_M")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
datprueba <- dat
datprueba <- datprueba[-which(datprueba$Region.Label %in% c("AL", "BA", "BM", "BE")), ]
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
# Probar a quitar BA and AL
datprueba <- dat
datprueba <- datprueba[which(datprueba$Region.Label %in% c("AF")), ]
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
# Probar a quitar BA and AL
datprueba <- dat
datprueba <- datprueba[which(datprueba$Region.Label %in% c("AF", "SI")), ]
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
# Machos
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species2  == "TERAX_M")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species2  == "TERAX_M")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
# Probar a quitar BA and AL
datprueba <- dat
datprueba <- datprueba[which(datprueba$Region.Label %in% c("AF", "SI", "GR")), ]
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
# Machos
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species2  == "TERAX_M")], breaks = c(0,25,50,99,200,500),
main = "TERAX_M", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species2  == "TERAX_M")], breaks = c(0,25,50,99,200,500),
main = "TERAX_M", col = "grey", freq = FALSE, xlab = " ")
for (i in 1:length(zepas)){
hist(dat$distance[which(dat$Species  == "TERAX" & dat$Region.Label == zepas[i])], breaks = c(0,25,50,99,200,500),
main = paste("TERAX -", zepas[i]), col = "grey", freq = FALSE, xlab = " ")
}
zepas <- unique(dat$Region.Label)
par(mfrow = c(4, 2))
for (i in 1:length(zepas)){
hist(dat$distance[which(dat$Species  == "TERAX" & dat$Region.Label == zepas[i])], breaks = c(0,25,50,99,200,500),
main = paste("TERAX -", zepas[i]), col = "grey", freq = FALSE, xlab = " ")
}
datprueba <- dat
datprueba <- datprueba[which(datprueba$Region.Label %in% c("AF", "SI", "GR", "AL")), ]
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
zepas <- unique(dat$Region.Label)
par(mfrow = c(4, 2))
for (i in 1:length(zepas)){
hist(dat$distance[which(dat$Species  == "TERAX" & dat$Region.Label == zepas[i])], breaks = c(0,25,50,99,200,500),
main = paste("TERAX -", zepas[i]), col = "grey", freq = FALSE, xlab = " ")
}
datprueba <- dat
datprueba <- datprueba[which(datprueba$Region.Label %in% c("AF", "SI", "GR")), ]
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
datprueba <- dat
datprueba <- datprueba[which(datprueba$Region.Label %in% c("AF", "SI")), ]
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
par(mfrow = c(4, 2))
for (i in 1:length(zepas)){
hist(dat$distance[which(dat$Species  == "TERAX" & dat$Region.Label == zepas[i])], breaks = c(0,25,50,99,200,500),
main = paste("TERAX -", zepas[i]), col = "grey", freq = FALSE, xlab = " ")
}
datprueba <- dat
datprueba <- datprueba[which(datprueba$Region.Label %in% c("AF", "SI", "BE")), ]
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species2  == "TERAX_M")], breaks = c(0,25,50,99,200,500),
main = "TERAX_M", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species2  == "TERAX_M")], breaks = c(0,25,50,99,200,500),
main = "TERAX_M", col = "grey", freq = FALSE, xlab = " ")
datprueba <- dat
datprueba <- datprueba[which(datprueba$Region.Label %in% c("AF", "SI")), ]
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species2  == "TERAX_M")], breaks = c(0,25,50,99,200,500),
main = "TERAX_M", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species2  == "TERAX_M")], breaks = c(0,25,50,99,200,500),
main = "TERAX_M", col = "grey", freq = FALSE, xlab = " ")
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species2  == "TERAX_F")], breaks = c(0,25,50,99,200,500),
main = "TERAX_F", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species2  == "TERAX_M")], breaks = c(0,25,50,99,200,500),
main = "TERAX_F", col = "grey", freq = FALSE, xlab = " ")
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "TERAX -", col = "grey", freq = FALSE, xlab = " ")
zepas <- unique(dat$Region.Label)
par(mfrow = c(4, 2))
for (i in 1:length(zepas)){
hist(dat$distance[which(dat$Species  == "BUOED" & dat$Region.Label == zepas[i])], breaks = c(0,25,50,99,200,500),
main = paste("BUOED -", zepas[i]), col = "grey", freq = FALSE, xlab = " ")
}
datprueba <- dat
datprueba <- datprueba[which(datprueba$Region.Label %in% c("AF", "SI", "GR", "AL")), ]
datprueba <- dat
datprueba <- datprueba[which(datprueba$Region.Label %in% c("AF", "SI", "GR", "AL")), ]
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species  == "BUOED")], breaks = c(0,25,50,99,200,500),
main = "BUOED -", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "BUOED -", col = "grey", freq = FALSE, xlab = " ")
datprueba <- dat
datprueba <- datprueba[which(datprueba$Region.Label %in% c("AF", "SI", "GR", "AL", "BM")), ]
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species  == "BUOED")], breaks = c(0,25,50,99,200,500),
main = "BUOED -", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species  == "TERAX")], breaks = c(0,25,50,99,200,500),
main = "BUOED -", col = "grey", freq = FALSE, xlab = " ")
datprueba <- dat
datprueba <- datprueba[which(datprueba$Region.Label %in% c("AF", "SI", "GR", "AL")), ] # BM se puede añadir pero empeora
par(mfrow = c(1, 2))
hist(datprueba$distance[which(datprueba$Species  == "BUOED")], breaks = c(0,25,50,99,200,500),
main = "BUOED -", col = "grey", freq = FALSE, xlab = " ")
hist(dat$distance[which(dat$Species  == "BUOED")], breaks = c(0,25,50,99,200,500),
main = "BUOED -", col = "grey", freq = FALSE, xlab = " ")
