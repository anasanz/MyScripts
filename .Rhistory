#setwd("~/Data_server/Tortola")
setwd("D:/Otros/Tórtola/Data")
tor <- read.csv("tortola_ds_ready_02_21.csv", sep = ",")
tor[,1] <- "STTUR"
strip.width <- 500
dist.breaks <- c(0,25,100,500)
int.w <- diff(dist.breaks) # width of distance categories (v)
midpt <- diff(dist.breaks)/2+dist.breaks[-4]
nG <- length(dist.breaks)-1
yrs <- unique(tor$Year)
nyrs <- length(yrs)
# 1 transect and 6 sections per year
nSection <- 6
section <- c(1,2,3,4,5,6)
# Format
all.sites <- unique(tor$site_sec)
max.sites <- length(all.sites)
m <- matrix(NA, nrow = length(all.sites), ncol = nyrs)
rownames(m) <- all.sites
colnames(m) <- yrs
# Add counts > 0
tor_yes <- tor[which(tor$count == 1), ]
count <- aggregate(X ~ Year + site_sec, FUN = length, data = tor_yes)
for (i in 1:nrow(count)){
m[which(rownames(m) %in% count$site_sec[i]), which(colnames(m) %in% count$Year[i])] <- count$X[i]
}
# Add absences (0)
tor_no <- tor[which(tor$count == 0), ]
for (i in 1:nrow(tor_no)){
m[which(rownames(m) %in% tor_no$site_sec[i]), which(colnames(m) %in% tor_no$Year[i])] <- tor_no$count[i]
}
# Only to check: Count of individuals per year
count.year <- colSums(m,na.rm = TRUE)
setwd("D:/Otros/Tórtola/Data")
a <- as.data.frame(m)
a$transect <- rownames(m)
View(a)
View(m)
all.sites
dat <- openxlsx::read.xlsx('detections_tortola_0221.xlsx')
rm(list=ls())
library(dplyr)
# Load analyzed transects (all species)
setwd("D:/Otros/Tórtola/Results/Study2/Model_results_1.1/STTUR")
tr <- read.csv("pInc_bEst_sd_transects_converged.csv")
setwd("D:/Otros/Tórtola/Data")
dat <- openxlsx::read.xlsx('detections_tortola_0221.xlsx')
View(dat)
View(dat)
rm(list=ls())
library(rjags)
library(jagsUI)
library(dplyr)
library(stringr)
# Exactly the same as 1.1.Model1.1_TortoData_02-21
# But the preparation code changes slightly only to add extra transects
# less restrictive criteria (2.1. Explore_timeframe_transects.r)
# I use it to rerun transects that did not really converge with more iterations
#setwd("~/Data_server/Tortola")
setwd("D:/Otros/Tórtola/Data")
tor <- read.csv("tortola_ds_ready_02_21.csv", sep = ",")
tor[,1] <- "STTUR"
###################################################################
##                       HDS ANALYSIS                           ###
###################################################################
# Model 1.1: Same as model 1 but with roughness covariate instead of forest
# ---- Information: bins, years, sites ----
strip.width <- 500
dist.breaks <- c(0,25,100,500)
int.w <- diff(dist.breaks) # width of distance categories (v)
midpt <- diff(dist.breaks)/2+dist.breaks[-4]
nG <- length(dist.breaks)-1
yrs <- unique(tor$Year)
nyrs <- length(yrs)
# 1 transect and 6 sections per year
nSection <- 6
section <- c(1,2,3,4,5,6)
# ---- Distance observations ----
# Format
all.sites <- unique(tor$site_sec)
max.sites <- length(all.sites)
m <- matrix(NA, nrow = length(all.sites), ncol = nyrs)
rownames(m) <- all.sites
colnames(m) <- yrs
# Add counts > 0
tor_yes <- tor[which(tor$count == 1), ]
count <- aggregate(X ~ Year + site_sec, FUN = length, data = tor_yes)
for (i in 1:nrow(count)){
m[which(rownames(m) %in% count$site_sec[i]), which(colnames(m) %in% count$Year[i])] <- count$X[i]
}
# Add absences (0)
tor_no <- tor[which(tor$count == 0), ]
for (i in 1:nrow(tor_no)){
m[which(rownames(m) %in% tor_no$site_sec[i]), which(colnames(m) %in% tor_no$Year[i])] <- tor_no$count[i]
}
# Only to check: Count of individuals per year
count.year <- colSums(m,na.rm = TRUE)
setwd("D:/Otros/Tórtola/Data")
a <- as.data.frame(m)
a$transect <- rownames(m)
openxlsx::write.xlsx(a, file = 'detections_tortola_0221.xlsx')
## ---- SUBSET the data by transect ----
# Only transects to add, less restrictive (from 2.1. Explore_timeframe....r)
setwd("D:/Otros/Tórtola/Results/Study2/Model_results_1.1/STTUR")
#setwd("~/Data_server/Tortola")
load("1.1TortoData_transects_0221_RERUN.RData")
m_subset <- as.data.frame(m)
m_subset$site <- str_sub(rownames(m_subset), end=-3) # Add column with site (removing 2 last digits section) to group per site
m_subset <- m_subset[which(m_subset$site %in% rerun), ]
m_subset[which(m_subset$site == 199), 17] <- c(NA, NA, NA, NA, NA, NA) # I am tricking this because there is too much missing data otherwise. Will assign to period 1
length(unique(m_subset$site)) # Number of transects that will be analyzed
# 3. Load variables
# ROUGHNESS CO-VARIATE
setwd("D:/Otros/Tórtola/Data")
#setwd("~/Data_server/Tortola")
rough_var <- read.csv("TRI_buff_500.csv", sep = ",")
rough_var$site_sec <- paste(rough_var[,1], rough_var[,2], sep = "_")
rough_var <- rough_var[,c(16,15)]
# Format
rough <- matrix(NA, nrow = nrow(m_subset), ncol = ncol(m_subset))
rownames(rough) <- rownames(m_subset)
colnames(rough) <- colnames(m_subset)
# Add data into the same structure than m_subset2
for (i in 1:nrow(rough_var)){
rough[which(rownames(rough) %in% rough_var$site_sec[i]), ] <- rough_var$X_mean[i]
}
rough <- as.data.frame(rough)
rough$site <- m_subset$site # For subset
# 3. Make the subset and start loop
transect <- unique(m_subset$site)
transect
dat
rm(list=ls())
library(dplyr)
# Load analyzed transects (all species)
setwd("D:/Otros/Tórtola/Results/Study2/Model_results_1.1/STTUR")
tr <- read.csv("pInc_bEst_sd_transects_converged.csv")
setwd("D:/Otros/Tórtola/Data")
dat <- openxlsx::read.xlsx('detections_tortola_0221.xlsx')
dat
dat$tr2 <- substr(dat$transect, 1, nchar(dat$transect)-2)
View(dat)
rm(list=ls())
library(rjags)
library(jagsUI)
library(dplyr)
library(stringr)
setwd("D:/Otros/Tórtola/Data")
tor <- read.csv("tortola_ds_ready_02_21.csv", sep = ",")
tor[,1] <- "STTUR"
###################################################################
##                       HDS ANALYSIS                           ###
###################################################################
# Model 1.1: Same as model 1 but with roughness covariate instead of forest
# ---- Information: bins, years, sites ----
strip.width <- 500
dist.breaks <- c(0,25,100,500)
int.w <- diff(dist.breaks) # width of distance categories (v)
midpt <- diff(dist.breaks)/2+dist.breaks[-4]
nG <- length(dist.breaks)-1
yrs <- unique(tor$Year)
nyrs <- length(yrs)
# 1 transect and 6 sections per year
nSection <- 6
section <- c(1,2,3,4,5,6)
# ---- Distance observations ----
# Format
all.sites <- unique(tor$site_sec)
max.sites <- length(all.sites)
m <- matrix(NA, nrow = length(all.sites), ncol = nyrs)
rownames(m) <- all.sites
colnames(m) <- yrs
# Add counts > 0
tor_yes <- tor[which(tor$count == 1), ]
count <- aggregate(X ~ Year + site_sec, FUN = length, data = tor_yes)
for (i in 1:nrow(count)){
m[which(rownames(m) %in% count$site_sec[i]), which(colnames(m) %in% count$Year[i])] <- count$X[i]
}
# Add absences (0)
tor_no <- tor[which(tor$count == 0), ]
for (i in 1:nrow(tor_no)){
m[which(rownames(m) %in% tor_no$site_sec[i]), which(colnames(m) %in% tor_no$Year[i])] <- tor_no$count[i]
}
# Only to check: Count of individuals per year
count.year <- colSums(m,na.rm = TRUE)
View(m)
# Save m
setwd("D:/Otros/Tórtola/Data")
write.csv(m, file = "m_counts_all_transects.csv")
rm(list=ls())
library(dplyr)
# Load analyzed transects (all species)
setwd("D:/Otros/Tórtola/Results/Study2/Model_results_1.1/STTUR")
tr <- read.csv("pInc_bEst_sd_transects_converged.csv")
setwd("D:/Otros/Tórtola/Data")
dat <- openxlsx::read.xlsx('detections_tortola_0221.xlsx')
dat$tr2 <- substr(dat$transect, 1, nchar(dat$transect)-2)
# 1. Check transects with more detections (taking into account the analyzed years)
#
setwd("D:/Otros/Tórtola/Data")
m <- read.csv("m_counts_all_transects.csv", sep = ",")
View(m)
View(tr)
View(m)
View(dat)
dat[,1:21] == m
dat[,1:21] == m
setwd("D:/Otros/Tórtola/Data")
m <- read.csv("m_counts_all_transects.csv", sep = ",")
m$tr2 <- substr(m$transect, 1, nchar(m$transect)-2)
View(m)
m$tr2 <- substr(m$transect, 1, nchar(m$transect)-2)
View(m)
m$tr2 <- substr(m$X, 1, nchar(m$X)-2)
View(m)
transect <- tr$transect_ID
View(tr)
xxx = 1
data_transect <- m[which(m$tr2 %in% transect[xxx]), ]
View(data_transect)
data_transect_nona <- data_transect[, colSums(is.na(data_transect)) != nrow(data_transect)] # Delete columns with NA
min_year <- min(as.numeric(colnames(data_transect_nona)[-which(colnames(data_transect_nona) == "site")]))
data_transect_nona
m
View(m)
colnames(m) <- c("X", 2002:2021, "tr2")
View(m)
transect <- tr$transect_ID
data_transect <- m[which(m$tr2 %in% transect[xxx]), ]
data_transect_nona <- data_transect[, colSums(is.na(data_transect)) != nrow(data_transect)] # Delete columns with NA
data_transect_nona
as.numeric(colnames(data_transect_nona)[-which(colnames(data_transect_nona) == "site")])
rm(list=ls())
library(rjags)
library(jagsUI)
library(dplyr)
library(stringr)
setwd("D:/Otros/Tórtola/Data")
tor <- read.csv("tortola_ds_ready_02_21.csv", sep = ",")
tor[,1] <- "STTUR"
###################################################################
##                       HDS ANALYSIS                           ###
###################################################################
# Model 1.1: Same as model 1 but with roughness covariate instead of forest
# ---- Information: bins, years, sites ----
strip.width <- 500
dist.breaks <- c(0,25,100,500)
int.w <- diff(dist.breaks) # width of distance categories (v)
midpt <- diff(dist.breaks)/2+dist.breaks[-4]
nG <- length(dist.breaks)-1
yrs <- unique(tor$Year)
nyrs <- length(yrs)
# 1 transect and 6 sections per year
nSection <- 6
section <- c(1,2,3,4,5,6)
# ---- Distance observations ----
# Format
all.sites <- unique(tor$site_sec)
max.sites <- length(all.sites)
m <- matrix(NA, nrow = length(all.sites), ncol = nyrs)
rownames(m) <- all.sites
colnames(m) <- yrs
# Add counts > 0
tor_yes <- tor[which(tor$count == 1), ]
count <- aggregate(X ~ Year + site_sec, FUN = length, data = tor_yes)
for (i in 1:nrow(count)){
m[which(rownames(m) %in% count$site_sec[i]), which(colnames(m) %in% count$Year[i])] <- count$X[i]
}
# Add absences (0)
tor_no <- tor[which(tor$count == 0), ]
for (i in 1:nrow(tor_no)){
m[which(rownames(m) %in% tor_no$site_sec[i]), which(colnames(m) %in% tor_no$Year[i])] <- tor_no$count[i]
}
# Only to check: Count of individuals per year
count.year <- colSums(m,na.rm = TRUE)
# Save m
setwd("D:/Otros/Tórtola/Data")
write.csv(m, file = "m_counts_all_transects.csv")
## ---- SUBSET the data by transect ----
# 1. Keep transects with > 7 time points
m <- as.data.frame(m)
m_subset <- data.frame(matrix(nrow = 0, ncol = ncol(m)))
colnames(m_subset) <- colnames(m)
for (i in 1:nrow(m)) {
if (sum(!is.na(m[i, ])) > 6) {
m_subset[nrow(m_subset)+1,] <-  m[i, ] # Add row if it has 7 values or more
}}
# 2. Keep transects with at least 5 time points with counts (To be able to calculate trend)
m_subset$site <- str_sub(rownames(m_subset), end=-3) # Add column with site (removing 2 last digits section) to group per site
x <- t(sapply(split(m_subset, m_subset$site), function(x) colSums(x[, c(1:18)]))) # Counts grouped per site
x <- as.data.frame(ifelse(x>0,1,0))
m_subset2 <- data.frame(matrix(nrow = 0, ncol = ncol(m_subset)))
colnames(m_subset2) <- colnames(m_subset)
for (i in 1:nrow(m_subset)) {
site <- m_subset[i,which(colnames(m_subset) %in% "site")] # Identify the site for the if condition
if (sum(x[rownames(x) %in% site, ], na.rm = TRUE) > 4) {
m_subset2[nrow(m_subset2)+1,] <-  m_subset[i, ] # Add row if it has 5 time points with counts or more
}}
length(unique(m_subset2$site)) # Number of transects that will be analyzed
# 3. Load variables
# ROUGHNESS CO-VARIATE
setwd("D:/Otros/Tórtola/Data")
rough_var <- read.csv("TRI_buff_500.csv", sep = ",")
rough_var$site_sec <- paste(rough_var[,1], rough_var[,2], sep = "_")
rough_var <- rough_var[,c(16,15)]
# Format
rough <- matrix(NA, nrow = nrow(m_subset2), ncol = ncol(m_subset2))
rownames(rough) <- rownames(m_subset2)
colnames(rough) <- colnames(m_subset2)
# Add data into the same structure than m_subset2
for (i in 1:nrow(rough_var)){
rough[which(rownames(rough) %in% rough_var$site_sec[i]), ] <- rough_var$X_mean[i]
}
rough <- as.data.frame(rough)
rough$site <- m_subset2$site # For subset
# 3. Make the subset and start loop
transect <- unique(m_subset2$site)
xxx = 1
data_transect <- m_subset2[which(m_subset2$site %in% transect[xxx]), ]
View(data_transect)
data_transect_nona <- data_transect[, colSums(is.na(data_transect)) != nrow(data_transect)] # Delete columns with NA
View(data_transect_nona)
min_year <- min(as.numeric(colnames(data_transect_nona)[-which(colnames(data_transect_nona) == "site")]))
min_year
rm(list=ls())
library(dplyr)
# Load analyzed transects (all species)
setwd("D:/Otros/Tórtola/Results/Study2/Model_results_1.1/STTUR")
tr <- read.csv("pInc_bEst_sd_transects_converged.csv")
# 1. Check transects with more detections (taking into account the analyzed years)
setwd("D:/Otros/Tórtola/Data")
m <- read.csv("m_counts_all_transects.csv", sep = ",")
m$tr2 <- substr(m$X, 1, nchar(m$X)-2)
colnames(m) <- c("X", 2002:2021, "tr2")
transect <- tr$transect_ID
xxx = 1
data_transect <- m[which(m$tr2 %in% transect[xxx]), ]
data_transect_nona <- data_transect[, colSums(is.na(data_transect)) != nrow(data_transect)] # Delete columns with NA
View(data_transect_nona)
min_year <- min(as.numeric(colnames(data_transect_nona)[-which(colnames(data_transect_nona) %in% c("X", "tr2"))]))
max_year <- max(as.numeric(colnames(data_transect_nona)[-which(colnames(data_transect_nona) %in% c("X", "tr2"))]))
View(data_transect_nona)
nyrs <- max_year - min_year + 1 # For JAGS
year_number <- 0:(nyrs-1)
yrs <- 1:nyrs
View(data_transect)
total_det <- matrix(NA, nrow = length(transect), ncol = 1)
View(total_det)
total_det <- as.data.frame(matrix(NA, nrow = length(transect), ncol = 1))
rownames <- transect
rownames(total_det) <- transect
View(total_det)
2021-2002
yearly_det <- as.data.frame(matrix(NA, nrow = length(transect), ncol = 19))
rownames(total_det) <- transect
colnames(total_det) <- 2002:2021
2002:2021
length(2002:2021)
yearly_det <- as.data.frame(matrix(NA, nrow = length(transect), ncol = 20))
rownames(total_det) <- transect
colnames(total_det) <- 2002:2021
yearly_det <- as.data.frame(matrix(NA, nrow = length(transect), ncol = 20))
rownames(yearly_det) <- transect
colnames(yearly_det) <- 2002:2021
View(yearly_det)
data_transect_nona
calc <- data_transect_nona[,-which(colnames(data_transect_nona) %in% c("X", "tr2"))]
View(calc)
max_year - min_year
total_det[which(rownames(total_det)) %in% transect[xxx],"nyears"] <- max_year - min_year
total_det[which(rownames(total_det)) %in% transect[xxx]),"nyears"] <- max_year - min_year
total_det[which(rownames(total_det) %in% transect[xxx]),"nyears"] <- max_year - min_year
View(total_det)
total_det <- as.data.frame(matrix(NA, nrow = length(transect), ncol = 2))
rownames(total_det) <- transect
colnames(total_det) <- c("nyears", c("detections"))
View(total_det)
total_det[which(rownames(total_det) %in% transect[xxx]),"nyears"] <- max_year - min_year
View(total_det)
total_det[which(rownames(total_det) %in% transect[xxx]),"detections"] <- sum(calc)
sum(calc)
View(calc)
View(yearly_det)
apply(calc, 2, sum)
calc_years <- apply(calc, 2, sum)
calc_years
names(calc_years)
calc_years
x = 1
names(calc_years)[x]
yearly_det[which(rownames(yearly_det) %in% transect[xxx]),names(calc_years)[x]]
calc_years[x]
yearly_det[which(rownames(yearly_det) %in% transect[xxx]),names(calc_years)[x]] <- calc_years[x]
View(yearly_det)
for (x in 1:length(calc_years)){
yearly_det[which(rownames(yearly_det) %in% transect[xxx]),names(calc_years)[x]] <- calc_years[x]
}
View(yearly_det)
yearly_det <- as.data.frame(matrix(NA, nrow = length(transect), ncol = 22))
rownames(yearly_det) <- transect
colnames(yearly_det) <- c(2002:2021,"nyears", "detections")
data_transect <- m[which(m$tr2 %in% transect[xxx]), ]
data_transect_nona <- data_transect[, colSums(is.na(data_transect)) != nrow(data_transect)] # Delete columns with NA
min_year <- min(as.numeric(colnames(data_transect_nona)[-which(colnames(data_transect_nona) %in% c("X", "tr2"))]))
max_year <- max(as.numeric(colnames(data_transect_nona)[-which(colnames(data_transect_nona) %in% c("X", "tr2"))]))
calc <- data_transect_nona[,-which(colnames(data_transect_nona) %in% c("X", "tr2"))]
calc
calc_years <- apply(calc, 2, sum)
for (x in 1:length(calc_years)){
yearly_det[which(rownames(yearly_det) %in% transect[xxx]),names(calc_years)[x]] <- calc_years[x]
}
View(yearly_det)
yearly_det[which(rownames(yearly_det) %in% transect[xxx]),"nyears"] <- max_year - min_year
yearly_det[which(rownames(yearly_det) %in% transect[xxx]),"detections"] <- sum(calc)
yearly_det <- as.data.frame(matrix(NA, nrow = length(transect), ncol = 22))
rownames(yearly_det) <- transect
colnames(yearly_det) <- c(2002:2021,"nyears_trend", "detections")
for (xxx in 1:length(transect)){
data_transect <- m[which(m$tr2 %in% transect[xxx]), ]
# Year: Min and max year (if there are years with NA in between, those are considered within the time series)
data_transect_nona <- data_transect[, colSums(is.na(data_transect)) != nrow(data_transect)] # Delete columns with NA
min_year <- min(as.numeric(colnames(data_transect_nona)[-which(colnames(data_transect_nona) %in% c("X", "tr2"))]))
max_year <- max(as.numeric(colnames(data_transect_nona)[-which(colnames(data_transect_nona) %in% c("X", "tr2"))]))
calc <- data_transect_nona[,-which(colnames(data_transect_nona) %in% c("X", "tr2"))]
calc_years <- apply(calc, 2, sum)
for (x in 1:length(calc_years)){
yearly_det[which(rownames(yearly_det) %in% transect[xxx]),names(calc_years)[x]] <- calc_years[x]
}
yearly_det[which(rownames(yearly_det) %in% transect[xxx]),"nyears"] <- max_year - min_year
yearly_det[which(rownames(yearly_det) %in% transect[xxx]),"detections"] <- sum(calc)
}
View(yearly_det)
yearly_det <- as.data.frame(matrix(NA, nrow = length(transect), ncol = 22))
rownames(yearly_det) <- transect
colnames(yearly_det) <- c(2002:2021,"nyears_trend", "detections")
for (xxx in 1:length(transect)){
data_transect <- m[which(m$tr2 %in% transect[xxx]), ]
# Year: Min and max year (if there are years with NA in between, those are considered within the time series)
data_transect_nona <- data_transect[, colSums(is.na(data_transect)) != nrow(data_transect)] # Delete columns with NA
min_year <- min(as.numeric(colnames(data_transect_nona)[-which(colnames(data_transect_nona) %in% c("X", "tr2"))]))
max_year <- max(as.numeric(colnames(data_transect_nona)[-which(colnames(data_transect_nona) %in% c("X", "tr2"))]))
calc <- data_transect_nona[,-which(colnames(data_transect_nona) %in% c("X", "tr2"))]
calc_years <- apply(calc, 2, sum)
for (x in 1:length(calc_years)){
yearly_det[which(rownames(yearly_det) %in% transect[xxx]),names(calc_years)[x]] <- calc_years[x]
}
yearly_det[which(rownames(yearly_det) %in% transect[xxx]),"nyears_trend"] <- max_year - min_year
yearly_det[which(rownames(yearly_det) %in% transect[xxx]),"detections"] <- sum(calc)
}
View(yearly_det)
library(dplyr)
library(tidyr)
yearly_det <- arange(yearly_det, by = "detections")
yearly_det <- arrange(yearly_det, by = "detections")
View(yearly_det)
yearly_det <- as.data.frame(matrix(NA, nrow = length(transect), ncol = 22))
rownames(yearly_det) <- transect
colnames(yearly_det) <- c(2002:2021,"nyears_trend", "detections")
for (xxx in 1:length(transect)){
data_transect <- m[which(m$tr2 %in% transect[xxx]), ]
# Year: Min and max year (if there are years with NA in between, those are considered within the time series)
data_transect_nona <- data_transect[, colSums(is.na(data_transect)) != nrow(data_transect)] # Delete columns with NA
min_year <- min(as.numeric(colnames(data_transect_nona)[-which(colnames(data_transect_nona) %in% c("X", "tr2"))]))
max_year <- max(as.numeric(colnames(data_transect_nona)[-which(colnames(data_transect_nona) %in% c("X", "tr2"))]))
calc <- data_transect_nona[,-which(colnames(data_transect_nona) %in% c("X", "tr2"))]
calc_years <- apply(calc, 2, sum)
for (x in 1:length(calc_years)){
yearly_det[which(rownames(yearly_det) %in% transect[xxx]),names(calc_years)[x]] <- calc_years[x]
}
yearly_det[which(rownames(yearly_det) %in% transect[xxx]),"nyears_trend"] <- max_year - min_year
yearly_det[which(rownames(yearly_det) %in% transect[xxx]),"detections"] <- sum(calc)
}
View(yearly_det)
yearly_det$transect <- rownames(yearly_det)
yearly_det <- arrange(yearly_det, by = "detections")
View(yearly_det)
yearly_det <- arrange(yearly_det, detections)
View(yearly_det)
yearly_det$transect <- rownames(yearly_det)
yearly_det <- arrange(yearly_det, desc(detections))
yearly_det
yearly_det <- as.data.frame(matrix(NA, nrow = length(transect), ncol = 22))
rownames(yearly_det) <- transect
colnames(yearly_det) <- c(2002:2021,"nyears_trend", "detections")
for (xxx in 1:length(transect)){
data_transect <- m[which(m$tr2 %in% transect[xxx]), ]
# Year: Min and max year (if there are years with NA in between, those are considered within the time series)
data_transect_nona <- data_transect[, colSums(is.na(data_transect)) != nrow(data_transect)] # Delete columns with NA
min_year <- min(as.numeric(colnames(data_transect_nona)[-which(colnames(data_transect_nona) %in% c("X", "tr2"))]))
max_year <- max(as.numeric(colnames(data_transect_nona)[-which(colnames(data_transect_nona) %in% c("X", "tr2"))]))
calc <- data_transect_nona[,-which(colnames(data_transect_nona) %in% c("X", "tr2"))]
calc_years <- apply(calc, 2, sum)
for (x in 1:length(calc_years)){
yearly_det[which(rownames(yearly_det) %in% transect[xxx]),names(calc_years)[x]] <- calc_years[x]
}
yearly_det[which(rownames(yearly_det) %in% transect[xxx]),"nyears_trend"] <- max_year - min_year
yearly_det[which(rownames(yearly_det) %in% transect[xxx]),"detections"] <- sum(calc)
}
yearly_det$transect <- rownames(yearly_det)
yearly_det <- arrange(yearly_det, desc(detections))
setwd("D:/Otros/Adrien/Send data")
setwd("D:/Otros/Adrien/Send data")
clus <- openxlsx::read.xlsx("Data_DS_10_20")
setwd("D:/Otros/Adrien/Send data") # From 2010-2020
clus <- openxlsx::read.xlsx("Data_DS_10_20")
clus <- openxlsx::read.xlsx("Data_DS_10_20.xlxs")
clus <- openxlsx::read.xlsx("Data_DS_10_20.xlsx")
clusdat <- openxlsx::read.xlsx("Data_DS_10_20.xlsx")
View(clusdat)
clusdat <- clusdat[which(clusdat$Especie == "STTUR"),]
View(clusdat)
mean(clusdat$Nombre)
